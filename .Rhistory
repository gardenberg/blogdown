labs(x = "Kilde", y = "Lag", title = "Molde og Rosenborg i topp, Mjøndalen og Viking i bunn")+
scale_fill_gradien2(low = "green", mid = "white", high = "red")
ggplot(data = temp, aes(x=as.factor(kilde), y = fct_reorder(as.factor(Lag), plassering, .fun = mean, .desc = TRUE)))+
geom_tile(aes(fill = plassering))+
labs(x = "Kilde", y = "Lag", title = "Molde og Rosenborg i topp, Mjøndalen og Viking i bunn")+
scale_fill_gradient2(low = "green", mid = "white", high = "red")
ggplot(data = temp, aes(x=as.factor(kilde), y = fct_reorder(as.factor(Lag), plassering, .fun = mean, .desc = TRUE)))+
geom_tile(aes(fill = plassering))+
labs(x = "Kilde", y = "Lag", title = "Molde og Rosenborg i topp, Mjøndalen og Viking i bunn")+
scale_fill_gradient2(low = "green", mid = "white", high = "red", midpoint = 8)
ggplot(data = temp, aes(x=as.factor(kilde), y = fct_reorder(as.factor(Lag), plassering, .fun = mean, .desc = TRUE)))+
geom_tile(aes(fill = plassering))+
labs(x = "Kilde", y = "Lag", title = "Molde og Rosenborg i topp, Mjøndalen og Viking i bunn")+
scale_fill_gradient2(low = "blue", mid = "white", high = "orange", midpoint = 8)
ggplot(data = temp, aes(x=as.factor(kilde), y = fct_reorder(as.factor(Lag), plassering, .fun = mean, .desc = TRUE)))+
geom_tile(aes(fill = plassering))+
labs(x = "Kilde", y = "Lag", title = "Molde og Rosenborg i topp, Mjøndalen og Viking i bunn")+
scale_fill_gradient2(low = "steelblue", mid = "white", high = "orange", midpoint = 8)
ggplot(data = temp, aes(x=as.factor(kilde), y = fct_reorder(as.factor(Lag), plassering, .fun = mean, .desc = TRUE)))+
geom_tile(aes(fill = plassering))+
labs(x = "Kilde", y = "Lag", title = "Molde og Rosenborg i topp, Mjøndalen og Viking i bunn")+
scale_fill_gradient2(low = "steelblue", mid = "grey", high = "orange", midpoint = 8)
7.2/5
colMeans()
?colMeans
#biblioteker
library(here)
library(knitr)
suppressPackageStartupMessages(library(tidyverse))
#data
df = read.csv2(here("content/data/tippeliga_2019.csv"),stringsAsFactors = FALSE, na.strings = "", nrows = 16)%>%
select(-UniBet, - NordicBet) %>%
mutate(gjennomsnitt = rowMeans(select(df,-Lag),na.rm=TRUE)) %>%
arrange(gjennomsnitt)
kable(df)
#eksperiment med en heatmap-table
temp = gather(df,kilde,plassering,Nettavisen:gjennomsnitt)
ggplot(data = temp, aes(x=as.factor(kilde), y = fct_reorder(as.factor(Lag), plassering, .fun = mean, .desc = TRUE)))+
geom_tile(aes(fill = plassering))+
labs(x = "Kilde", y = "Lag", title = "Molde og Rosenborg i topp, Mjøndalen og Viking i bunn")+
scale_fill_gradient2(low = "steelblue", mid = "grey", high = "orange", midpoint = 8)
df = read.csv2(here("content/data/tippeliga_2019.csv"),stringsAsFactors = FALSE, na.strings = "", nrows = 16) %>%
select(., -UniBet, - NordicBet) %>%
mutate(gjennomsnitt = rowMeans(df,na.rm=TRUE)) %>%
arrange(gjennomsnitt)
names(df)[2:7]
numeric_vars = names(df)[2:7]
df = read.csv2(here("content/data/tippeliga_2019.csv"),stringsAsFactors = FALSE, na.strings = "", nrows = 16)
numeric_vars = names(df)[2:6]
df = read.csv2(here("content/data/tippeliga_2019.csv"),stringsAsFactors = FALSE, na.strings = "", nrows = 16) %>%
select(., -UniBet, - NordicBet)
numeric_vars = names(df)[2:6]
df = mutate(gjennomsnitt = rowMeans(select(.,numeric_vars),na.rm=TRUE)) %>%
arrange(gjennomsnitt)
df = mutate(gjennomsnitt = rowMeans(select(df,numeric_vars),na.rm=TRUE)) %>%
arrange(gjennomsnitt)
df = mutate(df, gjennomsnitt = rowMeans(select(.,numeric_vars),na.rm=TRUE)) %>%
arrange(gjennomsnitt)
df = mutate(df, gjennomsnitt = rowMeans(select(df,numeric_vars),na.rm=TRUE)) %>%
arrange(gjennomsnitt)
kable(df)
ggplot(data = temp, aes(x = Lag, y = plassering)) +
# add jittered points with alpha of 0.3 and color 'steelblue'
geom_jitter(color="steelblue",alpha=0.3) +
# make boxplot transparent with alpha = 0
geom_boxplot(alpha=0) +
labs(title = 'Speed of red cars by gender of driver')
?geom_jitter
ggplot(data = temp, aes(x = fct_reorder(as.factor(Lag), plassering, .fun = mean, .desc = TRUE), y = plassering)) +
# add jittered points with alpha of 0.3 and color 'steelblue'
geom_jitter(color="steelblue",alpha=0.3) +
# make boxplot transparent with alpha = 0
geom_boxplot(alpha=0) +
labs(title = 'Speed of red cars by gender of driver')
ggplot(data = temp, aes(x = fct_reorder(as.factor(Lag), plassering, .fun = mean, .desc = FALSE), y = plassering)) +
# add jittered points with alpha of 0.3 and color 'steelblue'
geom_jitter(color="steelblue",alpha=0.3) +
# make boxplot transparent with alpha = 0
geom_boxplot(alpha=0) +
labs(title = 'Speed of red cars by gender of driver')
ggplot(data = temp, aes(x = fct_reorder(as.factor(Lag), plassering, .fun = mean, .desc = FALSE), y = plassering)) +
#her bruker vi et boksplot for å vise variasjonen i plasseringer for hvert enkelt lag, men gjør det gjennomsiktig
geom_boxplot(alpha=0) +
#det er heller ikke flere punkter for hvert enkelt lag enn at en kan vise alle.
geom_jitter(color="steelblue",alpha=0.3) +
labs(x = "Lag", y = "Plassering", title = "Stor variasjon i tips for lag midt på tabellen", subtitle = "Større enighet om topp og bunn")
ggplot(data = temp, aes(x = fct_reorder(as.factor(Lag), plassering, .fun = mean, .desc = FALSE), y = plassering)) +
#her bruker vi et boksplot for å vise variasjonen i plasseringer for hvert enkelt lag, men gjør det gjennomsiktig
geom_boxplot(alpha=0) +
#det er heller ikke flere punkter for hvert enkelt lag enn at en kan vise alle.
geom_jitter(color="steelblue",alpha=0.3) +
labs(x = "Lag", y = "Plassering", title = "Stor variasjon i tips for lag midt på tabellen", subtitle = "Større enighet om topp og bunn") +
theme(axis.text.x = element_text(angle=90))
ggplot(data = temp, aes(x = fct_reorder(as.factor(Lag), plassering, .fun = mean, .desc = FALSE), y = plassering)) +
#her bruker vi et boksplot for å vise variasjonen i plasseringer for hvert enkelt lag, men gjør det gjennomsiktig
geom_boxplot(alpha=0) +
#det er heller ikke flere punkter for hvert enkelt lag enn at en kan vise alle.
geom_jitter(color="steelblue",alpha=0.3) +
labs(x = "Lag", y = "Plassering", title = "Stor variasjon i tips for lag midt på tabellen", subtitle = "Større enighet om topp og bunn") +
coord_flip()
ggplot(data = temp, aes(x = fct_reorder(as.factor(Lag), plassering, .fun = mean, .desc = FALSE), y = plassering)) +
#her bruker vi et boksplot for å vise variasjonen i plasseringer for hvert enkelt lag, men gjør det gjennomsiktig
#geom_boxplot(alpha=0) +
#det er heller ikke flere punkter for hvert enkelt lag enn at en kan vise alle.
geom_jitter(color="steelblue",alpha=0.3) +
labs(x = "Lag", y = "Plassering", title = "Stor variasjon i tips for lag midt på tabellen", subtitle = "Større enighet om topp og bunn") +
coord_flip()
theme(axis.text.x = element_text(angle=90))
ggplot(data = temp, aes(x = fct_reorder(as.factor(Lag), plassering, .fun = mean, .desc = FALSE), y = plassering)) +
#her bruker vi et boksplot for å vise variasjonen i plasseringer for hvert enkelt lag, men gjør det gjennomsiktig
geom_boxplot(alpha=0) +
#det er heller ikke flere punkter for hvert enkelt lag enn at en kan vise alle.
geom_jitter(color="steelblue",alpha=0.3) +
labs(x = "Lag", y = "Plassering", title = "Stor variasjon i tips for lag midt på tabellen", subtitle = "Større enighet om topp og bunn") +
coord_flip()
theme(axis.text.x = element_text(angle=90))
ggplot(data = temp, aes(x = fct_reorder(as.factor(Lag), plassering, .fun = mean, .desc = TRUE), y = plassering)) +
#her bruker vi et boksplot for å vise variasjonen i plasseringer for hvert enkelt lag, men gjør det gjennomsiktig
geom_boxplot(alpha=0) +
#det er heller ikke flere punkter for hvert enkelt lag enn at en kan vise alle.
geom_jitter(color="steelblue",alpha=0.3) +
labs(x = "Lag", y = "Plassering", title = "Stor variasjon i tips for lag midt på tabellen", subtitle = "Større enighet om topp og bunn") +
coord_flip()
theme(axis.text.x = element_text(angle=90))
ggplot(data = filter(temp, kilde != "gjennomsnitt"), aes(x = fct_reorder(as.factor(Lag), plassering, .fun = mean, .desc = TRUE), y = plassering)) +
#her bruker vi et boksplot for å vise variasjonen i plasseringer for hvert enkelt lag, men gjør det gjennomsiktig
geom_boxplot(alpha=0) +
#det er heller ikke flere punkter for hvert enkelt lag enn at en kan vise alle.
geom_jitter(color="steelblue",alpha=0.3) +
labs(x = "Lag", y = "Plassering", title = "Stor variasjon i tips for lag midt på tabellen", subtitle = "Større enighet om topp og bunn") +
coord_flip()
theme(axis.text.x = element_text(angle=90))
ggplot(data = filter(temp, kilde != "gjennomsnitt"), aes(x = fct_reorder(as.factor(Lag), plassering, .fun = mean, .desc = TRUE), y = plassering)) +
#her bruker vi et boksplot for å vise variasjonen i plasseringer for hvert enkelt lag, men gjør det gjennomsiktig
geom_boxplot(alpha=0) +
#det er heller ikke flere punkter for hvert enkelt lag enn at en kan vise alle.
geom_jitter(color="steelblue",alpha=0.3) +
labs(x = "Lag", y = "Plassering", title = "Stor variasjon i tips for lag midt på tabellen", subtitle = "Større enighet om topp og bunn") +
coord_flip()
theme(axis.text.x = element_text(angle=90))
#eksperiment med en heatmap-table
temp = gather(df,kilde,plassering,Nettavisen:gjennomsnitt)
ggplot(data = temp, aes(x=as.factor(kilde), y = fct_reorder(as.factor(Lag), plassering, .fun = mean, .desc = TRUE)))+
geom_tile(aes(fill = plassering))+
labs(x = "Kilde", y = "Lag", title = "Molde og Rosenborg i topp, Mjøndalen og Viking i bunn")+
scale_fill_gradient2(low = "steelblue", mid = "grey", high = "orange", midpoint = 8)
blogdown:::serve_site()
blogdown:::new_post_addin()
df = read.csv2("https://data.nav.no/dataset/408fc52c-b50e-4ee7-a620-305eaa5d56e7/resource/882e3e0f-cd3c-4d3a-8072-be7ba7b3d272/download/stillingstekster-2018.csv")
df = read.csv2("https://data.nav.no/dataset/408fc52c-b50e-4ee7-a620-305eaa5d56e7/resource/882e3e0f-cd3c-4d3a-8072-be7ba7b3d272/download/stillingstekster-2018.csv")
View(df)
?read.csv2
df = read.csv2("https://data.nav.no/dataset/408fc52c-b50e-4ee7-a620-305eaa5d56e7/resource/882e3e0f-cd3c-4d3a-8072-be7ba7b3d272/download/stillingstekster-2018.csv", stringsAsFactors = FALSE, fileEncoding = "UTF-8")
df = read.csv2("https://data.nav.no/dataset/408fc52c-b50e-4ee7-a620-305eaa5d56e7/resource/882e3e0f-cd3c-4d3a-8072-be7ba7b3d272/download/stillingstekster-2018.csv", stringsAsFactors = FALSE, fileEncoding = "ISO-8859-1")
df = read.csv2("https://data.nav.no/dataset/408fc52c-b50e-4ee7-a620-305eaa5d56e7/resource/882e3e0f-cd3c-4d3a-8072-be7ba7b3d272/download/stillingstekster-2018.csv", stringsAsFactors = FALSE)
View(df)
df = read.csv2("https://data.nav.no/dataset/408fc52c-b50e-4ee7-a620-305eaa5d56e7/resource/882e3e0f-cd3c-4d3a-8072-be7ba7b3d272/download/stillingstekster-2018.csv", stringsAsFactors = FALSE, quote = "")
df = read.csv2("https://data.nav.no/dataset/408fc52c-b50e-4ee7-a620-305eaa5d56e7/resource/882e3e0f-cd3c-4d3a-8072-be7ba7b3d272/download/stillingstekster-2018.csv", stringsAsFactors = FALSE, quote = "")
df = read.csv2("https://data.nav.no/dataset/408fc52c-b50e-4ee7-a620-305eaa5d56e7/resource/882e3e0f-cd3c-4d3a-8072-be7ba7b3d272/download/stillingstekster-2018.csv", stringsAsFactors = FALSE, quote = "", header = TRUE, comment.char = "")
df = read.csv2("https://data.nav.no/dataset/408fc52c-b50e-4ee7-a620-305eaa5d56e7/resource/882e3e0f-cd3c-4d3a-8072-be7ba7b3d272/download/stillingstekster-2018.csv", stringsAsFactors = FALSE, header = TRUE, comment.char = "")
df = read.csv2("https://data.nav.no/dataset/408fc52c-b50e-4ee7-a620-305eaa5d56e7/resource/882e3e0f-cd3c-4d3a-8072-be7ba7b3d272/download/stillingstekster-2018.csv", stringsAsFactors = FALSE, header = TRUE, fileEncoding = "UTF-8")
View(df)
blogdown:::serve_site()
temp = here("content","data","google_searches_ds_ai.csv")
blogdown:::serve_site()
library(here)
#sett inn figuren fra disse dataene
#https://trends.google.com/trends/explore?date=all&geo=NO&q=data%20science,Kunstig%20intelligens
temp = here("content","data","google_searches_ds_ai.csv")
?here
temp = read.csv(here("content","data","google_searches_ds_ai.csv"))
library(here)
temp = read.csv(here("content","data","google_searches_ds_ai.csv"))
?read.csv
temp = read.csv(here("content","data","google_searches_ds_ai.csv"), skip = 2
)
library(tidyverse)
blogdown:::serve_site()
df = read.csv(here("content","data","google_searches_ds_ai.csv"), skip = 2, stringsAsFactors = FALSE)
names(df) = c("dato", "datascience", "kunstig intelligens")
?gather
df = gather(df, searchterm, verdi, datascience:´kunstig intelligens´)
df = gather(df, searchterm, verdi, datascience:`kunstig intelligens`)
qplot(data = df, x = dato, y = verdi, colour = searchterm)
qplot(data = df, x = dato, y = verdi, colour = searchterm, geom = "line")
qplot(data = df, x = dato, y = verdi, colour = searchterm, group = searchterm, geom = "line")
?as.Date
df = mutate(df, dato = as.Date(dato, format = "%Y-%m"))
View(df)
df = read.csv(here("content","data","google_searches_ds_ai.csv"), skip = 2, stringsAsFactors = FALSE)
names(df) = c("dato", "datascience", "kunstig intelligens")
df = gather(df, searchterm, verdi, datascience:`kunstig intelligens`)
View(df)
df = mutate(df, dato_temp = as.Date(dato, format = "%Y-%m"))
df = mutate(df, dato_temp = as.Date(dato))
df = mutate(df, dato_temp = as.Date(dato, format = "%Y-%m"))
df$dato_temp = as.Date(df$dato, format = "%Y-%m")
df$dato_temp = as.Date(df$dato, format = "%Y - %m")
df$dato_temp = as.Date(df$dato, format = "%Y%m")
library(here)
library(tidyverse)
#sett inn figuren fra disse dataene
#https://trends.google.com/trends/explore?date=all&geo=NO&q=data%20science,Kunstig%20intelligens
df = read.csv(here("content","data","google_searches_ds_ai.csv"), skip = 2, stringsAsFactors = FALSE)
names(df) = c("dato", "datascience", "kunstig intelligens")
df = gather(df, searchterm, verdi, datascience:`kunstig intelligens`)
df$dato_temp = as.Date(df$dato, format = "%Y-%m")
qplot(data = df, x = dato, y = verdi, colour = searchterm, group = searchterm, geom = "line")
df$dato_temp = as.Date(df$dato, "%Y-%m")
lct <- Sys.getlocale("LC_TIME")
Sys.setlocale("LC_TIME", "C")
Sys.setlocale("LC_TIME", lct)
lct <- Sys.getlocale("LC_TIME")
Sys.setlocale("LC_TIME", "C")
df$dato_temp = as.Date(df$dato, "%Y-%m")
df = read.csv(here("content","data","google_searches_ds_ai.csv"), skip = 2, stringsAsFactors = FALSE, fileEncoding = "UTF-8")
names(df) = c("dato", "datascience", "kunstig intelligens")
df = gather(df, searchterm, verdi, datascience:`kunstig intelligens`)
df$dato_temp = as.Date(df$dato, "%Y-%m")
lct <- Sys.getlocale("LC_TIME")
Sys.setlocale("LC_TIME", "C")
df$dato_temp = as.Date(df$dato, "%Y-%m")
Sys.setlocale("LC_TIME", lct)
df$dato_temp = strptime(df$dato, "%Y-%m")
df$dato_temp = as.Date(paste0(df$dato,"-","01"), "%Y-%m")
df$dato_temp = as.Date(paste0(df$dato,"-","01"), "%Y-%m-%d")
names(df) = c("dato", "datascience", "kunstig intelligens")
df = gather(df, searchterm, verdi, datascience:`kunstig intelligens`)
df$dato = as.Date(paste0(df$dato,"-","01"), "%Y-%m-%d") #aner ikke hvorfor jeg må legge til en dag, men det fungerer
qplot(data = df, x = dato, y = verdi, colour = searchterm, group = searchterm, geom = "line")
df = read.csv(here("content","data","google_searches_ds_ai.csv"), skip = 2, stringsAsFactors = FALSE, fileEncoding = "UTF-8")
names(df) = c("dato", "datascience", "kunstig intelligens")
df = gather(df, searchterm, verdi, datascience:`kunstig intelligens`)
df$dato = as.Date(paste0(df$dato,"-","01"), "%Y-%m-%d") #aner ikke hvorfor jeg må legge til en dag, men det fungerer
qplot(data = df, x = dato, y = verdi, colour = searchterm, group = searchterm, geom = "line")
theme_set(theme_minimal())
qplot(data = df, x = dato, y = verdi, colour = searchterm, group = searchterm, geom = "line")
qplot(data = df, x = dato, y = verdi, colour = searchterm, group = searchterm, geom = "line")+
labs(colour = "søkeord", title ="Google-søk etter datavitenskap og AI følger hverandre tett")
blogdown:::serve_site()
df <- read.csv2("C:/Users/Kauna/Downloads/stillingstekster-2018.csv", encoding="UTF-8", stringsAsFactors=FALSE)
View(df)
temp = filter(df, grepl(Tittel.vasket, "data"))
?grepl
temp = filter(df, grepl("data", Tittel.vasket))
View(temp)
temp = filter(df, grepl("data science", Stillingsbeskrivelse.vasket))
View(temp)
str(temp)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
suppressPackageStartupMessages(library(tidyverse))
options("scipen"=100)
who_disease <- read_csv("data/who_disease.csv")
head(who_disease)
#geom_col
who_disease %>%
# filter to india in 1980
filter(.,country=="India",year==1980) %>%
# map x aesthetic to disease and y to cases
ggplot(aes(x=disease,y=cases)) +
# use geom_col to draw
geom_col()
#geom_bar
who_disease %>%
# filter data to observations of greater than 1,000 cases
filter(.,cases>1000) %>%
# map the x-axis to the region column
ggplot(aes(x=region)) +
# add a geom_bar call
geom_bar()
suppressPackageStartupMessages(library(tidyverse))
library(PxWebApiData)
alle_data = ApiData("https://data.ssb.no/api/v0/no/table/12060",
KOKkommuneregion0000 = TRUE,
ContentsCode = "KOSbesokbiblinnb0000",
Tid = TRUE
)
df <- alle_data[[1]] %>%
select(.,-statistikkvariabel,-`år`) #filtrerer ut unødvendig info
df <- alle_data[[1]] %>%
select(.,-statistikkvariabel) #filtrerer ut unødvendig info
?slice
?arrange
temp = filter(df, år=="2018")%>%
arrange(., value)
View(temp)
View(df)
temp = filter(df, `år`=="2017")%>%
arrange(., value)
View(temp)
temp = filter(df, `år`=="2017")%>%
arrange(., desc(value))
View(temp)
?head
temp = filter(df, `år`=="2017") %>%
arrange(., desc(value)) %>%
slice(., 1:10)
ggplot(data = temp, aes(x = region, y = value))+
geom_col()
#valg - et kjekt standard-tema for ggplot2
theme_set(theme_minimal())
ggplot(data = temp, aes(x = region, y = value))+
geom_col()
ggplot(data = temp, aes(x = region, y = value))+
geom_col()+
coord_flip()
?reorder
temp = filter(df, `år`=="2017") %>%
arrange(., desc(value)) %>%
slice(., 1:10) %>%
mutate(., region = as.factor(region))
ggplot(data = temp, aes(x = region, y = value))+
geom_col()+
coord_flip()
View(temp)
?fct_reorder
temp = filter(df, `år`=="2017") %>%
arrange(., desc(value)) %>%
slice(., 1:10) %>%
mutate(., region = as.factor(region), region = fct_reorder(region, value))
ggplot(data = temp, aes(x = region, y = value))+
geom_col()+
coord_flip()
View(temp)
ggplot(data = temp, aes(x = region, y = value))+
geom_col() +
coord_flip() +
labs(title ="Lesehestene i Stjørdal besøkte folkebiblioteket i gjennomsnitt 24 ganger i 2017", x = "Antall besøk per innbygger", y = "Kommune")
ggplot(data = temp, aes(x = region, y = value))+
geom_col() +
coord_flip() +
labs(title ="Lesehestene i Stjørdal besøkte folkebiblioteket mest", subtitle ="I gjennomsnitt 24 ganger i 2017", x = "Antall besøk per innbygger", y = "Kommune")
?geom_bbar
?geom_bar
ggplot(data = df, aes(x = region, y = value))+
geom_bar()
temp = mutate(df, region = as.factor(region), region = fct_reorder(region, value))
ggplot(data = df, aes(x = region, y = value))+
geom_bar()
ggplot(data = df, aes(x = region))+
geom_bar()
temp = group_by(df, region) %>%
mutate(., region = as.factor(region), region = fct_reorder(region, value))
temp = mutate(df, region = as.factor(region), region = fct_reorder(region, value))
temp = mutate(df, region = as.factor(region), region = fct_reorder(region, value)) %>%
slice(1:40)
ggplot(data = df, aes(x = region))+
geom_bar()
temp = mutate(df, region = as.factor(region), region = fct_reorder(region, value)) %>%
slice(1:40)
ggplot(data = temp, aes(x = region))+
geom_bar()
ggplot(data = temp, aes(x = region, weight = value))+
geom_bar()
temp = mutate(df, region = as.factor(region), region = fct_reorder(region, value, .fun = sum)) %>%
slice(1:40)
ggplot(data = temp, aes(x = region, weight = value))+
geom_bar()
temp = mutate(df, region = as.factor(region), region = fct_reorder(region, value, .fun = sum)) %>%
slice(1:40)
View(temp)
temp = mutate(df, region = as.factor(region)) %>%
group_by(., region) %>%
arrange(., desc(value))
?arrange
temp = mutate(df, region = as.factor(region)) %>%
group_by(., region) %>%
arrange(., desc(value), .by_group = TRUE)
temp = mutate(df, region = as.factor(region))) %>%
temp = mutate(df, region = as.factor(region)) %>%
slice(1:40)
temp = mutate(df, region = as.factor(region)) %>%
slice(1:40)
ggplot(data = temp, aes(x = region, weight = value))+
geom_bar()
?sampe
?sample
temp = filter(df, `år` == "2017") %>%
sample_n(., 15)
ggplot(data = temp) +
geom_point(aes(x = region, y = value))
ggplot(data = temp) +
geom_point(aes(x = region, y = value)) +
coord_flip()
temp = filter(df, `år` == "2017") %>%
sample_n(., 15) %>%
mutate(., region = as.factor(region), region = fct_reorder(region, value))
ggplot(data = temp) +
geom_point(aes(x = region, y = value)) +
coord_flip()
ggplot(data = temp) +
geom_point(aes(x = region, y = value)) +
coord_flip() +
labs(title = "Torsken og Farsun besøker biblioteket mer enn Solund og Midsund", y = "Kommune", x = "Antall besøk per innbygger")
ggplot(data = temp) +
geom_point(aes(x = region, y = value)) +
coord_flip() +
labs(title = "Torsken og Farsun besøker biblioteket mer enn Solund og Midsund", x = "Kommune", y = "Antall besøk per innbygger")
temp = mutate(df, region = as.factor(region)) %>%
slice(1:40)
ggplot(data = temp, aes(x = region, y = value))+
geom_point()
ggplot(data = temp, aes(x = region, y = value))+
geom_point() +
coord_flip()
temp = mutate(df, region = as.factor(region)) %>%
slice(1:40) %>%
mutate(., region = fct_reorder(region, value))
ggplot(data = temp, aes(x = region, y = value))+
geom_point() +
coord_flip()
ggplot(data = temp, aes(x = region, y = value))+
geom_point() +
coord_flip() +
labs(title = "Besøk til folkebiblioteket varierer mer mellom kommuner enn over år", x = "Kommune", y = "Antall besøk per innbygger")
temp = arrange(df, region, `år`)
View(df)
temp = filter(df, `år` == "2017"|`år` == "2015")
temp = filter(df, `år` == "2017"|`år` == "2015") %>%
slice(., 1:30)
?spread
temp = filter(df, `år` == "2017"|`år` == "2015") %>%
slice(., 1:30) %>%
spread(., `år`, value)
temp = filter(df, `år` == "2017"|`år` == "2015") %>%
slice(., 1:30) %>%
spread(., `år`, value, sep = "_")
temp = filter(df, `år` == "2017"|`år` == "2015") %>%
slice(., 1:30) %>%
spread(., `år`, value, sep = "_") %>%
mutate(., logFoldChange = log2(`år_2017`/`år_2015`))
temp = filter(df, `år` == "2017"|`år` == "2015") %>%
slice(., 1:30) %>%
spread(., `år`, value, sep = "_") %>%
mutate(., logFoldChange = log2(`år_2017`/`år_2015`)) %>%
mutate(., region = as.factor(region), region = fct_reorder(region, value))
temp = filter(df, `år` == "2017"|`år` == "2015") %>%
slice(., 1:30) %>%
spread(., `år`, value, sep = "_") %>%
mutate(., logFoldChange = log2(`år_2017`/`år_2015`)) %>%
mutate(., region = as.factor(region), region = fct_reorder(region, logFoldChange))
ggplot(data = temp, aes(x = logFoldChange, y = region)) +
geom_point()
ggplot(data = temp, aes(x = logFoldChange, y = region)) +
geom_point() +
geom_vline(xintercept=0)
ggplot(data = temp, aes(x = logFoldChange, y = region)) +
geom_point() +
geom_vline(xintercept=0) +
labs(title = "Hvaler og Råde har størst økning i gjennomsnittlig biblo-besøk", subtitle = "Fra 2015 til 2017", x = "Kommune")
ggplot(data = temp, aes(x = logFoldChange, y = region)) +
geom_point() +
geom_vline(xintercept=0) +
labs(title = "Hvaler og Råde har størst økning i gjennomsnittlig biblo-besøk", subtitle = "Fra 2015 til 2017", x = "Kommune") +
theme(
# get rid of the 'major' y grid lines
panel.grid.major.y=element_blank()
)
#beregner logFoldChange fra 2015 til 2017
#her er jeg implisitt avhengig av sorteringa av dataene som kommer inn. Dårlig praksis.
temp = filter(df, `år` == "2017"|`år` == "2015") %>%
slice(., 1:30) %>%
spread(., `år`, value, sep = "_") %>%
mutate(., logFoldChange = log2(`år_2017`/`år_2015`)) %>%
mutate(., region = as.factor(region), region = fct_reorder(region, logFoldChange))
ggplot(data = temp, aes(x = logFoldChange, y = region)) +
geom_point(size = 2) +
geom_vline(xintercept=0) +
labs(title = "Hvaler og Råde har størst økning i gjennomsnittlig biblo-besøk", subtitle = "Fra 2015 til 2017", x = "Kommune") +
theme(
# get rid of the 'major' y grid lines
panel.grid.major.y=element_blank()
)
#trekker et tilfeldig utvalg av enheter
temp = filter(df, `år` == "2017") %>%
sample_n(., 15) %>%
mutate(., region = as.factor(region), region = fct_reorder(region, value)) %>%
#punktdiagram
ggplot(data = temp) +
geom_point(aes(x = region, y = value)) +
coord_flip() +
labs(title = "Torsken og Farsund besøker biblioteket mer enn Solund og Midsund", x = "Kommune", y = "Antall besøk per innbygger")
#trekker et tilfeldig utvalg av enheter
temp = filter(df, `år` == "2017") %>%
sample_n(., 15) %>%
mutate(., region = as.factor(region), region = fct_reorder(region, value))
#punktdiagram
ggplot(data = temp) +
geom_point(aes(x = region, y = value)) +
coord_flip() +
labs(title = "Torsken og Farsund besøker biblioteket mer enn Solund og Midsund", x = "Kommune", y = "Antall besøk per innbygger")
#trekker et tilfeldig utvalg av enheter
temp = filter(df, `år` == "2017") %>%
sample_n(., 15) %>%
mutate(., region = as.factor(region), region = fct_reorder(region, value))
#punktdiagram
ggplot(data = temp) +
geom_point(aes(x = region, y = value)) +
coord_flip() +
labs(title = "Gjennomsnittlige besøk per innbygger i 2017", subtitle = "Tilfeldig utvalgte kommuner", x = "Kommune", y = "Antall besøk per innbygger")
#geom_bar
temp = mutate(df, region = as.factor(region)) %>%
slice(1:40) %>%
mutate(., region = fct_reorder(region, value))
ggplot(data = temp, aes(x = region, y = value))+
geom_point() +
coord_flip() +
labs(title = "Besøk til folkebiblioteket varierer mer mellom kommuner enn over år", x = "Kommune", y = "Antall besøk per innbygger")
blogdown:::serve_site()
blogdown:::new_post_addin()
