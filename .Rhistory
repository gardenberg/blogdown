Tid = TRUE
)
df <- alle_data[[1]] %>%
select(.,-statistikkvariabel,-`år`) #filtrerer ut unødvendig info
df <- alle_data[[1]] %>%
select(.,-statistikkvariabel) #filtrerer ut unødvendig info
?slice
?arrange
temp = filter(df, år=="2018")%>%
arrange(., value)
View(temp)
View(df)
temp = filter(df, `år`=="2017")%>%
arrange(., value)
View(temp)
temp = filter(df, `år`=="2017")%>%
arrange(., desc(value))
View(temp)
?head
temp = filter(df, `år`=="2017") %>%
arrange(., desc(value)) %>%
slice(., 1:10)
ggplot(data = temp, aes(x = region, y = value))+
geom_col()
#valg - et kjekt standard-tema for ggplot2
theme_set(theme_minimal())
ggplot(data = temp, aes(x = region, y = value))+
geom_col()
ggplot(data = temp, aes(x = region, y = value))+
geom_col()+
coord_flip()
?reorder
temp = filter(df, `år`=="2017") %>%
arrange(., desc(value)) %>%
slice(., 1:10) %>%
mutate(., region = as.factor(region))
ggplot(data = temp, aes(x = region, y = value))+
geom_col()+
coord_flip()
View(temp)
?fct_reorder
temp = filter(df, `år`=="2017") %>%
arrange(., desc(value)) %>%
slice(., 1:10) %>%
mutate(., region = as.factor(region), region = fct_reorder(region, value))
ggplot(data = temp, aes(x = region, y = value))+
geom_col()+
coord_flip()
View(temp)
ggplot(data = temp, aes(x = region, y = value))+
geom_col() +
coord_flip() +
labs(title ="Lesehestene i Stjørdal besøkte folkebiblioteket i gjennomsnitt 24 ganger i 2017", x = "Antall besøk per innbygger", y = "Kommune")
ggplot(data = temp, aes(x = region, y = value))+
geom_col() +
coord_flip() +
labs(title ="Lesehestene i Stjørdal besøkte folkebiblioteket mest", subtitle ="I gjennomsnitt 24 ganger i 2017", x = "Antall besøk per innbygger", y = "Kommune")
?geom_bbar
?geom_bar
ggplot(data = df, aes(x = region, y = value))+
geom_bar()
temp = mutate(df, region = as.factor(region), region = fct_reorder(region, value))
ggplot(data = df, aes(x = region, y = value))+
geom_bar()
ggplot(data = df, aes(x = region))+
geom_bar()
temp = group_by(df, region) %>%
mutate(., region = as.factor(region), region = fct_reorder(region, value))
temp = mutate(df, region = as.factor(region), region = fct_reorder(region, value))
temp = mutate(df, region = as.factor(region), region = fct_reorder(region, value)) %>%
slice(1:40)
ggplot(data = df, aes(x = region))+
geom_bar()
temp = mutate(df, region = as.factor(region), region = fct_reorder(region, value)) %>%
slice(1:40)
ggplot(data = temp, aes(x = region))+
geom_bar()
ggplot(data = temp, aes(x = region, weight = value))+
geom_bar()
temp = mutate(df, region = as.factor(region), region = fct_reorder(region, value, .fun = sum)) %>%
slice(1:40)
ggplot(data = temp, aes(x = region, weight = value))+
geom_bar()
temp = mutate(df, region = as.factor(region), region = fct_reorder(region, value, .fun = sum)) %>%
slice(1:40)
View(temp)
temp = mutate(df, region = as.factor(region)) %>%
group_by(., region) %>%
arrange(., desc(value))
?arrange
temp = mutate(df, region = as.factor(region)) %>%
group_by(., region) %>%
arrange(., desc(value), .by_group = TRUE)
temp = mutate(df, region = as.factor(region))) %>%
temp = mutate(df, region = as.factor(region)) %>%
slice(1:40)
temp = mutate(df, region = as.factor(region)) %>%
slice(1:40)
ggplot(data = temp, aes(x = region, weight = value))+
geom_bar()
?sampe
?sample
temp = filter(df, `år` == "2017") %>%
sample_n(., 15)
ggplot(data = temp) +
geom_point(aes(x = region, y = value))
ggplot(data = temp) +
geom_point(aes(x = region, y = value)) +
coord_flip()
temp = filter(df, `år` == "2017") %>%
sample_n(., 15) %>%
mutate(., region = as.factor(region), region = fct_reorder(region, value))
ggplot(data = temp) +
geom_point(aes(x = region, y = value)) +
coord_flip()
ggplot(data = temp) +
geom_point(aes(x = region, y = value)) +
coord_flip() +
labs(title = "Torsken og Farsun besøker biblioteket mer enn Solund og Midsund", y = "Kommune", x = "Antall besøk per innbygger")
ggplot(data = temp) +
geom_point(aes(x = region, y = value)) +
coord_flip() +
labs(title = "Torsken og Farsun besøker biblioteket mer enn Solund og Midsund", x = "Kommune", y = "Antall besøk per innbygger")
temp = mutate(df, region = as.factor(region)) %>%
slice(1:40)
ggplot(data = temp, aes(x = region, y = value))+
geom_point()
ggplot(data = temp, aes(x = region, y = value))+
geom_point() +
coord_flip()
temp = mutate(df, region = as.factor(region)) %>%
slice(1:40) %>%
mutate(., region = fct_reorder(region, value))
ggplot(data = temp, aes(x = region, y = value))+
geom_point() +
coord_flip()
ggplot(data = temp, aes(x = region, y = value))+
geom_point() +
coord_flip() +
labs(title = "Besøk til folkebiblioteket varierer mer mellom kommuner enn over år", x = "Kommune", y = "Antall besøk per innbygger")
temp = arrange(df, region, `år`)
View(df)
temp = filter(df, `år` == "2017"|`år` == "2015")
temp = filter(df, `år` == "2017"|`år` == "2015") %>%
slice(., 1:30)
?spread
temp = filter(df, `år` == "2017"|`år` == "2015") %>%
slice(., 1:30) %>%
spread(., `år`, value)
temp = filter(df, `år` == "2017"|`år` == "2015") %>%
slice(., 1:30) %>%
spread(., `år`, value, sep = "_")
temp = filter(df, `år` == "2017"|`år` == "2015") %>%
slice(., 1:30) %>%
spread(., `år`, value, sep = "_") %>%
mutate(., logFoldChange = log2(`år_2017`/`år_2015`))
temp = filter(df, `år` == "2017"|`år` == "2015") %>%
slice(., 1:30) %>%
spread(., `år`, value, sep = "_") %>%
mutate(., logFoldChange = log2(`år_2017`/`år_2015`)) %>%
mutate(., region = as.factor(region), region = fct_reorder(region, value))
temp = filter(df, `år` == "2017"|`år` == "2015") %>%
slice(., 1:30) %>%
spread(., `år`, value, sep = "_") %>%
mutate(., logFoldChange = log2(`år_2017`/`år_2015`)) %>%
mutate(., region = as.factor(region), region = fct_reorder(region, logFoldChange))
ggplot(data = temp, aes(x = logFoldChange, y = region)) +
geom_point()
ggplot(data = temp, aes(x = logFoldChange, y = region)) +
geom_point() +
geom_vline(xintercept=0)
ggplot(data = temp, aes(x = logFoldChange, y = region)) +
geom_point() +
geom_vline(xintercept=0) +
labs(title = "Hvaler og Råde har størst økning i gjennomsnittlig biblo-besøk", subtitle = "Fra 2015 til 2017", x = "Kommune")
ggplot(data = temp, aes(x = logFoldChange, y = region)) +
geom_point() +
geom_vline(xintercept=0) +
labs(title = "Hvaler og Råde har størst økning i gjennomsnittlig biblo-besøk", subtitle = "Fra 2015 til 2017", x = "Kommune") +
theme(
# get rid of the 'major' y grid lines
panel.grid.major.y=element_blank()
)
#beregner logFoldChange fra 2015 til 2017
#her er jeg implisitt avhengig av sorteringa av dataene som kommer inn. Dårlig praksis.
temp = filter(df, `år` == "2017"|`år` == "2015") %>%
slice(., 1:30) %>%
spread(., `år`, value, sep = "_") %>%
mutate(., logFoldChange = log2(`år_2017`/`år_2015`)) %>%
mutate(., region = as.factor(region), region = fct_reorder(region, logFoldChange))
ggplot(data = temp, aes(x = logFoldChange, y = region)) +
geom_point(size = 2) +
geom_vline(xintercept=0) +
labs(title = "Hvaler og Råde har størst økning i gjennomsnittlig biblo-besøk", subtitle = "Fra 2015 til 2017", x = "Kommune") +
theme(
# get rid of the 'major' y grid lines
panel.grid.major.y=element_blank()
)
#trekker et tilfeldig utvalg av enheter
temp = filter(df, `år` == "2017") %>%
sample_n(., 15) %>%
mutate(., region = as.factor(region), region = fct_reorder(region, value)) %>%
#punktdiagram
ggplot(data = temp) +
geom_point(aes(x = region, y = value)) +
coord_flip() +
labs(title = "Torsken og Farsund besøker biblioteket mer enn Solund og Midsund", x = "Kommune", y = "Antall besøk per innbygger")
#trekker et tilfeldig utvalg av enheter
temp = filter(df, `år` == "2017") %>%
sample_n(., 15) %>%
mutate(., region = as.factor(region), region = fct_reorder(region, value))
#punktdiagram
ggplot(data = temp) +
geom_point(aes(x = region, y = value)) +
coord_flip() +
labs(title = "Torsken og Farsund besøker biblioteket mer enn Solund og Midsund", x = "Kommune", y = "Antall besøk per innbygger")
#trekker et tilfeldig utvalg av enheter
temp = filter(df, `år` == "2017") %>%
sample_n(., 15) %>%
mutate(., region = as.factor(region), region = fct_reorder(region, value))
#punktdiagram
ggplot(data = temp) +
geom_point(aes(x = region, y = value)) +
coord_flip() +
labs(title = "Gjennomsnittlige besøk per innbygger i 2017", subtitle = "Tilfeldig utvalgte kommuner", x = "Kommune", y = "Antall besøk per innbygger")
#geom_bar
temp = mutate(df, region = as.factor(region)) %>%
slice(1:40) %>%
mutate(., region = fct_reorder(region, value))
ggplot(data = temp, aes(x = region, y = value))+
geom_point() +
coord_flip() +
labs(title = "Besøk til folkebiblioteket varierer mer mellom kommuner enn over år", x = "Kommune", y = "Antall besøk per innbygger")
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
#pakker
suppressPackageStartupMessages(library(tidyverse))
library(PxWebApiData)
#valg - et kjekt standard-tema for ggplot2
theme_set(theme_minimal())
?ApiData
sfo_data = ApiData("https://data.ssb.no/api/v0/no/table/11975",
KOKkommuneregion0000 = TRUE,
ContentsCode = "KOSandsfo69kp0000",
Tid = "2018"
)
df = sfo_data[[2]]
df = sfo_data[[2]] %>%
select(., -ContentsCode, -Tid)
?nchar
nchar(KoKkommuneregion0000)
df = sfo_data[[2]] %>%
select(., -ContentsCode, -Tid) %>%
filter(., nchar(KoKkommuneregion0000) == 4)
df = sfo_data[[2]] %>%
select(., -ContentsCode, -Tid) %>%
filter(., nchar(KOKkommuneregion0000) == 4)
?geom_histogram
ggplot(data = df, aes(value)) +
geom_histogram()
ggplot(data = df, aes(value)) +
geom_histogram(bins = 100)
View(df)
ggplot(data = df, aes(value)) +
geom_histogram(bins = 50) +
labs(y = "Antall kommuner", x = "Andel barn i SFO", title = "De fleste kommuner har rundt 30 - 60 % deltakelse i SFO")
ggplot(data = df, aes(value)) +
geom_histogram(bins = 50, width = 1, center = 0) +
labs(y = "Antall kommuner", x = "Andel barn i SFO", title = "De fleste kommuner har rundt 30 - 60 % deltakelse i SFO")
ggplot(data = df, aes(value)) +
geom_histogram(bins = 50, center = 0) +
labs(y = "Antall kommuner", x = "Andel barn i SFO", title = "De fleste kommuner har rundt 30 - 60 % deltakelse i SFO")
ggplot(data = df, aes(value)) +
geom_histogram(bins = 50, center = 1) +
labs(y = "Antall kommuner", x = "Andel barn i SFO", title = "De fleste kommuner har rundt 30 - 60 % deltakelse i SFO")
ggplot(data = df, aes(value)) +
geom_histogram(bins = 50, center = 0.5) +
labs(y = "Antall kommuner", x = "Andel barn i SFO", title = "De fleste kommuner har rundt 30 - 60 % deltakelse i SFO")
ggplot(data = df, aes(value)) +
geom_histogram(binwidth = 1, center = 0.5) +
labs(y = "Antall kommuner", x = "Andel barn i SFO", title = "De fleste kommuner har rundt 30 - 60 % deltakelse i SFO")
ggplot(data = df, aes(value)) +
geom_histogram(binwidth = 5, center = 0.5) +
labs(y = "Antall kommuner", x = "Andel barn i SFO", title = "De fleste kommuner har rundt 30 - 60 % deltakelse i SFO")
ggplot(data = df, aes(value)) +
geom_histogram(binwidth = 5, center = 2.5) +
labs(y = "Antall kommuner", x = "Andel barn i SFO", title = "De fleste kommuner har rundt 30 - 60 % deltakelse i SFO")
summary(df$value)
library(here)
sentralitet = read.csv2(here("content/data/sentralitet_2018.csv"),stringsAsFactors = FALSE)
?read.csv2
sentralitet = read.csv2(here("content/data/sentralitet_2018.csv"), stringsAsFactors = FALSE, colClasses = c("character", "integer", "integer"))
ggplot(data = df, aes(value)) +
geom_histogram(binwidth = 5, center = 2.5) +
labs(y = "Antall kommuner", x = "Andel barn i SFO", title = "De fleste kommuner har rundt 40 - 60 % deltakelse i SFO")
names(df) = c("knr_2018","value")
df = left_join(df, sentralitet)
ggplot(data = df, aes(value)) +
geom_freqpoly(binwidth = 5, center = 2.5) +
labs(y = "Antall kommuner", x = "Andel barn i SFO", title = "De fleste kommuner har rundt 40 - 60 % deltakelse i SFO")
ggplot(data = df, aes(value, colour = sklasse_2018)) +
geom_freqpoly(binwidth = 5, center = 2.5) +
labs(y = "Antall kommuner", x = "Andel barn i SFO", title = "De fleste kommuner har rundt 40 - 60 % deltakelse i SFO")
ggplot(data = df, aes(value, colour = as.factor(sklasse_2018))) +
geom_freqpoly(binwidth = 5, center = 2.5) +
labs(y = "Antall kommuner", x = "Andel barn i SFO", title = "De fleste kommuner har rundt 40 - 60 % deltakelse i SFO")
?as.factor
sentralitet$sklasse_2018 = as.factor(sentralitet$sklasse_2018, levels = c("1", "2", "3", "4", "5", "6"), labels = c("mest sentral", "2", "3", "4", "5", "minst sentral"))
summary(as.factor(sentralitet$sklasse_2018))
sentralitet$sklasse_2018 = as.factor(sentralitet$sklasse_2018, labels = c("mest sentral", "2", "3", "4", "5", "minst sentral"))
as.factor(sentralitet$sklasse_2018)
sentralitet$sklasse_2018 = as.factor(sentralitet$sklasse_2018, labels = c("Mest sentral", "2", "3", "4", "5", "Minst sentral"))
sentralitet$sklasse_2018 = factor(sentralitet$sklasse_2018, labels = c("Mest sentral", "2", "3", "4", "5", "Minst sentral"))
summary(sentralitet$sklasse_2018)
#SFO
sfo_data = ApiData("https://data.ssb.no/api/v0/no/table/11975",
KOKkommuneregion0000 = TRUE,
ContentsCode = "KOSandsfo69kp0000",
Tid = "2018"
)
df = sfo_data[[2]] %>%
select(., -ContentsCode, -Tid) %>% #fjerner variabler med kun 1 verdi (konstanter)
filter(., nchar(KOKkommuneregion0000) == 4) #filtrer ut alle regioner som ikke har 4 karakterer
names(df) = c("knr_2018","value")
#sentralitet
sentralitet = read.csv2(here("content/data/sentralitet_2018.csv"), stringsAsFactors = FALSE, colClasses = c("character", "integer", "integer"))
sentralitet$sklasse_2018 = factor(sentralitet$sklasse_2018, labels = c("Mest sentral", "2", "3", "4", "5", "Minst sentral"))
df = left_join(df, sentralitet)
ggplot(data = df, aes(value, colour = as.factor(sklasse_2018))) +
geom_freqpoly(binwidth = 5, center = 2.5) +
labs(y = "Antall kommuner", x = "Andel barn i SFO", colour = "Sentralitet", title = "De fleste kommuner har rundt 40 - 60 % deltakelse i SFO")
?geom_freqpoly
ggplot(data = df, aes(value, colour = sklasse_2018)) +
geom_freqpoly(binwidth = 5, center = 2.5) +
labs(y = "Antall kommuner", x = "Andel barn i SFO", colour = "Sentralitet", title = "De fleste kommuner har rundt 40 - 60 % deltakelse i SFO")
ggplot(data = df, aes(x = sklasse_2018, y = value)) +
geom_jitter(colour = "steelblue", alpha = 0.3) +
geom_boxplot()
#SFO
sfo_data = ApiData("https://data.ssb.no/api/v0/no/table/11975",
KOKkommuneregion0000 = TRUE,
ContentsCode = "KOSandsfo69kp0000",
Tid = "2018"
)
df = sfo_data[[2]] %>%
select(., -ContentsCode, -Tid) %>% #fjerner variabler med kun 1 verdi (konstanter)
filter(., nchar(KOKkommuneregion0000) == 4) %>% #filtrer ut alle regioner som ikke har 4 karakterer
filter(., is.na(value) == TRUE)
names(df) = c("knr_2018","value")
#sentralitet
sentralitet = read.csv2(here("content/data/sentralitet_2018.csv"), stringsAsFactors = FALSE, colClasses = c("character", "integer", "integer"))
sentralitet$sklasse_2018 = factor(sentralitet$sklasse_2018, labels = c("Mest sentral", "2", "3", "4", "5", "Minst sentral"))
df = left_join(df, sentralitet)
#SFO
sfo_data = ApiData("https://data.ssb.no/api/v0/no/table/11975",
KOKkommuneregion0000 = TRUE,
ContentsCode = "KOSandsfo69kp0000",
Tid = "2018"
)
df = sfo_data[[2]] %>%
select(., -ContentsCode, -Tid) %>% #fjerner variabler med kun 1 verdi (konstanter)
filter(., nchar(KOKkommuneregion0000) == 4) %>% #filtrer ut alle regioner som ikke har 4 karakterer
filter(., is.na(value) == FALSE)
names(df) = c("knr_2018","value")
#sentralitet
sentralitet = read.csv2(here("content/data/sentralitet_2018.csv"), stringsAsFactors = FALSE, colClasses = c("character", "integer", "integer"))
sentralitet$sklasse_2018 = factor(sentralitet$sklasse_2018, labels = c("Mest sentral", "2", "3", "4", "5", "Minst sentral"))
df = left_join(df, sentralitet)
ggplot(data = df, aes(value)) +
geom_histogram(binwidth = 5, center = 2.5) +
labs(y = "Antall kommuner", x = "Andel barn i SFO", title = "De fleste kommuner har rundt 40 - 60 % deltakelse i SFO")
ggplot(data = df, aes(value, colour = sklasse_2018)) +
geom_freqpoly(binwidth = 5, center = 2.5) +
labs(y = "Antall kommuner", x = "Andel barn i SFO", colour = "Sentralitet", title = "De fleste kommuner har rundt 40 - 60 % deltakelse i SFO")
ggplot(data = df, aes(x = sklasse_2018, y = value)) +
geom_jitter(colour = "steelblue", alpha = 0.3) +
geom_boxplot()
ggplot(data = df, aes(x = sklasse_2018, y = value)) +
geom_jitter(colour = "steelblue", alpha = 0.3) +
geom_boxplot(alpha = 0)
ggplot(data = df, aes(x = sklasse_2018, y = value)) +
geom_jitter(colour = "steelblue", alpha = 0.3) +
geom_boxplot(alpha = 0)
ggplot(data = df, aes(x = sklasse_2018, y = value)) +
geom_jitter(colour = "steelblue", alpha = 0.3) +
geom_boxplot(alpha = 0) +
labs(x = "Sentralitet", y = "Andel barn i SFO", title = "De mest sentrale kommunene har høyere deltakelse i SFO")
sum(is.na(df$value) == TRUE)
sum(is.na(df$sklasse_2018) == TRUE)
ggplot(data = df, aes(x = sklasse_2018, y = value)) +
geom_jitter(colour = "steelblue", alpha = 0.3) +
geom_boxplot(alpha = 1) +
labs(x = "Sentralitet", y = "Andel barn i SFO", title = "De mest sentrale kommunene har høyere deltakelse i SFO")
ggplot(data = df, aes(x = sklasse_2018, y = value)) +
geom_jitter(colour = "steelblue", alpha = 0.3) +
geom_boxplot(alpha = 0) +
labs(x = "Sentralitet", y = "Andel barn i SFO", title = "De mest sentrale kommunene har høyere deltakelse i SFO")
library(ggridges)
ggplot(data = df, aes(x = value, y = sklasse_2018)) +
geom_density_ridges(bandwidth = 3.5, alpha = 0.7) +
scale_x_continuous(limits = c(0, 150), expand = c(0,0)) +
theme(axis.ticks.y = element_blank())
ggplot(data = df, aes(x = value, y = sklasse_2018)) +
geom_density_ridges(bandwidth = 3.5, alpha = 0.7) +
scale_x_continuous(limits = c(0, 100), expand = c(0,0)) +
theme(axis.ticks.y = element_blank())
ggplot(data = df, aes(x = value, y = sklasse_2018)) +
geom_density_ridges(bandwidth = 2.5, alpha = 0.7) +
scale_x_continuous(limits = c(0, 100), expand = c(0,0)) +
theme(axis.ticks.y = element_blank()) +
labs(x = "Andel i SFO", y = "Sentralitet")
?geom_density_ridges
ggplot(data = df, aes(x = value, y = sklasse_2018)) +
geom_density_ridges(alpha = 0.7) +
scale_x_continuous(limits = c(0, 100), expand = c(0,0)) +
theme(axis.ticks.y = element_blank()) +
labs(x = "Andel i SFO", y = "Sentralitet")
ggplot(data = df, aes(x = sindeks_2018, y = value)) +
geom_point()
ggplot(data = df, aes(x = sindeks_2018, y = value)) +
geom_jitter(alpha = 0.3)
ggplot(data = df, aes(x = sindeks_2018, y = value)) +
geom_jitter(alpha = 0.3) +
geom_smooth()
?annotate
#SFO
sfo_data = ApiData("https://data.ssb.no/api/v0/no/table/11975",
KOKkommuneregion0000 = TRUE,
ContentsCode = "KOSandsfo69kp0000",
Tid = "2018"
)
df = sfo_data[[2]] %>%
select(., -ContentsCode, -Tid) %>% #fjerner variabler med kun 1 verdi (konstanter)
filter(., nchar(KOKkommuneregion0000) == 4) %>% #filtrer ut alle regioner som ikke har 4 karakterer
names(df) = c("knr_2018","value")
#pakker
suppressPackageStartupMessages(library(tidyverse))
library(PxWebApiData)
library(here)
library(ggridges)
#valg - et kjekt standard-tema for ggplot2
theme_set(theme_minimal())
#SFO
sfo_data = ApiData("https://data.ssb.no/api/v0/no/table/11975",
KOKkommuneregion0000 = TRUE,
ContentsCode = "KOSandsfo69kp0000",
Tid = "2018"
)
df = sfo_data[[2]] %>%
select(., -ContentsCode, -Tid) %>% #fjerner variabler med kun 1 verdi (konstanter)
filter(., nchar(KOKkommuneregion0000) == 4) %>% #filtrer ut alle regioner som ikke har 4 karakterer
names(df) = c("knr_2018","value")
#SFO
sfo_data = ApiData("https://data.ssb.no/api/v0/no/table/11975",
KOKkommuneregion0000 = TRUE,
ContentsCode = "KOSandsfo69kp0000",
Tid = "2018"
)
df = sfo_data[[2]] %>%
select(., -ContentsCode, -Tid) %>% #fjerner variabler med kun 1 verdi (konstanter)
filter(., nchar(KOKkommuneregion0000) == 4) #filtrer ut alle regioner som ikke har 4 karakterer
names(df) = c("knr_2018","value")
#sentralitet
sentralitet = read.csv2(here("content/data/sentralitet_2018.csv"), stringsAsFactors = FALSE, colClasses = c("character", "integer", "integer"))
sentralitet$sklasse_2018 = factor(sentralitet$sklasse_2018, labels = c("Mest sentral", "2", "3", "4", "5", "Minst sentral"))
df = left_join(df, sentralitet) %>%
filter(., is.na(value) == FALSE, is.na(sklasse_2018) == FALSE)
ggplot(data = df, aes(x = sklasse_2018, y = value)) +
geom_jitter(colour = "steelblue", alpha = 0.3) +
geom_boxplot(alpha = 0) +
labs(x = "Sentralitet", y = "Andel barn i SFO", title = "De mest sentrale kommunene har høyere deltakelse i SFO")
ggplot(data = df, aes(x = sklasse_2018, y = value)) +
geom_jitter(colour = "steelblue", alpha = 0.3) +
geom_boxplot(alpha = 0) +
labs(x = "Sentralitet", y = "Andel barn i SFO", title = "Flest bybarn bruker SFO")
ggplot(data = df, aes(x = sklasse_2018, y = value)) +
geom_jitter(colour = "steelblue", alpha = 0.3) +
geom_boxplot(alpha = 0) +
labs(x = "Sentralitet", y = "Andel barn i SFO", title = "Flest bybarn bruker SFO") +
annotate("text", x = 7, y = 50, label = "3. kvartil")
?scale_x_discrete
ggplot(data = df, aes(x = sklasse_2018, y = value)) +
geom_jitter(colour = "steelblue", alpha = 0.3) +
geom_boxplot(alpha = 0) +
labs(x = "Sentralitet", y = "Andel barn i SFO", title = "Flest bybarn bruker SFO") +
scale_x_discrete(limits = c(0,7)) +
annotate("text", x = 7, y = 50, label = "3. kvartil")
ggplot(data = df, aes(x = sklasse_2018, y = value)) +
geom_jitter(colour = "steelblue", alpha = 0.3) +
geom_boxplot(alpha = 0) +
labs(x = "Sentralitet", y = "Andel barn i SFO", title = "Flest bybarn bruker SFO") +
annotate("text", x = 7, y = 50, label = "3. kvartil")
ggplot(data = df, aes(x = sklasse_2018, y = value)) +
geom_jitter(colour = "steelblue", alpha = 0.3) +
geom_boxplot(alpha = 0) +
labs(x = "Sentralitet", y = "Andel barn i SFO", title = "Flest bybarn bruker SFO") +
annotate("text", x = 6.5, y = 50, label = "3. kvartil")
ggplot(data = df, aes(x = sklasse_2018, y = value)) +
geom_jitter(colour = "steelblue", alpha = 0.3) +
geom_boxplot(alpha = 0) +
labs(x = "Sentralitet", y = "Andel barn i SFO", title = "Flest bybarn bruker SFO") +
annotate("text", x = 1.5, y = 50, label = "3. kvartil")
ggplot(data = df, aes(x = sklasse_2018, y = value)) +
geom_jitter(colour = "steelblue", alpha = 0.3) +
geom_boxplot(alpha = 0) +
labs(x = "Sentralitet", y = "Andel barn i SFO", title = "Flest bybarn bruker SFO") +
annotate("text", x = 1.5, y = 80, label = "3. kvartil") +
annotate("text", x = 1.5, y = 70, label = "Median") +
annotate("text", x = 1.5, y = 65, label = "1. kvartil")
blogdown:::insert_image_addin()
