geom_bar(aes(x = puls_sone_maks))
qplot(data = df, x = duration_min)
qplot(data = df, x = duration_min, binwidth = 10)
qplot(data = df, x = duration_min, binwidth = 5)
summary(df$duration_min)
temp = group_by(df, year, week) %>%
summarise(antall_minutter = sum(duration_min))
View(temp)
temp = group_by(df, year, week) %>%
summarise(antall_minutter = sum(duration_min)) %>%
ungroup()
temp = left_join(expand(temp, year, week = 1:52), temp)
View(temp)
temp = group_by(df, year, week) %>%
summarise(antall_minutter = sum(duration_min)) %>%
ungroup()
temp = left_join(expand(temp, year, week = 1:52), temp) %>%
mutate(antall_minutter = ifelse(is.na(antall_minutter), 0, antall_minutter)) %>%
mutate(yearweek = ifelse(nchar(week) == 1, paste0(0, week), week),
yearweek = paste0(year, yearweek))
View(temp)
ggplot(data = temp) +
geom_point(aes(x = yearweek, y = antall_minutter))
?rownames_to_column
temp = group_by(df, year, week) %>%
summarise(antall_minutter = sum(duration_min)) %>%
ungroup()
temp = left_join(expand(temp, year, week = 1:52), temp) %>%
mutate(antall_minutter = ifelse(is.na(antall_minutter), 0, antall_minutter)) %>%
mutate(yearweek = ifelse(nchar(week) == 1, paste0(0, week), week),
yearweek = paste0(year, yearweek),
id = seq_along(yearweek)
)
ggplot(data = temp) +
geom_point(aes(x = id, y = antall_minutter))
temp = group_by(df, year, week) %>%
summarise(antall_minutter = sum(duration_min)) %>%
ungroup()
temp = left_join(expand(temp, year, week = 1:52), temp) %>%
mutate(yearweek = ifelse(nchar(week) == 1, paste0(0, week), week),
yearweek = paste0(year, yearweek),
id = seq_along(yearweek)
)
ggplot(data = temp) +
geom_point(aes(x = id, y = antall_minutter))
ggplot(data = temp) +
geom_point(aes(x = id, y = antall_minutter)) +
geom_hline(aes(yintercept = 75))
temp = group_by(df, year, week) %>%
summarise(antall_minutter = sum(duration_min)) %>%
ungroup()
temp = left_join(expand(temp, year, week = 1:52), temp) %>%
mutate(yearweek = ifelse(nchar(week) == 1, paste0(0, week), week),
yearweek = paste0(year, yearweek),
id = seq_along(yearweek),
treningsdose = as.factor(ifelse(antall_minutter <= 75, "Over 75 min", "Under 75 min"))
)
ggplot(data = temp) +
geom_point(aes(x = id, y = antall_minutter, colour = treningsdose)) +
geom_hline(aes(yintercept = 75))
ggplot(data = temp, aes(x = id, y = antall_minutter, colour = treningsdose)) +
geom_point() +
geom_smooth() +
geom_hline(aes(yintercept = 75)) +
labs(x = "Tid", y = "Trening per uke (minutter)")
ggplot(data = temp, aes(x = id, y = antall_minutter)) +
geom_point(aes(colour = treningsdose)) +
geom_smooth() +
geom_hline(aes(yintercept = 75)) +
labs(x = "Tid", y = "Trening per uke (minutter)")
ggplot(data = df) +
geom_bar(aes(x = treningsdose))
ggplot(data = temp) +
geom_bar(aes(x = treningsdose))
temp = group_by(df, year, week) %>%
summarise(antall_minutter = sum(duration_min, na.rm = TRUE)) %>%
ungroup()
temp = left_join(expand(temp, year, week = 1:52), temp) %>%
mutate(yearweek = ifelse(nchar(week) == 1, paste0(0, week), week),
yearweek = paste0(year, yearweek),
id = seq_along(yearweek),
treningsdose = as.factor(ifelse(antall_minutter <= 75, "Over 75 min", "Under 75 min"))
)
qplot(data = df, x = duration_min, binwidth = 5) +
labs(x = "Varighet i minutter", y = "Antall", title = "50 % av turene ligger mellom 40 og 60 minutter")
ggplot(data = temp) +
geom_bar(aes(x = treningsdose)) +
labs(x = "Trening i over eller under 75 minutter i uka?", y = "Antall", title = "To av tre uker med trening er over Helsedirektoratets anbefaling", subtitle = "Men de fleste mangler data")
ggplot(data = temp, aes(x = id, y = antall_minutter)) +
geom_point(aes(colour = treningsdose)) +
geom_smooth() +
geom_hline(aes(yintercept = 75)) +
labs(x = "Tid", y = "Trening per uke (minutter)")
?date
?as.Date
library(tidyverse)
library(lubridate)
#settings
theme_set(theme_minimal())
set.seed(1106)
options(scipen = 100)
df <- read.csv2(here::here("content/data/runtastic/runtastic_1.csv"), stringsAsFactors=FALSE)
df = mutate(df,
start_time = as.POSIXct(start_time/1000, origin="1970-01-01"),
end_time = as.POSIXct(end_time/1000, origin="1970-01-01"),
year = year(start_time),
month = month(start_time),
week = week(start_time),
duration_sec = round(duration/1000, 0),
duration_min = duration_sec/60,
duration_lubridate = as.duration(as.period(duration_sec, unit = "seconds")),
distance = distance / 1000, #konverterer distanse i meter til kilometer
duration_per_km_lubridate = as.duration(as.period(round(duration_per_km/1000, 0), unit = "seconds")),
duration_per_km = (duration_per_km/1000)/60,
puls_sone_snitt = cut(pulse_avg, breaks = c(0, 126, 141, 155, 170, 184, 210), labels = c("0", "Sone 1", "Sone 2", "Sone 3", "Sone 4", "Sone maks")),
puls_sone_maks = cut(pulse_max, breaks = c(0, 126, 141, 155, 170, 184, 210), labels = c("0", "Sone 1", "Sone 2", "Sone 3", "Sone 4", "Sone maks"))
)
df_alle = data.frame()
df$start_time[[1]]
as.Date(df$start_time[[1]])
df$start_time[[1]]
as.Date(min(df$start_time))
as.Date(min(df$start_time)):as.Date(min(df$start_time))
as.Date(min(df$start_time)):as.Date(max(df$start_time))
as.Date(min(df$start_time))
df_alle$dato = as.Date(min(df$start_time)):as.Date(max(df$start_time))
df_alle = data.frame(dato = as.Date(min(df$start_time)):as.Date(max(df$start_time)))
View(df_alle)
df_alle = data.frame(dato = as.Date(ymd_hms(min(df$start_time))):as.Date(ymd_hms(max(df$start_time))))
View(df_alle)
?seq.Date
df_alle = data.frame(dato = seq(from = as.Date(ymd_hms(min(df$start_time))), to = as.Date(ymd_hms(max(df$start_time)))))
df_alle = data.frame(dato = seq(from = as.Date(ymd_hms(min(df$start_time))), to = as.Date(ymd_hms(max(df$start_time))), by = 1))
View(df_alle)
library(tidyverse)
library(lubridate)
#settings
theme_set(theme_minimal())
set.seed(1106)
options(scipen = 100)
df <- read.csv2(here::here("content/data/runtastic/runtastic_1.csv"), stringsAsFactors=FALSE)
df = mutate(df,
start_time = as.POSIXct(start_time/1000, origin="1970-01-01"),
end_time = as.POSIXct(end_time/1000, origin="1970-01-01"),
dato = as.Date(ymd_hms(start_time)),
year = year(start_time),
month = month(start_time),
week = week(start_time),
duration_sec = round(duration/1000, 0),
duration_min = duration_sec/60,
duration_lubridate = as.duration(as.period(duration_sec, unit = "seconds")),
distance = distance / 1000, #konverterer distanse i meter til kilometer
duration_per_km_lubridate = as.duration(as.period(round(duration_per_km/1000, 0), unit = "seconds")),
duration_per_km = (duration_per_km/1000)/60,
puls_sone_snitt = cut(pulse_avg, breaks = c(0, 126, 141, 155, 170, 184, 210), labels = c("0", "Sone 1", "Sone 2", "Sone 3", "Sone 4", "Sone maks")),
puls_sone_maks = cut(pulse_max, breaks = c(0, 126, 141, 155, 170, 184, 210), labels = c("0", "Sone 1", "Sone 2", "Sone 3", "Sone 4", "Sone maks"))
)
df_alle = left_join(df_alle, df)
View(df_alle)
df_alle = left_join(df_alle, df) %>%
arrange(dato)
df_alle = data.frame(dato = seq(from = as.Date(ymd_hms(min(df$start_time))), to = as.Date(ymd_hms(max(df$start_time))), by = 1))
df_alle = left_join(df_alle, df) %>%
arrange(dato)
?lag
?ifelse
df_alle = left_join(df_alle, df) %>%
arrange(dato) %>%
mutate(er_trening = ifelse(is.na(start_time), FALSE, TRUE))
df_alle = data.frame(dato = seq(from = as.Date(ymd_hms(min(df$start_time))), to = as.Date(ymd_hms(max(df$start_time))), by = 1)) %>%
left_join(., df) %>%
arrange(dato) %>%
mutate(er_trening = ifelse(is.na(start_time), FALSE, TRUE))
library(tidyverse)
library(lubridate)
#settings
theme_set(theme_minimal())
set.seed(1106)
options(scipen = 100)
df <- read.csv2(here::here("content/data/runtastic/runtastic_1.csv"), stringsAsFactors=FALSE)
df = mutate(df,
start_time = as.POSIXct(start_time/1000, origin="1970-01-01"),
end_time = as.POSIXct(end_time/1000, origin="1970-01-01"),
dato = as.Date(ymd_hms(start_time)),
year = year(start_time),
month = month(start_time),
week = week(start_time),
duration_sec = round(duration/1000, 0),
duration_min = duration_sec/60,
duration_lubridate = as.duration(as.period(duration_sec, unit = "seconds")),
distance = distance / 1000, #konverterer distanse i meter til kilometer
duration_per_km_lubridate = as.duration(as.period(round(duration_per_km/1000, 0), unit = "seconds")),
duration_per_km = (duration_per_km/1000)/60,
puls_sone_snitt = cut(pulse_avg, breaks = c(0, 126, 141, 155, 170, 184, 210), labels = c("0", "Sone 1", "Sone 2", "Sone 3", "Sone 4", "Sone maks")),
puls_sone_maks = cut(pulse_max, breaks = c(0, 126, 141, 155, 170, 184, 210), labels = c("0", "Sone 1", "Sone 2", "Sone 3", "Sone 4", "Sone maks"))
)
df_alle = data.frame(dato = seq(from = as.Date(ymd_hms(min(df$start_time))), to = as.Date(ymd_hms(max(df$start_time))), by = 1)) %>%
left_join(., df) %>%
arrange(dato) %>%
mutate(er_trening = ifelse(is.na(start_time), FALSE, TRUE)
dager_siden_trening = ifelse(er_trening == TRUE, 1, lag(er_trening) + 1)
df_alle = data.frame(dato = seq(from = as.Date(ymd_hms(min(df$start_time))), to = as.Date(ymd_hms(max(df$start_time))), by = 1)) %>%
left_join(., df) %>%
arrange(dato) %>%
mutate(er_trening = ifelse(is.na(start_time), FALSE, TRUE),
dager_siden_trening = ifelse(er_trening == TRUE, 1, lag(er_trening) + 1)
)
View(df_alle)
df_alle = data.frame(dato = seq(from = as.Date(ymd_hms(min(df$start_time))), to = as.Date(ymd_hms(max(df$start_time))), by = 1)) %>%
left_join(., df) %>%
arrange(dato) %>%
mutate(er_trening = ifelse(is.na(start_time), FALSE, TRUE),
dager_siden_trening = ifelse(er_trening == TRUE, 1, lag(dager_siden_trening) + 1)
)
?if
()
lenght(df_alle$dato)
length(df_alle$dato)
i = 1
j = 1
df_alle$er_trening[i]
for(i in 1:length(df_alle$dato)){
if(df_alle$er_trening[i] == TRUE){
j = 1
df_alle$dag_treningsperiode = j
}
if(df_alle$er_trening[i] == FALSE){
j = j+1
df_alle$dag_treningsperiode = j
}
}
for(i in 1:length(df_alle$dato)){
if(df_alle$er_trening[[i]] == TRUE){
j = 1
df_alle$dag_treningsperiode = j
}
if(df_alle$er_trening[[i]] == FALSE){
j = j+1
df_alle$dag_treningsperiode = j
}
}
df_alle$er_trening[[i]]
i = 3
df_alle$er_trening[[i]]
df_alle$er_trening[[i]] == TRUE
for(i in 1:length(df_alle$dato)){
if(df_alle$er_trening[[i]] == TRUE){
j = 1
df_alle$dag_treningsperiode[[i]] = j
}
if(df_alle$er_trening[[i]] == FALSE){
j = j+1
df_alle$dag_treningsperiode[[i]] = j
}
}
library(tidyverse)
library(lubridate)
#settings
theme_set(theme_minimal())
set.seed(1106)
options(scipen = 100)
df <- read.csv2(here::here("content/data/runtastic/runtastic_1.csv"), stringsAsFactors=FALSE)
df = mutate(df,
start_time = as.POSIXct(start_time/1000, origin="1970-01-01"),
end_time = as.POSIXct(end_time/1000, origin="1970-01-01"),
dato = as.Date(ymd_hms(start_time)),
year = year(start_time),
month = month(start_time),
week = week(start_time),
duration_sec = round(duration/1000, 0),
duration_min = duration_sec/60,
duration_lubridate = as.duration(as.period(duration_sec, unit = "seconds")),
distance = distance / 1000, #konverterer distanse i meter til kilometer
duration_per_km_lubridate = as.duration(as.period(round(duration_per_km/1000, 0), unit = "seconds")),
duration_per_km = (duration_per_km/1000)/60,
puls_sone_snitt = cut(pulse_avg, breaks = c(0, 126, 141, 155, 170, 184, 210), labels = c("0", "Sone 1", "Sone 2", "Sone 3", "Sone 4", "Sone maks")),
puls_sone_maks = cut(pulse_max, breaks = c(0, 126, 141, 155, 170, 184, 210), labels = c("0", "Sone 1", "Sone 2", "Sone 3", "Sone 4", "Sone maks"))
)
df_alle = data.frame(dato = seq(from = as.Date(ymd_hms(min(df$start_time))), to = as.Date(ymd_hms(max(df$start_time))), by = 1)) %>%
left_join(., df) %>%
arrange(dato) %>%
mutate(er_trening = ifelse(is.na(start_time), FALSE, TRUE)
)
i = 1
j = 1
for(i in 1:length(df_alle$dato)){
if(df_alle$er_trening[[i]] == TRUE){
j = 1
df_alle$dag_treningsperiode[[i]] = j
}
if(df_alle$er_trening[[i]] == FALSE){
j = j+1
df_alle$dag_treningsperiode[[i]] = j
}
}
View(df_alle)
i = 1
j = 0
for(i in 1:length(df_alle$dato)){
if(df_alle$er_trening[[i]] == TRUE){
j = 0
df_alle$dager_siden_trening[[i]] = j
}
if(df_alle$er_trening[[i]] == FALSE){
j = j+1
df_alle$dager_siden_trening[[i]] = j
}
}
View(df_alle)
i = 1
j = 0
`økt` = 0
for(i in 1:length(df_alle$dato)){
if(df_alle$er_trening[[i]] == TRUE){
j = 0
`økt` = `økt` + 1
df_alle$dager_siden_trening[[i]] = j
df_alle$`økt_id` = `økt`
}
if(df_alle$er_trening[[i]] == FALSE){
j = j+1
df_alle$dager_siden_trening[[i]] = j
df_alle$`økt_id` = `økt`
}
}
View(df_alle)
i = 1
j = 0
`økt` = 0
for(i in 1:length(df_alle$dato)){
if(df_alle$er_trening[[i]] == TRUE){
j = 0
`økt` = `økt` + 1
df_alle$dager_siden_trening[[i]] = j
df_alle$`økt_id`[[i]] = `økt`
}
if(df_alle$er_trening[[i]] == FALSE){
j = j+1
df_alle$dager_siden_trening[[i]] = j
df_alle$`økt_id`[[i]] = `økt`
}
}
View(df_alle)
temp = group_by(df_alle, `økt_id`) %>%
summarise(dager_restitusjon = max(dager_siden_trening))
View(temp)
ggplot(data = temp) +
geom_histogram(aes(x = dager_restitusjon), binwidth = 1)
temp = group_by(df_alle, `økt_id`) %>%
summarise(dager_restitusjon = max(dager_siden_trening)) %>%
ungroup() %>%
group_by(dager_restitusjon) %>%
summarise(antall = n())
sum(temp$antall)
?fct_lump
ggplot(data = temp) +
geom_col(aes(x = dager_restitusjon, y = antall))
summary(temp$antall)
temp1 = group_by(df_alle, `økt_id`) %>%
summarise(dager_restitusjon = max(dager_siden_trening))
temp2 = ungroup(temp1) %>%
group_by(dager_restitusjon) %>%
summarise(antall = n())
ggplot(data = temp2) +
geom_col(aes(x = dager_restitusjon, y = antall))
summary(temp1$dager_restitusjon)
View(temp2)
?lag
lag(df_alle$dager_siden_trening)
lag(df_alle$dager_siden_trening[[2]])
lag(df_alle$dager_siden_trening[2])
lag()
df_alle$dager_siden_trening[2]
df_alle$dager_siden_trening[3]
df_alle$dager_siden_trening[4]
lag(df_alle$dager_siden_trening[4])
if(df_alle$dager_siden_trening[[i-1]])
)
df_alle$dager_siden_trening[4-1]
i = 1
periode = 0
for(i in 1:length(df_alle$dato)){
if(df_alle$er_trening[[i]] == TRUE){
if(i = 1){
i = 1
periode = 0
for(i in 1:length(df_alle$dato)){
if(df_alle$er_trening[[i]] == TRUE){
if(i == 1){
df_alle$periode[[i]] = periode + 1
}
if(df_alle$dager_siden_trening[[i-1]] <= 11){
df_alle$periode[[i]] = periode
}
if(df_alle$dager_siden_trening[[i-1]] > 11){
df_alle$periode[[i]] = periode + 1
}
}
if(df_alle$er_trening[[i]] == FALSE){
df_alle$periode[[i]] = periode
}
}
df_alle$dager_siden_trening[[i-1]] <= 11
i = 1
periode = 0
for(i in 2:length(df_alle$dato)){
if(df_alle$er_trening[[i]] == TRUE){
if(df_alle$dager_siden_trening[[i-1]] <= 11){
df_alle$periode[[i]] = periode
}
if(df_alle$dager_siden_trening[[i-1]] > 11){
df_alle$periode[[i]] = periode + 1
}
}
if(df_alle$er_trening[[i]] == FALSE){
df_alle$periode[[i]] = periode
}
}
i = 1
df_alle$periode[[1]] = 1
periode = 2
for(i in 2:length(df_alle$dato)){
if(df_alle$er_trening[[i]] == TRUE){
if(df_alle$dager_siden_trening[[i-1]] <= 11){
df_alle$periode[[i]] = periode
}
if(df_alle$dager_siden_trening[[i-1]] > 11){
periode = periode + 1
df_alle$periode[[i]] = periode
}
}
if(df_alle$er_trening[[i]] == FALSE){
df_alle$periode[[i]] = periode
}
}
df_alle = group_by(df_alle, periode) %>%
mutate(dag_periode = seq_along(dato))
i = 1
df_alle$periode[[1]] = 1
periode = 1
for(i in 2:length(df_alle$dato)){
if(df_alle$er_trening[[i]] == TRUE){
if(df_alle$dager_siden_trening[[i-1]] <= 11){
df_alle$periode[[i]] = periode
}
if(df_alle$dager_siden_trening[[i-1]] > 11){
periode = periode + 1
df_alle$periode[[i]] = periode
}
}
if(df_alle$er_trening[[i]] == FALSE){
df_alle$periode[[i]] = periode
}
}
df_alle = group_by(df_alle, periode) %>%
mutate(dag_periode = seq_along(dato))
library(tidyverse)
library(lubridate)
#settings
theme_set(theme_minimal())
set.seed(1106)
options(scipen = 100)
df <- read.csv2(here::here("content/data/runtastic/runtastic_1.csv"), stringsAsFactors=FALSE)
df = mutate(df,
start_time = as.POSIXct(start_time/1000, origin="1970-01-01"),
end_time = as.POSIXct(end_time/1000, origin="1970-01-01"),
dato = as.Date(ymd_hms(start_time)),
year = year(start_time),
month = month(start_time),
week = week(start_time),
duration_sec = round(duration/1000, 0),
duration_min = duration_sec/60,
duration_lubridate = as.duration(as.period(duration_sec, unit = "seconds")),
distance = distance / 1000, #konverterer distanse i meter til kilometer
duration_per_km_lubridate = as.duration(as.period(round(duration_per_km/1000, 0), unit = "seconds")),
duration_per_km = (duration_per_km/1000)/60,
puls_sone_snitt = cut(pulse_avg, breaks = c(0, 126, 141, 155, 170, 184, 210), labels = c("0", "Sone 1", "Sone 2", "Sone 3", "Sone 4", "Sone maks")),
puls_sone_maks = cut(pulse_max, breaks = c(0, 126, 141, 155, 170, 184, 210), labels = c("0", "Sone 1", "Sone 2", "Sone 3", "Sone 4", "Sone maks"))
)
View(df)
df_alle = data.frame(dato = seq(from = as.Date(ymd_hms(min(df$start_time))), to = as.Date(ymd_hms(max(df$start_time))), by = 1)) %>%
left_join(., df) %>%
arrange(dato) %>%
mutate(er_trening = ifelse(is.na(start_time), FALSE, TRUE)
)
#her må jeg også håndtere datoer som har to treningsøkter registrert.
i = 1
j = 0
`økt` = 0
for(i in 1:length(df_alle$dato)){
if(df_alle$er_trening[[i]] == TRUE){
j = 0
`økt` = `økt` + 1
df_alle$dager_siden_trening[[i]] = j
df_alle$`økt_id`[[i]] = `økt`
}
if(df_alle$er_trening[[i]] == FALSE){
j = j+1
df_alle$dager_siden_trening[[i]] = j
df_alle$`økt_id`[[i]] = `økt`
}
}
temp1 = group_by(df_alle, `økt_id`) %>%
summarise(dager_restitusjon = max(dager_siden_trening))
temp2 = ungroup(temp1) %>%
group_by(dager_restitusjon) %>%
summarise(antall = n())
ggplot(data = temp2) +
geom_col(aes(x = dager_restitusjon, y = antall))
View(temp2)
View(df_alle)
update.packages(checkBuilt=TRUE, ask=FALSE)
