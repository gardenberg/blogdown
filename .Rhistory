},
"Compare": {
"kommuneNr": ["0101"],
"fylkeNr": ["00"]
}
}'
#ma ha med content_type_json() for a fa 200 ok
test = POST(url,body=data,encode="json",verbose(),content_type_json())
df = fromJSON(content(test,"text",encoding="UTF-8"))[[1]]
head(df)
test = imdi_fetch_table()
View(test)
df = filter(test,enhet=="personer")%>%
mutate(.,tall = as.numeric(tabellvariabel))%>%
group_by(.,aar,bosetting)%>%
summarise(.,antall = sum(tall,na.rm=TRUE))
View(df)
df = filter(test,enhet=="personer")%>%
mutate(.,tall = as.numeric(tabellvariabel),aar=as.numeric(aar))%>%
group_by(.,aar,bosetting)%>%
summarise(.,antall = sum(tall,na.rm=TRUE))
ggplot(data=df)+
geom_line(aes(x=aar,y=antall,colour=bosetting))
ggplot(data=df)+
geom_line(aes(x=aar,y=antall,colour=bosetting))
library(ggplot2)
ggplot(data=df)+
geom_line(aes(x=aar,y=antall,colour=bosetting))
df = filter(test,enhet=="personer")%>%
mutate(.,tall = as.numeric(tabellvariabel),aar=as.numeric(aar))%>%
group_by(.,aar,bosetting)%>%
summarise(.,antall = sum(tall,na.rm=FALSE))
ggplot(data=df)+
geom_line(aes(x=aar,y=antall,colour=bosetting))
df = filter(test,enhet=="personer")%>%
mutate(.,tall = as.numeric(tabellvariabel),aar=as.numeric(aar))%>%
group_by(.,aar,bosetting)%>%
summarise(.,antall = sum(tall,na.rm=TRUE))
ggplot(data=df)+
geom_line(aes(x=aar,y=antall,colour=bosetting))
levels(as.factor(test$kommuneNr))
df = filter(test,enhet=="personer",kommuneNr!="0000")%>%
mutate(.,tall = as.numeric(tabellvariabel),aar=as.numeric(aar))%>%
group_by(.,aar,bosetting)%>%
summarise(.,antall = sum(tall,na.rm=TRUE))
ggplot(data=df)+
geom_line(aes(x=aar,y=antall,colour=bosetting))
theme_set(theme_minimal())
ggplot(data=df)+
geom_line(aes(x=aar,y=antall,colour=bosetting))
?na_if
df = filter(test,enhet=="personer",kommuneNr!="0000")%>%
mutate(.,tall = as.numeric(tabellvariabel),aar=as.numeric(aar))%>%
group_by(.,aar,bosetting)%>%
summarise(.,antall = sum(tall,na.rm=TRUE))%>%
mutate(.,antall = na_if(antall,0))
ggplot(data=df)+
geom_line(aes(x=aar,y=antall,colour=bosetting))
df = filter(test,enhet == "personer", bosetting == "vedtak")
df = filter(test,enhet == "personer", bosetting == "vedtak")%>%
mutate(.,tall = as.numeric(tabellvariabel),aar=as.numeric(aar))
ggplot(data = df, aes(x= kommuneNr, y = tall))+
geom_jitter(colour = "steelblue", alpha=1)+
geom_boxplot(alpha=1)
ggplot(data = df, aes(x= kommuneNr, y = tall))+
geom_jitter(colour = "steelblue", alpha=1)+
geom_boxplot(alpha=1)+
coord_flip()
ggplot(data = df, aes(x= kommuneNr, y = tall))+
geom_jitter(colour = "steelblue", alpha=0.3)+
geom_boxplot(alpha=1)+
coord_flip()
ggplot(data = df, aes(x= kommuneNr, y = tall))+
geom_jitter(colour = "steelblue", alpha=0.3)+
geom_boxplot(alpha=0)+
coord_flip()
df = filter(test,enhet=="personer",kommuneNr!="0000")%>%
mutate(.,tall = as.numeric(tabellvariabel),aar=as.numeric(aar))%>%
group_by(.,aar,bosetting)%>%
summarise(.,antall = sum(tall,na.rm=TRUE))%>%
mutate(.,antall = na_if(antall,0))
ggplot(data=df)+
geom_line(aes(x=aar,y=antall,colour=bosetting))
df = filter(test,enhet == "personer", bosetting == "vedtak")%>%
mutate(.,tall = as.numeric(tabellvariabel),aar=as.numeric(aar))
ggplot(data = df, aes(x= kommuneNr, y = tall))+
geom_jitter(colour = "steelblue", alpha=0.3)+
geom_boxplot(alpha=0)+
coord_flip()
df = filter(test,enhet == "personer", bosetting == "vedtak")%>%
mutate(.,tall = as.numeric(tabellvariabel),aar=as.numeric(aar))
ggplot(data = df, aes(x= kommuneNr, y = tall))+
geom_jitter(colour = "steelblue", alpha=0.3)+
geom_boxplot(alpha=0)+
coord_flip()
df = filter(test,enhet == "personer", bosetting == "vedtak")%>%
mutate(.,tall = as.numeric(tabellvariabel),aar=as.numeric(aar))
ggplot(data = df, aes(x= kommuneNr, y = tall))+
geom_jitter(colour = "steelblue", alpha=0.3)+
geom_boxplot(alpha=0)+
coord_flip()
theme_set(theme_minimal())
ggplot(data = df, aes(x= kommuneNr, y = tall))+
geom_jitter(colour = "steelblue", alpha=0.3)+
geom_boxplot(alpha=0)+
coord_flip()
ggplot(data = df, aes(x= kommuneNr, y = tall))+
geom_jitter(colour = "steelblue", alpha=0.3)+
geom_boxplot(alpha=0)+
coord_flip()
library(here)
df = read.csv2(here("content/data/tippeliga_2019.csv"))
df = read.csv2(here("content/data/tippeliga_2019.csv"),stringsAsFactors = FALSE)
View(df)
df = read.csv2(here("content/data/tippeliga_2019.csv"),stringsAsFactors = FALSE, na.strings = "")
?read.csv
df = read.csv2(here("content/data/tippeliga_2019.csv"),stringsAsFactors = FALSE, na.strings = "", nrows = 17)
df = read.csv2(here("content/data/tippeliga_2019.csv"),stringsAsFactors = FALSE, na.strings = "", nrows = 16)
kable(df)
library(knitr)
kable(df)
suppressPackageStartupMessages(library(tidyverse))
temp = gather(df,kilde,plassering,NordicBet:Oddschecker)
ggplot(data = temp, aes(x=kilde, y = lag, fill = plassering))+
geom_tile()
ggplot(data = temp, aes(x=as.factor(kilde), y = as.factor(lag), fill = plassering))+
geom_tile()
ggplot(data = temp, aes(x=as.factor(kilde), y = as.factor(lag)))+
geom_tile(aes(fill = plassering))
?geom_tile
ggplot(data = temp, aes(x=as.factor(kilde), y = as.factor(lag)))+
geom_tile(aes(fill = plassering))
ggplot(data = temp, aes(x=as.factor(kilde), y = as.factor(Lag)))+
geom_tile(aes(fill = plassering))
blogdown:::serve_site()
blogdown:::serve_site()
#biblioteker
library(here)
library(knitr)
suppressPackageStartupMessages(library(tidyverse))
#data
df = read.csv2(here("content/data/tippeliga_2019.csv"),stringsAsFactors = FALSE, na.strings = "", nrows = 16)
kable(df)
df = read.csv2(here("content/data/tippeliga_2019.csv"),stringsAsFactors = FALSE, na.strings = "", nrows = 16)%>%
arrange(.,Lag)
kable(df)
temp = gather(df,kilde,plassering,NordicBet:Aftenposten)
ggplot(data = temp, aes(x=as.factor(kilde), y = as.factor(Lag)))+
geom_tile(aes(fill = plassering))
?rowwise
df$sluttplassering_gjennomsnitt = apply(df,1,mean)
df$sluttplassering_gjennomsnitt = apply(select(df,-Lag),1,mean)
View(df)
apply(select(df,-Lag),1,mean)
apply(select(df,-Lag),1,mean, na.rm=TRUE)
df$sluttplassering_gjennomsnitt = apply(select(df,-Lag),1,mean, na.rm=TRUE)
df = select(df, -UniBet, - NordicBet)%>%
mutate(sluttplassering_gjennomsnitt = apply(select(df,-Lag),1,mean, na.rm=TRUE))
df = select(df, -UniBet, - NordicBet)%>%
mutate(sluttplassering_gjennomsnitt = apply(df,1,mean, na.rm=TRUE))
#data
df = read.csv2(here("content/data/tippeliga_2019.csv"),stringsAsFactors = FALSE, na.strings = "", nrows = 16)%>%
arrange(.,Lag)
temp = select(df, -UniBet, - NordicBet)%>%
mutate(sluttplassering_gjennomsnitt = apply(df,1,mean, na.rm=TRUE))
temp = select(df, -UniBet, - NordicBet)%>%
mutate(sluttplassering_gjennomsnitt = apply(select(df,-Lag),1,mean, na.rm=TRUE))
View(temp)
temp = select(df, -UniBet, - NordicBet)%>%
mutate(sluttplassering_gjennomsnitt = apply(select(df,-Lag),1,mean, na.rm=TRUE)) %>%
arrange(sluttplassering_gjennomsnitt)
#eksperiment med en heatmap-table
temp = gather(temp,kilde,plassering,Nettavisen:Aftenposten)
ggplot(data = temp, aes(x=as.factor(kilde), y = as.factor(Lag)))+
geom_tile(aes(fill = plassering))
temp = select(df, -UniBet, - NordicBet)%>%
mutate(sluttplassering_gjennomsnitt = apply(select(df,-Lag),1,mean, na.rm=TRUE)) %>%
arrange(sluttplassering_gjennomsnitt)
#eksperiment med en heatmap-table
temp = gather(temp,kilde,plassering,Nettavisen:sluttplassering_gjennomsnitt)
ggplot(data = temp, aes(x=as.factor(kilde), y = as.factor(Lag)))+
geom_tile(aes(fill = plassering))
temp = select(df, -UniBet, - NordicBet)%>%
mutate(gjennomsnitt = apply(select(df,-Lag),1,mean, na.rm=TRUE)) %>%
arrange(gjennomsnitt)
#eksperiment med en heatmap-table
temp = gather(temp,kilde,plassering,Nettavisen:gjennomsnitt)
ggplot(data = temp, aes(x=as.factor(kilde), y = as.factor(Lag)))+
geom_tile(aes(fill = plassering))
View(df)
#biblioteker
library(here)
library(knitr)
suppressPackageStartupMessages(library(tidyverse))
#data
df = read.csv2(here("content/data/tippeliga_2019.csv"),stringsAsFactors = FALSE, na.strings = "", nrows = 16)%>%
arrange(.,Lag)
?fct_reorder
ggplot(data = temp, aes(x=as.factor(kilde), y = fct_reorder(as.factor(Lag), plassering)))+
geom_tile(aes(fill = plassering))
ggplot(data = temp, aes(x=as.factor(kilde), y = fct_reorder(as.factor(Lag), plassering, .desc = TRUE)))+
geom_tile(aes(fill = plassering))
ggplot(data = temp, aes(x=as.factor(kilde), y = fct_reorder(as.factor(Lag), plassering, .desc = TRUE)))+
geom_tile(aes(fill = plassering))+
labs(x = "Kilde", y = "Lag")
ggplot(data = temp, aes(x=as.factor(kilde), y = fct_reorder(as.factor(Lag), plassering, .fun = mean, .desc = TRUE)))+
geom_tile(aes(fill = plassering))+
labs(x = "Kilde", y = "Lag", title = "")
?scale_fill_gradient
kable(df)
df = read.csv2(here("content/data/tippeliga_2019.csv"),stringsAsFactors = FALSE, na.strings = "", nrows = 16)%>%
arrange(.,Lag) %>%
select(-UniBet, - NordicBet) %>%
mutate(gjennomsnitt = apply(select(df,-Lag),1,mean, na.rm=TRUE)) %>%
arrange(gjennomsnitt)
kable(df)
df = read.csv2(here("content/data/tippeliga_2019.csv"),stringsAsFactors = FALSE, na.strings = "", nrows = 16)%>%
arrange(.,Lag) %>%
select(-UniBet, - NordicBet) %>%
mutate(gjennomsnitt = round(apply(select(df,-Lag),1,mean, na.rm=TRUE), 1)) %>%
arrange(gjennomsnitt)
#eksperiment med en heatmap-table
temp = gather(df,kilde,plassering,Nettavisen:gjennomsnitt)
ggplot(data = temp, aes(x=as.factor(kilde), y = fct_reorder(as.factor(Lag), plassering, .fun = mean, .desc = TRUE)))+
geom_tile(aes(fill = plassering))+
labs(x = "Kilde", y = "Lag", title = "Molde og Rosenborg i topp, MjÃ¸ndalen og Viking i bunn")
kable(df)
df = read.csv2(here("content/data/tippeliga_2019.csv"),stringsAsFactors = FALSE, na.strings = "", nrows = 16)%>%
arrange(.,Lag) %>%
select(-UniBet, - NordicBet) %>%
mutate(gjennomsnitt = apply(select(df,-Lag),1,mean, na.rm=TRUE)) %>%
mutate(gjennomsnitt = round(gjennomsnitt,1)) %>%
arrange(gjennomsnitt)
kable(df)
?round
df = read.csv2(here("content/data/tippeliga_2019.csv"),stringsAsFactors = FALSE, na.strings = "", nrows = 16)%>%
arrange(.,Lag) %>%
select(-UniBet, - NordicBet) %>%
mutate(gjennomsnitt = apply(select(df,-Lag),1,mean, na.rm=TRUE)) %>%
arrange(gjennomsnitt)
kable(df)
df = read.csv2(here("content/data/tippeliga_2019.csv"),stringsAsFactors = FALSE, na.strings = "", nrows = 16)
kable(df)
df = read.csv2(here("content/data/tippeliga_2019.csv"),stringsAsFactors = FALSE, na.strings = "", nrows = 16)%>%
select(-UniBet, - NordicBet)
kable(df)
df = read.csv2(here("content/data/tippeliga_2019.csv"),stringsAsFactors = FALSE, na.strings = "", nrows = 16)%>%
select(-UniBet, - NordicBet) %>%
mutate(gjennomsnitt = apply(select(df,-Lag),1,mean, na.rm=TRUE))
kable(df)
df = read.csv2(here("content/data/tippeliga_2019.csv"),stringsAsFactors = FALSE, na.strings = "", nrows = 16)%>%
select(-UniBet, - NordicBet) %>%
mutate(gjennomsnitt = apply(select(df,-Lag),1,mean, na.rm=TRUE)) %>%
arrange(gjennomsnitt)
kable(df)
#eksperiment med en heatmap-table
temp = gather(df,kilde,plassering,Nettavisen:gjennomsnitt)
ggplot(data = temp, aes(x=as.factor(kilde), y = fct_reorder(as.factor(Lag), plassering, .fun = mean, .desc = TRUE)))+
geom_tile(aes(fill = plassering))+
labs(x = "Kilde", y = "Lag", title = "Molde og Rosenborg i topp, MjÃ¸ndalen og Viking i bunn")
ggplot(data = temp, aes(x=as.factor(kilde), y = fct_reorder(as.factor(Lag), plassering, .fun = mean, .desc = TRUE)))+
geom_tile(aes(fill = plassering))+
labs(x = "Kilde", y = "Lag", title = "Molde og Rosenborg i topp, MjÃ¸ndalen og Viking i bunn")+
scale_fill_gradien2(low = "green", mid = "white", high = "red")
ggplot(data = temp, aes(x=as.factor(kilde), y = fct_reorder(as.factor(Lag), plassering, .fun = mean, .desc = TRUE)))+
geom_tile(aes(fill = plassering))+
labs(x = "Kilde", y = "Lag", title = "Molde og Rosenborg i topp, MjÃ¸ndalen og Viking i bunn")+
scale_fill_gradient2(low = "green", mid = "white", high = "red")
ggplot(data = temp, aes(x=as.factor(kilde), y = fct_reorder(as.factor(Lag), plassering, .fun = mean, .desc = TRUE)))+
geom_tile(aes(fill = plassering))+
labs(x = "Kilde", y = "Lag", title = "Molde og Rosenborg i topp, MjÃ¸ndalen og Viking i bunn")+
scale_fill_gradient2(low = "green", mid = "white", high = "red", midpoint = 8)
ggplot(data = temp, aes(x=as.factor(kilde), y = fct_reorder(as.factor(Lag), plassering, .fun = mean, .desc = TRUE)))+
geom_tile(aes(fill = plassering))+
labs(x = "Kilde", y = "Lag", title = "Molde og Rosenborg i topp, MjÃ¸ndalen og Viking i bunn")+
scale_fill_gradient2(low = "blue", mid = "white", high = "orange", midpoint = 8)
ggplot(data = temp, aes(x=as.factor(kilde), y = fct_reorder(as.factor(Lag), plassering, .fun = mean, .desc = TRUE)))+
geom_tile(aes(fill = plassering))+
labs(x = "Kilde", y = "Lag", title = "Molde og Rosenborg i topp, MjÃ¸ndalen og Viking i bunn")+
scale_fill_gradient2(low = "steelblue", mid = "white", high = "orange", midpoint = 8)
ggplot(data = temp, aes(x=as.factor(kilde), y = fct_reorder(as.factor(Lag), plassering, .fun = mean, .desc = TRUE)))+
geom_tile(aes(fill = plassering))+
labs(x = "Kilde", y = "Lag", title = "Molde og Rosenborg i topp, MjÃ¸ndalen og Viking i bunn")+
scale_fill_gradient2(low = "steelblue", mid = "grey", high = "orange", midpoint = 8)
7.2/5
colMeans()
?colMeans
#biblioteker
library(here)
library(knitr)
suppressPackageStartupMessages(library(tidyverse))
#data
df = read.csv2(here("content/data/tippeliga_2019.csv"),stringsAsFactors = FALSE, na.strings = "", nrows = 16)%>%
select(-UniBet, - NordicBet) %>%
mutate(gjennomsnitt = rowMeans(select(df,-Lag),na.rm=TRUE)) %>%
arrange(gjennomsnitt)
kable(df)
#eksperiment med en heatmap-table
temp = gather(df,kilde,plassering,Nettavisen:gjennomsnitt)
ggplot(data = temp, aes(x=as.factor(kilde), y = fct_reorder(as.factor(Lag), plassering, .fun = mean, .desc = TRUE)))+
geom_tile(aes(fill = plassering))+
labs(x = "Kilde", y = "Lag", title = "Molde og Rosenborg i topp, MjÃ¸ndalen og Viking i bunn")+
scale_fill_gradient2(low = "steelblue", mid = "grey", high = "orange", midpoint = 8)
df = read.csv2(here("content/data/tippeliga_2019.csv"),stringsAsFactors = FALSE, na.strings = "", nrows = 16) %>%
select(., -UniBet, - NordicBet) %>%
mutate(gjennomsnitt = rowMeans(df,na.rm=TRUE)) %>%
arrange(gjennomsnitt)
names(df)[2:7]
numeric_vars = names(df)[2:7]
df = read.csv2(here("content/data/tippeliga_2019.csv"),stringsAsFactors = FALSE, na.strings = "", nrows = 16)
numeric_vars = names(df)[2:6]
df = read.csv2(here("content/data/tippeliga_2019.csv"),stringsAsFactors = FALSE, na.strings = "", nrows = 16) %>%
select(., -UniBet, - NordicBet)
numeric_vars = names(df)[2:6]
df = mutate(gjennomsnitt = rowMeans(select(.,numeric_vars),na.rm=TRUE)) %>%
arrange(gjennomsnitt)
df = mutate(gjennomsnitt = rowMeans(select(df,numeric_vars),na.rm=TRUE)) %>%
arrange(gjennomsnitt)
df = mutate(df, gjennomsnitt = rowMeans(select(.,numeric_vars),na.rm=TRUE)) %>%
arrange(gjennomsnitt)
df = mutate(df, gjennomsnitt = rowMeans(select(df,numeric_vars),na.rm=TRUE)) %>%
arrange(gjennomsnitt)
kable(df)
ggplot(data = temp, aes(x = Lag, y = plassering)) +
# add jittered points with alpha of 0.3 and color 'steelblue'
geom_jitter(color="steelblue",alpha=0.3) +
# make boxplot transparent with alpha = 0
geom_boxplot(alpha=0) +
labs(title = 'Speed of red cars by gender of driver')
?geom_jitter
ggplot(data = temp, aes(x = fct_reorder(as.factor(Lag), plassering, .fun = mean, .desc = TRUE), y = plassering)) +
# add jittered points with alpha of 0.3 and color 'steelblue'
geom_jitter(color="steelblue",alpha=0.3) +
# make boxplot transparent with alpha = 0
geom_boxplot(alpha=0) +
labs(title = 'Speed of red cars by gender of driver')
ggplot(data = temp, aes(x = fct_reorder(as.factor(Lag), plassering, .fun = mean, .desc = FALSE), y = plassering)) +
# add jittered points with alpha of 0.3 and color 'steelblue'
geom_jitter(color="steelblue",alpha=0.3) +
# make boxplot transparent with alpha = 0
geom_boxplot(alpha=0) +
labs(title = 'Speed of red cars by gender of driver')
ggplot(data = temp, aes(x = fct_reorder(as.factor(Lag), plassering, .fun = mean, .desc = FALSE), y = plassering)) +
#her bruker vi et boksplot for Ã¥ vise variasjonen i plasseringer for hvert enkelt lag, men gjÃ¸r det gjennomsiktig
geom_boxplot(alpha=0) +
#det er heller ikke flere punkter for hvert enkelt lag enn at en kan vise alle.
geom_jitter(color="steelblue",alpha=0.3) +
labs(x = "Lag", y = "Plassering", title = "Stor variasjon i tips for lag midt pÃ¥ tabellen", subtitle = "StÃ¸rre enighet om topp og bunn")
ggplot(data = temp, aes(x = fct_reorder(as.factor(Lag), plassering, .fun = mean, .desc = FALSE), y = plassering)) +
#her bruker vi et boksplot for Ã¥ vise variasjonen i plasseringer for hvert enkelt lag, men gjÃ¸r det gjennomsiktig
geom_boxplot(alpha=0) +
#det er heller ikke flere punkter for hvert enkelt lag enn at en kan vise alle.
geom_jitter(color="steelblue",alpha=0.3) +
labs(x = "Lag", y = "Plassering", title = "Stor variasjon i tips for lag midt pÃ¥ tabellen", subtitle = "StÃ¸rre enighet om topp og bunn") +
theme(axis.text.x = element_text(angle=90))
ggplot(data = temp, aes(x = fct_reorder(as.factor(Lag), plassering, .fun = mean, .desc = FALSE), y = plassering)) +
#her bruker vi et boksplot for Ã¥ vise variasjonen i plasseringer for hvert enkelt lag, men gjÃ¸r det gjennomsiktig
geom_boxplot(alpha=0) +
#det er heller ikke flere punkter for hvert enkelt lag enn at en kan vise alle.
geom_jitter(color="steelblue",alpha=0.3) +
labs(x = "Lag", y = "Plassering", title = "Stor variasjon i tips for lag midt pÃ¥ tabellen", subtitle = "StÃ¸rre enighet om topp og bunn") +
coord_flip()
ggplot(data = temp, aes(x = fct_reorder(as.factor(Lag), plassering, .fun = mean, .desc = FALSE), y = plassering)) +
#her bruker vi et boksplot for Ã¥ vise variasjonen i plasseringer for hvert enkelt lag, men gjÃ¸r det gjennomsiktig
#geom_boxplot(alpha=0) +
#det er heller ikke flere punkter for hvert enkelt lag enn at en kan vise alle.
geom_jitter(color="steelblue",alpha=0.3) +
labs(x = "Lag", y = "Plassering", title = "Stor variasjon i tips for lag midt pÃ¥ tabellen", subtitle = "StÃ¸rre enighet om topp og bunn") +
coord_flip()
theme(axis.text.x = element_text(angle=90))
ggplot(data = temp, aes(x = fct_reorder(as.factor(Lag), plassering, .fun = mean, .desc = FALSE), y = plassering)) +
#her bruker vi et boksplot for Ã¥ vise variasjonen i plasseringer for hvert enkelt lag, men gjÃ¸r det gjennomsiktig
geom_boxplot(alpha=0) +
#det er heller ikke flere punkter for hvert enkelt lag enn at en kan vise alle.
geom_jitter(color="steelblue",alpha=0.3) +
labs(x = "Lag", y = "Plassering", title = "Stor variasjon i tips for lag midt pÃ¥ tabellen", subtitle = "StÃ¸rre enighet om topp og bunn") +
coord_flip()
theme(axis.text.x = element_text(angle=90))
ggplot(data = temp, aes(x = fct_reorder(as.factor(Lag), plassering, .fun = mean, .desc = TRUE), y = plassering)) +
#her bruker vi et boksplot for Ã¥ vise variasjonen i plasseringer for hvert enkelt lag, men gjÃ¸r det gjennomsiktig
geom_boxplot(alpha=0) +
#det er heller ikke flere punkter for hvert enkelt lag enn at en kan vise alle.
geom_jitter(color="steelblue",alpha=0.3) +
labs(x = "Lag", y = "Plassering", title = "Stor variasjon i tips for lag midt pÃ¥ tabellen", subtitle = "StÃ¸rre enighet om topp og bunn") +
coord_flip()
theme(axis.text.x = element_text(angle=90))
ggplot(data = filter(temp, kilde != "gjennomsnitt"), aes(x = fct_reorder(as.factor(Lag), plassering, .fun = mean, .desc = TRUE), y = plassering)) +
#her bruker vi et boksplot for Ã¥ vise variasjonen i plasseringer for hvert enkelt lag, men gjÃ¸r det gjennomsiktig
geom_boxplot(alpha=0) +
#det er heller ikke flere punkter for hvert enkelt lag enn at en kan vise alle.
geom_jitter(color="steelblue",alpha=0.3) +
labs(x = "Lag", y = "Plassering", title = "Stor variasjon i tips for lag midt pÃ¥ tabellen", subtitle = "StÃ¸rre enighet om topp og bunn") +
coord_flip()
theme(axis.text.x = element_text(angle=90))
ggplot(data = filter(temp, kilde != "gjennomsnitt"), aes(x = fct_reorder(as.factor(Lag), plassering, .fun = mean, .desc = TRUE), y = plassering)) +
#her bruker vi et boksplot for Ã¥ vise variasjonen i plasseringer for hvert enkelt lag, men gjÃ¸r det gjennomsiktig
geom_boxplot(alpha=0) +
#det er heller ikke flere punkter for hvert enkelt lag enn at en kan vise alle.
geom_jitter(color="steelblue",alpha=0.3) +
labs(x = "Lag", y = "Plassering", title = "Stor variasjon i tips for lag midt pÃ¥ tabellen", subtitle = "StÃ¸rre enighet om topp og bunn") +
coord_flip()
theme(axis.text.x = element_text(angle=90))
#eksperiment med en heatmap-table
temp = gather(df,kilde,plassering,Nettavisen:gjennomsnitt)
ggplot(data = temp, aes(x=as.factor(kilde), y = fct_reorder(as.factor(Lag), plassering, .fun = mean, .desc = TRUE)))+
geom_tile(aes(fill = plassering))+
labs(x = "Kilde", y = "Lag", title = "Molde og Rosenborg i topp, MjÃ¸ndalen og Viking i bunn")+
scale_fill_gradient2(low = "steelblue", mid = "grey", high = "orange", midpoint = 8)
blogdown:::serve_site()
blogdown:::new_post_addin()
df = read.csv2("https://data.nav.no/dataset/408fc52c-b50e-4ee7-a620-305eaa5d56e7/resource/882e3e0f-cd3c-4d3a-8072-be7ba7b3d272/download/stillingstekster-2018.csv")
df = read.csv2("https://data.nav.no/dataset/408fc52c-b50e-4ee7-a620-305eaa5d56e7/resource/882e3e0f-cd3c-4d3a-8072-be7ba7b3d272/download/stillingstekster-2018.csv")
View(df)
?read.csv2
df = read.csv2("https://data.nav.no/dataset/408fc52c-b50e-4ee7-a620-305eaa5d56e7/resource/882e3e0f-cd3c-4d3a-8072-be7ba7b3d272/download/stillingstekster-2018.csv", stringsAsFactors = FALSE, fileEncoding = "UTF-8")
df = read.csv2("https://data.nav.no/dataset/408fc52c-b50e-4ee7-a620-305eaa5d56e7/resource/882e3e0f-cd3c-4d3a-8072-be7ba7b3d272/download/stillingstekster-2018.csv", stringsAsFactors = FALSE, fileEncoding = "ISO-8859-1")
df = read.csv2("https://data.nav.no/dataset/408fc52c-b50e-4ee7-a620-305eaa5d56e7/resource/882e3e0f-cd3c-4d3a-8072-be7ba7b3d272/download/stillingstekster-2018.csv", stringsAsFactors = FALSE)
View(df)
df = read.csv2("https://data.nav.no/dataset/408fc52c-b50e-4ee7-a620-305eaa5d56e7/resource/882e3e0f-cd3c-4d3a-8072-be7ba7b3d272/download/stillingstekster-2018.csv", stringsAsFactors = FALSE, quote = "")
df = read.csv2("https://data.nav.no/dataset/408fc52c-b50e-4ee7-a620-305eaa5d56e7/resource/882e3e0f-cd3c-4d3a-8072-be7ba7b3d272/download/stillingstekster-2018.csv", stringsAsFactors = FALSE, quote = "")
df = read.csv2("https://data.nav.no/dataset/408fc52c-b50e-4ee7-a620-305eaa5d56e7/resource/882e3e0f-cd3c-4d3a-8072-be7ba7b3d272/download/stillingstekster-2018.csv", stringsAsFactors = FALSE, quote = "", header = TRUE, comment.char = "")
df = read.csv2("https://data.nav.no/dataset/408fc52c-b50e-4ee7-a620-305eaa5d56e7/resource/882e3e0f-cd3c-4d3a-8072-be7ba7b3d272/download/stillingstekster-2018.csv", stringsAsFactors = FALSE, header = TRUE, comment.char = "")
df = read.csv2("https://data.nav.no/dataset/408fc52c-b50e-4ee7-a620-305eaa5d56e7/resource/882e3e0f-cd3c-4d3a-8072-be7ba7b3d272/download/stillingstekster-2018.csv", stringsAsFactors = FALSE, header = TRUE, fileEncoding = "UTF-8")
View(df)
blogdown:::serve_site()
temp = here("content","data","google_searches_ds_ai.csv")
blogdown:::serve_site()
library(here)
#sett inn figuren fra disse dataene
#https://trends.google.com/trends/explore?date=all&geo=NO&q=data%20science,Kunstig%20intelligens
temp = here("content","data","google_searches_ds_ai.csv")
?here
temp = read.csv(here("content","data","google_searches_ds_ai.csv"))
library(here)
temp = read.csv(here("content","data","google_searches_ds_ai.csv"))
?read.csv
temp = read.csv(here("content","data","google_searches_ds_ai.csv"), skip = 2
)
library(tidyverse)
blogdown:::serve_site()
df = read.csv(here("content","data","google_searches_ds_ai.csv"), skip = 2, stringsAsFactors = FALSE)
names(df) = c("dato", "datascience", "kunstig intelligens")
?gather
df = gather(df, searchterm, verdi, datascience:Â´kunstig intelligensÂ´)
df = gather(df, searchterm, verdi, datascience:`kunstig intelligens`)
qplot(data = df, x = dato, y = verdi, colour = searchterm)
qplot(data = df, x = dato, y = verdi, colour = searchterm, geom = "line")
qplot(data = df, x = dato, y = verdi, colour = searchterm, group = searchterm, geom = "line")
?as.Date
df = mutate(df, dato = as.Date(dato, format = "%Y-%m"))
View(df)
df = read.csv(here("content","data","google_searches_ds_ai.csv"), skip = 2, stringsAsFactors = FALSE)
names(df) = c("dato", "datascience", "kunstig intelligens")
df = gather(df, searchterm, verdi, datascience:`kunstig intelligens`)
View(df)
df = mutate(df, dato_temp = as.Date(dato, format = "%Y-%m"))
df = mutate(df, dato_temp = as.Date(dato))
df = mutate(df, dato_temp = as.Date(dato, format = "%Y-%m"))
df$dato_temp = as.Date(df$dato, format = "%Y-%m")
df$dato_temp = as.Date(df$dato, format = "%Y - %m")
df$dato_temp = as.Date(df$dato, format = "%Y%m")
library(here)
library(tidyverse)
#sett inn figuren fra disse dataene
#https://trends.google.com/trends/explore?date=all&geo=NO&q=data%20science,Kunstig%20intelligens
df = read.csv(here("content","data","google_searches_ds_ai.csv"), skip = 2, stringsAsFactors = FALSE)
names(df) = c("dato", "datascience", "kunstig intelligens")
df = gather(df, searchterm, verdi, datascience:`kunstig intelligens`)
df$dato_temp = as.Date(df$dato, format = "%Y-%m")
qplot(data = df, x = dato, y = verdi, colour = searchterm, group = searchterm, geom = "line")
df$dato_temp = as.Date(df$dato, "%Y-%m")
lct <- Sys.getlocale("LC_TIME")
Sys.setlocale("LC_TIME", "C")
Sys.setlocale("LC_TIME", lct)
lct <- Sys.getlocale("LC_TIME")
Sys.setlocale("LC_TIME", "C")
df$dato_temp = as.Date(df$dato, "%Y-%m")
df = read.csv(here("content","data","google_searches_ds_ai.csv"), skip = 2, stringsAsFactors = FALSE, fileEncoding = "UTF-8")
names(df) = c("dato", "datascience", "kunstig intelligens")
df = gather(df, searchterm, verdi, datascience:`kunstig intelligens`)
df$dato_temp = as.Date(df$dato, "%Y-%m")
lct <- Sys.getlocale("LC_TIME")
Sys.setlocale("LC_TIME", "C")
df$dato_temp = as.Date(df$dato, "%Y-%m")
Sys.setlocale("LC_TIME", lct)
df$dato_temp = strptime(df$dato, "%Y-%m")
df$dato_temp = as.Date(paste0(df$dato,"-","01"), "%Y-%m")
df$dato_temp = as.Date(paste0(df$dato,"-","01"), "%Y-%m-%d")
names(df) = c("dato", "datascience", "kunstig intelligens")
df = gather(df, searchterm, verdi, datascience:`kunstig intelligens`)
df$dato = as.Date(paste0(df$dato,"-","01"), "%Y-%m-%d") #aner ikke hvorfor jeg mÃ¥ legge til en dag, men det fungerer
qplot(data = df, x = dato, y = verdi, colour = searchterm, group = searchterm, geom = "line")
df = read.csv(here("content","data","google_searches_ds_ai.csv"), skip = 2, stringsAsFactors = FALSE, fileEncoding = "UTF-8")
names(df) = c("dato", "datascience", "kunstig intelligens")
df = gather(df, searchterm, verdi, datascience:`kunstig intelligens`)
df$dato = as.Date(paste0(df$dato,"-","01"), "%Y-%m-%d") #aner ikke hvorfor jeg mÃ¥ legge til en dag, men det fungerer
qplot(data = df, x = dato, y = verdi, colour = searchterm, group = searchterm, geom = "line")
theme_set(theme_minimal())
qplot(data = df, x = dato, y = verdi, colour = searchterm, group = searchterm, geom = "line")
qplot(data = df, x = dato, y = verdi, colour = searchterm, group = searchterm, geom = "line")+
labs(colour = "sÃ¸keord", title ="Google-sÃ¸k etter datavitenskap og AI fÃ¸lger hverandre tett")
blogdown:::serve_site()
df <- read.csv2("C:/Users/Kauna/Downloads/stillingstekster-2018.csv", encoding="UTF-8", stringsAsFactors=FALSE)
View(df)
temp = filter(df, grepl(Tittel.vasket, "data"))
?grepl
temp = filter(df, grepl("data", Tittel.vasket))
View(temp)
temp = filter(df, grepl("data science", Stillingsbeskrivelse.vasket))
View(temp)
str(temp)
blogdown:::serve_site()
