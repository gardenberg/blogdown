geom_col(aes(x = antall, y = andel, colour = as.factor(year)))
?geom_col
ggplot(data = temp2) +
geom_col(aes(x = antall, y = andel, colour = as.factor(year)), position = "dodge")
ggplot(data = temp2) +
geom_col(aes(x = antall, y = andel, fill = as.factor(year)), position = "dodge")
ggplot(data = temp2) +
geom_col(aes(x = antall, y = andel, fill = as.factor(year)), position = "dodge") +
labs(x = "Antall aktiviteter per uke", y = "Andel uker hvert år", fill = "År")
ggplot(data = temp) +
geom_line(aes(x = yearweek, y = antall, group = 1))
ggplot(data = temp) +
geom_line(aes(x = yearweek, y = antall, group = 1)) +
scale_x_discrete(minor_breaks = NULL)
?scale_x_discrete
ggplot(data = temp) +
geom_line(aes(x = yearweek, y = antall, group = 1)) +
scale_x_discrete(breaks = NULL)
ggplot(data = temp) +
geom_line(aes(x = yearweek, y = antall, group = 1)) +
scale_x_discrete(breaks = c("201501", "201601", "201701", "201801", "201901"))
ggplot(data = temp) +
geom_line(aes(x = yearweek, y = antall, group = 1)) +
scale_x_discrete(breaks = c("201501", "201601", "201701", "201801", "201901")) +
scale_y_continuous(minor_breaks = NULL)
library(tidyverse)
library(lubridate)
#settings
theme_set(theme_minimal())
set.seed(1106)
options(scipen = 100)
sessions <- read.csv2(here::here("content/data/runtastic/sesssions.csv"), stringsAsFactors=FALSE)
df = select(sessions, start_time, end_time, duration, pause_duration, distance, elevation_gain, elevation_loss, average_speed, max_speed, duration_per_km, pulse_avg, pulse_max, notes) %>%
mutate(start_time = as.POSIXct(start_time/1000, origin="1970-01-01"),
end_time = as.POSIXct(end_time/1000, origin="1970-01-01"),
year = year(start_time),
month = month(start_time),
week = week(start_time),
duration_sec = round(duration/1000, 0),
duration_min = duration_sec/60,
duration_lubridate = as.duration(as.period(duration_sec, unit = "seconds")),
distance = distance / 1000, #konverterer distanse i meter til kilometer
duration_per_km_lubridate = as.duration(as.period(round(duration_per_km/1000, 0), unit = "seconds")),
duration_per_km = (duration_per_km/1000)/60
)
summary(df$distance)
qplot(data = df, x = distance)
sum(df$distance)
summary(df$distance)
qplot(data = df, x = distance)
qplot(data = df, x = distance, binwidth = 1)
ggplot(data = df) +
geom_boxplot(aes(x = year, y = distance))
ggplot(data = df) +
geom_boxplot(aes(x = as.factor(year), y = distance))
ggplot(data = df, aes(x = as.factor(year), y = distance)) +
geom_boxplot() +
geom_jitter()
ggplot(data = df, aes(x = as.factor(year), y = distance)) +
geom_boxplot() +
geom_jitter(colour = "steelblue", alpha = 0.2)
ggplot(data = df) +
geom_histogram(aes(x = distance)) +
facet_wrap(vars(as.factor(year)))
ggplot(data = df) +
geom_histogram(aes(x = distance), binwidth = 1) +
facet_wrap(vars(as.factor(year)))
ggplot(data = df) +
geom_freqpoly(aes(x = distance, colour = as.factor(year)))
ggplot(data = df) +
geom_freqpoly(aes(x = distance, colour = as.factor(year)), binwidht = 1)
ggplot(data = df) +
geom_freqpoly(aes(x = distance, colour = as.factor(year)), binwidht = 1, aplha = 0.5)
ggplot(data = df) +
geom_freqpoly(aes(x = distance, colour = as.factor(year)), binwidth = 1, aplha = 0.5)
sum(df$distance)
summary(df$distance)
qplot(data = df, x = distance, binwidth = 1)
ggplot(data = df, aes(x = as.factor(year), y = distance)) +
geom_boxplot() +
geom_jitter(colour = "steelblue", alpha = 0.2)
ggplot(data = df) +
geom_freqpoly(aes(x = distance, colour = as.factor(year)), binwidth = 1, aplha = 0.5)
ggplot(data = df) +
geom_point(aes(x = start_time, y = distance))
ggplot(data = df) +
geom_point(aes(x = start_time, y = distance)) +
scale_x_datetime(date_breaks = "6 months")
ggplot(data = df) +
geom_point(aes(x = start_time, y = distance)) +
scale_x_datetime(date_breaks = "6 months", date_minor_breaks = NULL)
ggplot(data = df) +
geom_point(aes(x = start_time, y = distance)) +
scale_x_datetime(date_breaks = "6 months")
summary(df$duration_per_km)
qplot(data = df, x = duration_per_km, binwidth = 1)
qplot(data = df, x = duration_per_km, binwidth = 0.25)
ggplot(data = df, aes(x = as.factor(year), y = duration_per_km)) +
geom_boxplot() +
geom_jitter(colour = "steelblue", alpha = 0.2)
ggplot(data = df) +
geom_point(aes(x = start_time, y = duration_per_km)) +
scale_x_datetime(date_breaks = "6 months")
ggplot(data = df, aes(x = as.factor(year), y = duration_per_km)) +
geom_boxplot() +
geom_jitter(colour = "steelblue", alpha = 0.2)
temp = filter(df, duration_per_km < 15)
summary(temp$duration_per_km)
temp = filter(df, duration_per_km < 15)
summary(temp$duration_per_km)
qplot(data = temp, x = duration_per_km, binwidth = 0.25)
ggplot(data = temp, aes(x = as.factor(year), y = duration_per_km)) +
geom_boxplot() +
geom_jitter(colour = "steelblue", alpha = 0.2)
ggplot(data = temp) +
geom_point(aes(x = start_time, y = duration_per_km)) +
scale_x_datetime(date_breaks = "6 months")
ggplot(data = temp) +
geom_point(aes(x = start_time, y = duration_per_km)) +
scale_x_datetime(date_breaks = "6 months")
summary(df$pulse_max)
sum(df$pulse_avg == 0)
sum(df$pulse_avg == 0, na.rm = TRUE)
sum(df$pulse_avg == 0 | is.na(df$pulse_avg), na.rm = TRUE)
sum(df$pulse_avg == 0 | is.na(df$pulse_avg))
temp = filter(df, pulse_avg != 0, is.na(df$pulse_avg) == FALSE)
summary(temp$pulse_avg)
?cut
temp$puls_sone_snitt = cut(temp$pulse_avg, breaks = c(0, 126, 141, 155, 170, 184, 210), labels = c("0", "Sone 1", "Sone 2", "Sone 3", "Sone 4", "Sone maks"))
df = select(sessions, start_time, end_time, duration, pause_duration, distance, average_speed, max_speed, duration_per_km, pulse_avg, pulse_max, notes) %>%
mutate(start_time = as.POSIXct(start_time/1000, origin="1970-01-01"),
end_time = as.POSIXct(end_time/1000, origin="1970-01-01"),
year = year(start_time),
month = month(start_time),
week = week(start_time),
duration_sec = round(duration/1000, 0),
duration_min = duration_sec/60,
duration_lubridate = as.duration(as.period(duration_sec, unit = "seconds")),
distance = distance / 1000, #konverterer distanse i meter til kilometer
duration_per_km_lubridate = as.duration(as.period(round(duration_per_km/1000, 0), unit = "seconds")),
duration_per_km = (duration_per_km/1000)/60,
puls_sone_snitt = cut(pulse_avg, breaks = c(0, 126, 141, 155, 170, 184, 210), labels = c("0", "Sone 1", "Sone 2", "Sone 3", "Sone 4", "Sone maks"))
)
df = select(sessions, start_time, end_time, duration, pause_duration, distance, average_speed, max_speed, duration_per_km, pulse_avg, pulse_max, notes) %>%
mutate(start_time = as.POSIXct(start_time/1000, origin="1970-01-01"),
end_time = as.POSIXct(end_time/1000, origin="1970-01-01"),
year = year(start_time),
month = month(start_time),
week = week(start_time),
duration_sec = round(duration/1000, 0),
duration_min = duration_sec/60,
duration_lubridate = as.duration(as.period(duration_sec, unit = "seconds")),
distance = distance / 1000, #konverterer distanse i meter til kilometer
duration_per_km_lubridate = as.duration(as.period(round(duration_per_km/1000, 0), unit = "seconds")),
duration_per_km = (duration_per_km/1000)/60,
puls_sone_snitt = cut(pulse_avg, breaks = c(0, 126, 141, 155, 170, 184, 210), labels = c("0", "Sone 1", "Sone 2", "Sone 3", "Sone 4", "Sone maks")),
puls_sone_maks = cut(pulse_max, breaks = c(0, 126, 141, 155, 170, 184, 210), labels = c("0", "Sone 1", "Sone 2", "Sone 3", "Sone 4", "Sone maks"))
)
View(df)
sum(df$pulse_avg == 0 | is.na(df$pulse_avg))
summary(temp$pulse_avg)
qplot(data = temp, x = pulse_avg, binwidth = 1)
qplot(data = temp, x = pulse_avg, binwidth = 5)
ggplot(data = temp, aes(x = as.factor(year), y = pulse_avg)) +
geom_boxplot() +
geom_jitter(colour = "steelblue", alpha = 0.2)
ggplot(data = temp) +
geom_point(aes(x = pulse_avg, y = duration_per_km)) +
scale_x_datetime(date_breaks = "6 months")
ggplot(data = temp) +
geom_point(aes(x = start_time, y = pulse_avg)) +
scale_x_datetime(date_breaks = "6 months")
ggplot(data = temp, aes(x = as.factor(year), y = pulse_avg)) +
geom_boxplot() +
geom_jitter(colour = "steelblue", alpha = 0.2)
ggplot(data = temp) +
geom_histogram(aes(x = pulse_avg), binwidth = 5) +
geom_histogram(aes(x = pulse_max), binwidth = 5)
ggplot(data = temp) +
geom_histogram(aes(x = pulse_avg), binwidth = 5, color = "blue") +
geom_histogram(aes(x = pulse_max), binwidth = 5, color = "red")
ggplot(data = temp) +
geom_histogram(aes(x = pulse_avg), binwidth = 5, fill = "blue") +
geom_histogram(aes(x = pulse_max), binwidth = 5, fill = "red")
ggplot(data = temp) +
geom_histogram(aes(x = pulse_avg), binwidth = 5, fill = "blue", alpha = 0.3) +
geom_histogram(aes(x = pulse_max), binwidth = 5, fill = "red", alpha = 0.3)
ggplot(data = temp) +
geom_histogram(aes(x = pulse_avg), binwidth = 5, fill = "blue", alpha = 0.5) +
geom_histogram(aes(x = pulse_max), binwidth = 5, fill = "red", alpha = 0.5)
summary(temp$pulse_max)
qplot(data = temp, x = pulse_max, binwidth = 5)
ggplot(data = temp) +
geom_bar(aes(x = puls_sone_snitt))
ggplot(data = temp) +
geom_bar(aes(x = puls_sone_maks))
sum(df$pulse_avg == 0 | is.na(df$pulse_avg))
temp = filter(df, pulse_avg != 0, is.na(df$pulse_avg) == FALSE)
summary(temp$pulse_avg)
summary(temp$pulse_max)
qplot(data = temp, x = pulse_avg, binwidth = 5)
qplot(data = temp, x = pulse_max, binwidth = 5)
ggplot(data = temp, aes(x = as.factor(year), y = pulse_avg)) +
geom_boxplot() +
geom_jitter(colour = "steelblue", alpha = 0.2)
ggplot(data = temp) +
geom_bar(aes(x = puls_sone_snitt))
ggplot(data = temp) +
geom_bar(aes(x = puls_sone_maks))
runs = read_delim(here::here("content/data/runs_sept2019.csv"), ";", escape_double = FALSE, col_types = cols(dato = col_character()), locale = locale(decimal_mark = ",", grouping_mark = "|", encoding = "ISO-8859-1"), trim_ws = TRUE)
runs = mutate(runs,
dato = as.Date(dato, format = "%d.%m.%Y"),
year = year(dato),
tid_test = hms(tid),
tid_minutter = as.period(tid_test, unit = "minutes")
)
View(temp)
View(df)
temp = select(df, dato = start_time, distanse_km = distance, minutter = duration_min, `min/km` = duration_per_km)
temp$løp = "trening"
test = bind_rows(temp, select(runs, dato, distanse_km, minutter, `min/km`))
?as.POSIXct
runs = mutate(runs,
dato = as.POSIXct(dato, format = "%d.%m.%Y"),
year = year(dato),
tid_test = hms(tid),
tid_minutter = as.period(tid_test, unit = "minutes")
)
runs = read_delim(here::here("content/data/runs_sept2019.csv"), ";", escape_double = FALSE, col_types = cols(dato = col_character()), locale = locale(decimal_mark = ",", grouping_mark = "|", encoding = "ISO-8859-1"), trim_ws = TRUE)
runs = mutate(runs,
dato = as.POSIXct(dato, format = "%d.%m.%Y"),
year = year(dato),
tid_test = hms(tid),
tid_minutter = as.period(tid_test, unit = "minutes")
)
temp = select(df, dato = start_time, distanse_km = distance, minutter = duration_min, `min/km` = duration_per_km)
temp$løp = "trening"
test = bind_rows(temp, select(runs, dato, distanse_km, minutter, `min/km`))
temp = select(df, dato = start_time, distanse_km = distance, minutter = duration_min, `min/km` = duration_per_km)
temp$løp = "trening"
temp = bind_rows(temp, select(runs, dato, distanse_km, minutter, `min/km`))
View(temp)
temp = bind_rows(temp, select(runs, dato, distanse_km, minutter, løp `min/km`))
temp = select(df, dato = start_time, distanse_km = distance, minutter = duration_min, `min/km` = duration_per_km)
temp$løp = "trening"
temp = bind_rows(temp, select(runs, dato, distanse_km, minutter, løp, `min/km`))
View(temp)
ggplot(data = temp) +
geom_point(aes(x = dato, y = distanse_km, colour = løp))
temp = select(df, dato = start_time, distanse_km = distance, minutter = duration_min, `min/km` = duration_per_km)
temp = bind_rows(trening = temp, løp = select(runs, dato, distanse_km, minutter, `min/km`), .id = treningsform)
temp = select(df, dato = start_time, distanse_km = distance, minutter = duration_min, `min/km` = duration_per_km)
temp = bind_rows(trening = temp, løp = select(runs, dato, distanse_km, minutter, `min/km`), .id = "treningsform")
ggplot(data = temp) +
geom_point(aes(x = dato, y = distanse_km, colour = treningsform))
temp = filter(temp, dato > "2015-01-01")
ggplot(data = temp) +
geom_point(aes(x = dato, y = distanse_km, colour = treningsform))
blogdown:::serve_site()
temp = group_by(df, month, year) %>%
summarise(antall = n()) %>%
ungroup() %>%
mutate(month = fct_recode(as.factor(month),
januar = "1",
februar = "2",
mars = "3",
april = "4",
mai = "5",
juni = "6",
juli = "7",
august = "8",
september = "9",
oktober = "10",
november = "11",
desember = "12"
)) %>%
left_join(expand(temp, year, month), .) %>%
mutate(., antall = ifelse(is.na(antall), 0, antall))
temp = group_by(df, month, year) %>%
summarise(antall = n()) %>%
ungroup() %>%
mutate(month = fct_recode(as.factor(month),
januar = "1",
februar = "2",
mars = "3",
april = "4",
mai = "5",
juni = "6",
juli = "7",
august = "8",
september = "9",
oktober = "10",
november = "11",
desember = "12"
))
temp2 = expand(temp, year, month)
temp = left_join(temp2, temp)
temp = group_by(df, month, year) %>%
summarise(antall = n()) %>%
ungroup() %>%
mutate(month = fct_recode(as.factor(month),
januar = "1",
februar = "2",
mars = "3",
april = "4",
mai = "5",
juni = "6",
juli = "7",
august = "8",
september = "9",
oktober = "10",
november = "11",
desember = "12"
))
temp2 = expand(temp, year, month)
temp = left_join(temp2, temp) %>%
mutate(., antall = ifelse(is.na(antall), 0, antall))
blogdown:::serve_site()
df = select(sessions, start_time, end_time, duration, pause_duration, distance, average_speed, max_speed, duration_per_km, pulse_avg, pulse_max)
write.csv2(df, "content/data/runtastic/runtastic_1.csv", row.names = FALSE)
?write.csv
get.wd()
?getwd
getwd()
write.csv2(df, "/content/data/runtastic/runtastic_1.csv", row.names = FALSE)
sessions <- read.csv2(here::here("data-cleaned/sesssions.csv"), stringsAsFactors=FALSE)
sessions <- read.csv2("C:/Users/Kauna/Documents/R/runtastic-data/data-cleaned/sesssions.csv"), stringsAsFactors=FALSE)
sessions <- read.csv2("C:/Users/Kauna/Documents/R/runtastic-data/data-cleaned/sesssions.csv", stringsAsFactors=FALSE)
df = select(sessions, start_time, end_time, duration, pause_duration, distance, average_speed, max_speed, duration_per_km, pulse_avg, pulse_max)
write.csv2(df, file = "C:/Users/Kauna/Documents/R/runtastic-data/data-cleaned/runtastic_1.csv", row.names = FALSE)
df <- read.csv2(here::here("content/data/runtastic/runtastic_1.csv"), stringsAsFactors=FALSE)
glimpse(df)
temp = select(df, start_time, end_time, notes)
temp = df
temp$time = as.POSIXct(temp$start_time/1000, origin="1970-01-01")
knitr::kable(top_n(temp, 5))
df = mutate(df,
start_time = as.POSIXct(start_time/1000, origin="1970-01-01"),
end_time = as.POSIXct(end_time/1000, origin="1970-01-01"),
year = year(start_time),
month = month(start_time),
week = week(start_time),
duration_sec = round(duration/1000, 0),
duration_min = duration_sec/60,
duration_lubridate = as.duration(as.period(duration_sec, unit = "seconds")),
distance = distance / 1000, #konverterer distanse i meter til kilometer
duration_per_km_lubridate = as.duration(as.period(round(duration_per_km/1000, 0), unit = "seconds")),
duration_per_km = (duration_per_km/1000)/60,
puls_sone_snitt = cut(pulse_avg, breaks = c(0, 126, 141, 155, 170, 184, 210), labels = c("0", "Sone 1", "Sone 2", "Sone 3", "Sone 4", "Sone maks")),
puls_sone_maks = cut(pulse_max, breaks = c(0, 126, 141, 155, 170, 184, 210), labels = c("0", "Sone 1", "Sone 2", "Sone 3", "Sone 4", "Sone maks"))
)
blogdown:::serve_site()
blogdown:::serve_site()
library(tidyverse)
library(lubridate)
#settings
theme_set(theme_minimal())
set.seed(1106)
options(scipen = 100)
df <- read.csv2(here::here("content/data/runtastic/runtastic_1.csv"), stringsAsFactors=FALSE)
qplot(data = df, x = distance, binwidth = 1)
ggplot(data = df, aes(x = as.factor(year), y = distance)) +
geom_boxplot() +
geom_jitter(colour = "steelblue", alpha = 0.2)
df = mutate(df,
start_time = as.POSIXct(start_time/1000, origin="1970-01-01"),
end_time = as.POSIXct(end_time/1000, origin="1970-01-01"),
year = year(start_time),
month = month(start_time),
week = week(start_time),
duration_sec = round(duration/1000, 0),
duration_min = duration_sec/60,
duration_lubridate = as.duration(as.period(duration_sec, unit = "seconds")),
distance = distance / 1000, #konverterer distanse i meter til kilometer
duration_per_km_lubridate = as.duration(as.period(round(duration_per_km/1000, 0), unit = "seconds")),
duration_per_km = (duration_per_km/1000)/60,
puls_sone_snitt = cut(pulse_avg, breaks = c(0, 126, 141, 155, 170, 184, 210), labels = c("0", "Sone 1", "Sone 2", "Sone 3", "Sone 4", "Sone maks")),
puls_sone_maks = cut(pulse_max, breaks = c(0, 126, 141, 155, 170, 184, 210), labels = c("0", "Sone 1", "Sone 2", "Sone 3", "Sone 4", "Sone maks"))
)
qplot(data = df, x = distance, binwidth = 1)
ggplot(data = df, aes(x = as.factor(year), y = distance)) +
geom_boxplot() +
geom_jitter(colour = "steelblue", alpha = 0.2)
temp = group_by(df, month, year) %>%
summarise(antall = n()) %>%
ungroup() %>%
mutate(month = fct_recode(as.factor(month),
januar = "1",
februar = "2",
mars = "3",
april = "4",
mai = "5",
juni = "6",
juli = "7",
august = "8",
september = "9",
oktober = "10",
november = "11",
desember = "12"
))
temp2 = expand(temp, year, month)
temp = left_join(temp2, temp) %>%
mutate(., antall = ifelse(is.na(antall), 0, antall))
qplot(data = df, x = distance, binwidth = 1)
ggplot(data = df, aes(x = as.factor(year), y = distance)) +
geom_boxplot() +
geom_jitter(colour = "steelblue", alpha = 0.2)
temp = filter(df, duration_per_km < 15)
qplot(data = temp, x = duration_per_km, binwidth = 0.25)
ggplot(data = temp, aes(x = as.factor(year), y = duration_per_km)) +
geom_boxplot() +
geom_jitter(colour = "steelblue", alpha = 0.2)
temp = filter(df, pulse_avg != 0, is.na(df$pulse_avg) == FALSE)
ggplot(data = temp, aes(x = as.factor(year), y = pulse_avg)) +
geom_boxplot() +
geom_jitter(colour = "steelblue", alpha = 0.2)
ggplot(data = temp) +
geom_bar(aes(x = puls_sone_snitt))
ggplot(data = temp) +
geom_bar(aes(x = puls_sone_maks))
qplot(data = df, x = duration_min)
qplot(data = df, x = duration_min, binwidth = 10)
qplot(data = df, x = duration_min, binwidth = 5)
summary(df$duration_min)
temp = group_by(df, year, week) %>%
summarise(antall_minutter = sum(duration_min))
View(temp)
temp = group_by(df, year, week) %>%
summarise(antall_minutter = sum(duration_min)) %>%
ungroup()
temp = left_join(expand(temp, year, week = 1:52), temp)
View(temp)
temp = group_by(df, year, week) %>%
summarise(antall_minutter = sum(duration_min)) %>%
ungroup()
temp = left_join(expand(temp, year, week = 1:52), temp) %>%
mutate(antall_minutter = ifelse(is.na(antall_minutter), 0, antall_minutter)) %>%
mutate(yearweek = ifelse(nchar(week) == 1, paste0(0, week), week),
yearweek = paste0(year, yearweek))
View(temp)
ggplot(data = temp) +
geom_point(aes(x = yearweek, y = antall_minutter))
?rownames_to_column
temp = group_by(df, year, week) %>%
summarise(antall_minutter = sum(duration_min)) %>%
ungroup()
temp = left_join(expand(temp, year, week = 1:52), temp) %>%
mutate(antall_minutter = ifelse(is.na(antall_minutter), 0, antall_minutter)) %>%
mutate(yearweek = ifelse(nchar(week) == 1, paste0(0, week), week),
yearweek = paste0(year, yearweek),
id = seq_along(yearweek)
)
ggplot(data = temp) +
geom_point(aes(x = id, y = antall_minutter))
temp = group_by(df, year, week) %>%
summarise(antall_minutter = sum(duration_min)) %>%
ungroup()
temp = left_join(expand(temp, year, week = 1:52), temp) %>%
mutate(yearweek = ifelse(nchar(week) == 1, paste0(0, week), week),
yearweek = paste0(year, yearweek),
id = seq_along(yearweek)
)
ggplot(data = temp) +
geom_point(aes(x = id, y = antall_minutter))
ggplot(data = temp) +
geom_point(aes(x = id, y = antall_minutter)) +
geom_hline(aes(yintercept = 75))
temp = group_by(df, year, week) %>%
summarise(antall_minutter = sum(duration_min)) %>%
ungroup()
temp = left_join(expand(temp, year, week = 1:52), temp) %>%
mutate(yearweek = ifelse(nchar(week) == 1, paste0(0, week), week),
yearweek = paste0(year, yearweek),
id = seq_along(yearweek),
treningsdose = as.factor(ifelse(antall_minutter <= 75, "Over 75 min", "Under 75 min"))
)
ggplot(data = temp) +
geom_point(aes(x = id, y = antall_minutter, colour = treningsdose)) +
geom_hline(aes(yintercept = 75))
ggplot(data = temp, aes(x = id, y = antall_minutter, colour = treningsdose)) +
geom_point() +
geom_smooth() +
geom_hline(aes(yintercept = 75)) +
labs(x = "Tid", y = "Trening per uke (minutter)")
ggplot(data = temp, aes(x = id, y = antall_minutter)) +
geom_point(aes(colour = treningsdose)) +
geom_smooth() +
geom_hline(aes(yintercept = 75)) +
labs(x = "Tid", y = "Trening per uke (minutter)")
ggplot(data = df) +
geom_bar(aes(x = treningsdose))
ggplot(data = temp) +
geom_bar(aes(x = treningsdose))
temp = group_by(df, year, week) %>%
summarise(antall_minutter = sum(duration_min, na.rm = TRUE)) %>%
ungroup()
temp = left_join(expand(temp, year, week = 1:52), temp) %>%
mutate(yearweek = ifelse(nchar(week) == 1, paste0(0, week), week),
yearweek = paste0(year, yearweek),
id = seq_along(yearweek),
treningsdose = as.factor(ifelse(antall_minutter <= 75, "Over 75 min", "Under 75 min"))
)
qplot(data = df, x = duration_min, binwidth = 5) +
labs(x = "Varighet i minutter", y = "Antall", title = "50 % av turene ligger mellom 40 og 60 minutter")
ggplot(data = temp) +
geom_bar(aes(x = treningsdose)) +
labs(x = "Trening i over eller under 75 minutter i uka?", y = "Antall", title = "To av tre uker med trening er over Helsedirektoratets anbefaling", subtitle = "Men de fleste mangler data")
ggplot(data = temp, aes(x = id, y = antall_minutter)) +
geom_point(aes(colour = treningsdose)) +
geom_smooth() +
geom_hline(aes(yintercept = 75)) +
labs(x = "Tid", y = "Trening per uke (minutter)")
