id = periode,
hendelse = event(dag_periode, hendelse)
)
View(temp)
View(df_alle)
temp = tmerge(
data1 = select(df_survival, -er_trening),
data2 = df_alle,
id = periode,
hendelse = event(dag_periode, hendelse),
)
temp = tmerge(
data1 = select(df_survival, -er_trening),
data2 = df_alle,
id = periode,
hendelse = event(dag_periode, hendelse)
)
blogdown:::serve_site()
df_alle = group(df_alle, periode)%>%
mutate(dag_periode = seq_along(dato))
df_alle = group_by(df_alle, periode)%>%
mutate(dag_periode = seq_along(dato))
View(df_alle)
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
?rnorm
library(tidyverse)
set.seed(1106)
?rep
?bind_cols
?rep
15+25+40
df$holdning_1 = (c(rep(1, 150), rep(2, 250), rep(3, 400), rep(4, 100), rep(5, 100)))
df$holdning_1 = c(rep(1, 150), rep(2, 250), rep(3, 400), rep(4, 100), rep(5, 100))
c(rep(1, 150), rep(2, 250), rep(3, 400), rep(4, 100), rep(5, 100))
a = c(rep(1, 150), rep(2, 250), rep(3, 400), rep(4, 100), rep(5, 100))
?data.frame
df = data.frame("ID" = 1:1000, stringsAsFactors = FALSE)
df$holdning_1 = a = c(rep(1, 150), rep(2, 250), rep(3, 400), rep(4, 100), rep(5, 100))
View(df)
df$holdning_1 = round(runif(1000, min = 1, max = 5))
View(df)
qplot(data = df, holdning_1)
ggplot(data = df) +
geom_histogram(aes(x = holdning_1))
ggplot(data = df) +
geom_histogram(aes(x = holdning_1))
theme_set(theme_minimal())
set.seed(1106)
options(scipen = 100)
ggplot(data = df) +
geom_histogram(aes(x = holdning_1))
ggplot(data = df) +
geom_histogram(aes(x = holdning_1)) +
labs(x = "Holdning fra 1 til 5", y = "Antall", title = "Populasjonens faktiske holdning til X", subtitle = "Fra 1 til 5")
?sample
utvalg = sample_n(df, 100, replace = FALSE)
View(utvalg)
ggplot(data = utvalg) +
geom_histogram(aes(x = holdning_1)) +
labs(x = "Holdning fra 1 til 5", y = "Antall", title = "Populasjonens faktiske holdning til X", subtitle = "Fra 1 til 5")
temp = full_join(df, utvalg)
View(temp)
temp = full_join(df, select(utvalg, ID, målt_holdning = holdning_1))
View(temp)
temp_1 = group_by(df, holdning_1) %>%
summarise(., antall = n())
View(temp_1)
temp_1 = group_by(df, holdning_1) %>%
summarise(., antall = n()) %>%
mutate(andel = antall/sum(antall))
sum(temp_1$andel)
temp_2 = group_by(utvalg, holdning_1) %>%
summarise(., antall = n()) %>%
mutate(andel = antall/sum(antall))
ggplot() +
geom_histogram(aes(x = holdning_1), data = temp_1)
geom_col(aes(x = andel), data = temp_1)
ggplot() +
geom_col(aes(x = andel), data = temp_1)
ggplot() +
geom_col(aes(x = holdning_1, y = andel), data = temp_1)
ggplot() +
geom_col(aes(x = holdning_1, y = andel), data = temp_1) +
geom_col(aes(x = holdning_1, y = andel), data = temp_2)
ggplot() +
geom_col(aes(x = holdning_1, y = andel), data = temp_1) +
geom_col(aes(x = holdning_1, y = andel, colour = "green", alpha = 0.2), data = temp_2)
geom_col(aes(x = holdning_1, y = andel), data = temp_1) +
geom_col(aes(x = holdning_1, y = andel), fill = "green", alpha = 0.2, data = temp_2)
ggplot() +
geom_col(aes(x = holdning_1, y = andel), data = temp_1) +
geom_col(aes(x = holdning_1, y = andel), fill = "green", alpha = 0.2, data = temp_2)
ggplot() +
geom_col(aes(x = holdning_1, y = andel), fill = "steelblue", alpha = 0.2, data = temp_1) +
geom_col(aes(x = holdning_1, y = andel), fill = "green", alpha = 0.2, data = temp_2)
temp = bind_rows(populasjon = temp_1, utvalg = temp_2, .id = "data")
View(temp)
ggplot(data = temp) +
geom_col(aes(x = holdning_1, y = andel), fill = data, alpha = 0.2)
ggplot(data = temp) +
geom_col(aes(x = holdning_1, y = andel, fill = data), alpha = 0.2)
ggplot(data = temp) +
geom_col(aes(x = holdning_1, y = andel, fill = data), alpha = 0.5)
?position_dodge
ggplot(data = temp) +
geom_col(aes(x = holdning_1, y = andel, fill = data), alpha = 0.5, position = "dodge")
ggplot(data = temp) +
geom_col(aes(x = holdning_1, y = andel, fill = data), position = "dodge")
library(tidyverse)
#settings
theme_set(theme_minimal())
set.seed(1106)
options(scipen = 100)
?rbinom
df = data.frame("ID" = 1:1000, stringsAsFactors = FALSE)
temp = rbinom(1000, 1, 0.5)
qplot(temp)
?rnorm
temp = rnorm(1000, 10000, 2000)
qplot(temp)
temp = rnorm(1000, 12500, 2500)
qplot(temp)
ggplot(data = df) +
geom_histogram(aes(x = holdning_1))
df = data.frame("ID" = 1:1000, stringsAsFactors = FALSE)
#binomisk sannsynlighet for holdning #1
df$holdning_1 = rbinom(1000, 1, 0.5)
#kontinuerlig normaltfordelt variabel på verdi holdning #2
df$holdning_2 = rnorm(1000, 12500, 2500)
#diskret sannsynlighet
#trekker denne fra en uniform fordeling, og runder av til nærmeste heltall
#kunne egentlig også brukt sample() med replacement = TRUE?
df$holdning_3 = round(runif(1000, min = 1, max = 5))
ggplot(data = df) +
geom_histogram(aes(x = holdning_3)) +
labs(x = "Holdning fra 1 til 5", y = "Antall", title = "Populasjonens faktiske holdning til X", subtitle = "Fra 1 til 5")
ggplot(data = df) +
geom_histogram(aes(x = holdning_1))
ggplot(data = df) +
geom_bar(aes(x = holdning_1))
ggplot(data = df) +
geom_histogram(aes(x = holdning_2))
ggplot(data = df) +
geom_histogram(aes(x = holdning_2), binwidth = 1000)
ggplot(data = df) +
geom_bar(aes(x = holdning_1)) +
labs(x = "Ja eller nei", y = "Antall", title = "Populasjonens faktiske holdning til #1", subtitle = "1 eller 0")
ggplot(data = df) +
geom_histogram(aes(x = holdning_2), binwidth = 1000) +
labs(x = "Verdianslag på hest", y = "Antall", title = "Populasjonens holdning til #2", subtitle = "Verdi normalfordelt rundt 12 500")
ggplot(data = df) +
geom_histogram(aes(x = holdning_3)) +
labs(x = "Holdning fra 1 til 5", y = "Antall", title = "Populasjonens faktiske holdning til #3", subtitle = "Fra 1 til 5")
ggplot(data = df) +
geom_bar(aes(x = holdning_3)) +
labs(x = "Holdning fra 1 til 5", y = "Antall", title = "Populasjonens faktiske holdning til #3", subtitle = "Fra 1 til 5")
ggplot(data = df) +
geom_bar(aes(x = holdning_1)) +
labs(x = "Ja eller nei", y = "Antall", title = "Populasjonens faktiske holdning til #1", subtitle = "1 eller 0")
ggplot(data = df) +
geom_histogram(aes(x = holdning_2), binwidth = 1000) +
labs(x = "Verdianslag på hest", y = "Antall", title = "Populasjonens holdning til #2", subtitle = "Verdi normalfordelt rundt 12 500")
ggplot(data = df) +
geom_bar(aes(x = holdning_3)) +
labs(x = "Holdning fra 1 til 5", y = "Antall", title = "Populasjonens faktiske holdning til #3", subtitle = "Fra 1 til 5")
summary(df$holdning_1)
summary(df$holdning_2)
utvalg = sample_n(df, 100, replace = FALSE)
temp_1 = group_by(df, holdning_1) %>%
summarise(., antall = n()) %>%
mutate(andel = antall/sum(antall))
temp_2 = group_by(utvalg, holdning_1) %>%
summarise(., antall = n()) %>%
mutate(andel = antall/sum(antall))
temp = bind_rows(populasjon = temp_1, utvalg = temp_2, .id = "data")
ggplot(data = temp) +
geom_col(aes(x = holdning_1, y = andel, fill = data), position = "dodge")
temp_1 = group_by(df, holdning_2) %>%
summarise(., antall = n()) %>%
mutate(andel = antall/sum(antall))
temp_2 = group_by(utvalg, holdning_2) %>%
summarise(., antall = n()) %>%
mutate(andel = antall/sum(antall))
temp = bind_rows(populasjon = temp_1, utvalg = temp_2, .id = "data")
ggplot(data = temp) +
geom_col(aes(x = holdning_1, y = andel, fill = data), position = "dodge")
temp_1 = group_by(df, holdning_2) %>%
summarise(., antall = n()) %>%
mutate(andel = antall/sum(antall))
temp_2 = group_by(utvalg, holdning_2) %>%
summarise(., antall = n()) %>%
mutate(andel = antall/sum(antall))
temp = bind_rows(populasjon = temp_1, utvalg = temp_2, .id = "data")
ggplot(data = temp) +
geom_col(aes(x = holdning_2, y = andel, fill = data), position = "dodge")
temp_1 = group_by(df, holdning_2) %>%
summarise(., antall = n()) %>%
mutate(andel = antall/sum(antall))
temp_2 = group_by(utvalg, holdning_2) %>%
summarise(., antall = n()) %>%
mutate(andel = antall/sum(antall))
temp = bind_rows(populasjon = temp_1, utvalg = temp_2, .id = "data")
ggplot(data = temp) +
geom_col(aes(x = holdning_2, y = andel, fill = data), position = "dodge")
View(temp)
ggplot() +
geom_freqpoly(aes(x = holdning_2), data = df) +
geom_freqpoly(aes(x = holdning_2), data = utvalg)
?geom_freqpoly
ggplot() +
geom_freqpoly(aes(x = holdning_2, y = stat(density)), data = df) +
geom_freqpoly(aes(x = holdning_2, y = stat(density)), data = utvalg)
ggplot() +
geom_freqpoly(aes(x = holdning_2, y = stat(density)), colour = "red", data = df) +
geom_freqpoly(aes(x = holdning_2, y = stat(density)), colour = "blue", data = utvalg)
ggplot() +
geom_freqpoly(aes(x = holdning_2, y = stat(density)), colour = "red", data = df, binwidth = 1000) +
geom_freqpoly(aes(x = holdning_2, y = stat(density)), colour = "blue", data = utvalg, binwidth = 1000)
temp_1 = group_by(df, holdning_3) %>%
summarise(., antall = n()) %>%
mutate(andel = antall/sum(antall))
temp_2 = group_by(utvalg, holdning_3) %>%
summarise(., antall = n()) %>%
mutate(andel = antall/sum(antall))
temp = bind_rows(populasjon = temp_1, utvalg = temp_2, .id = "data")
#holdning_1
ggplot(data = temp) +
geom_col(aes(x = holdning_3, y = andel, fill = data), position = "dodge")
temp_1 = group_by(df, holdning_1) %>%
summarise(., antall = n()) %>%
mutate(andel = antall/sum(antall))
temp_2 = group_by(utvalg, holdning_1) %>%
summarise(., antall = n()) %>%
mutate(andel = antall/sum(antall))
temp = bind_rows(populasjon = temp_1, utvalg = temp_2, .id = "data")
#holdning_1
ggplot(data = temp) +
geom_col(aes(x = holdning_1, y = andel, fill = data), position = "dodge")
#holdning_2
ggplot() +
geom_freqpoly(aes(x = holdning_2, y = stat(density)), colour = "red", data = df, binwidth = 1000) +
geom_freqpoly(aes(x = holdning_2, y = stat(density)), colour = "blue", data = utvalg, binwidth = 1000)
#holdning_3
temp_1 = group_by(df, holdning_3) %>%
summarise(., antall = n()) %>%
mutate(andel = antall/sum(antall))
temp_2 = group_by(utvalg, holdning_3) %>%
summarise(., antall = n()) %>%
mutate(andel = antall/sum(antall))
temp = bind_rows(populasjon = temp_1, utvalg = temp_2, .id = "data")
#holdning_1
ggplot(data = temp) +
geom_col(aes(x = holdning_3, y = andel, fill = data), position = "dodge")
temp_1 = group_by(df, holdning_1) %>%
summarise(., antall = n()) %>%
mutate(andel = antall/sum(antall))
temp_2 = group_by(utvalg, holdning_1) %>%
summarise(., antall = n()) %>%
mutate(andel = antall/sum(antall))
temp = bind_rows(populasjon = temp_1, utvalg = temp_2, .id = "data")
#holdning_1
ggplot(data = temp) +
geom_col(aes(x = holdning_1, y = andel, fill = data), position = "dodge") +
labs(title = "Sammenlikning av utvalg og populasjon på binomisk fordelt variabel")
#holdning_2
ggplot() +
geom_freqpoly(aes(x = holdning_2, y = stat(density)), colour = "red", data = df, binwidth = 1000) +
geom_freqpoly(aes(x = holdning_2, y = stat(density)), colour = "blue", data = utvalg, binwidth = 1000) +
labs(title = "Sammenlikning av utvalg og populasjon på normalfordelt variabel")
#holdning_3
temp_1 = group_by(df, holdning_3) %>%
summarise(., antall = n()) %>%
mutate(andel = antall/sum(antall))
temp_2 = group_by(utvalg, holdning_3) %>%
summarise(., antall = n()) %>%
mutate(andel = antall/sum(antall))
temp = bind_rows(populasjon = temp_1, utvalg = temp_2, .id = "data")
#holdning_1
ggplot(data = temp) +
geom_col(aes(x = holdning_3, y = andel, fill = data), position = "dodge") +
labs(title = "Sammenlikning av utvalg og populasjon på diskret variabel")
?bind_rows
utvalg = sample_n(df, 100, replace = FALSE)
for(i in 2:100){
temp = sample_n(df, 100, replace = TRUE)
bind_rows(utvalg, temp, .id = TRUE)
}
utvalg = sample_n(df, 100, replace = FALSE)
for(i in 2:100){
temp = sample_n(df, 100, replace = TRUE)
bind_rows(utvalg, temp, .id = "utvalgsnummer")
}
utvalg = sample_n(df, 100, replace = FALSE)
for(i in 2:100){
temp = sample_n(df, 100, replace = TRUE)
utvalg = bind_rows(utvalg, temp, .id = "utvalgsnummer")
}
View(utvalg)
utvalg = sample_n(df, 100, replace = FALSE)
utvalg$utvalgsnummer = 1
for(i in 2:100){
temp = sample_n(df, 100, replace = TRUE)
temp$utvalgsnummer = i
utvalg = bind_rows(utvalg, temp)
}
temp = select(utvalg, ID, holdning_1, utvalgsnummer) %>%
group_by(utvalgsnummer) %>%
summarise(gjennomsnitt = mean(holdning_1))
View(temp)
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt), data = temp)
geom_freqpoly(aes(x = gjennomsnitt), data = temp, binwidth = 0.1)
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt), data = temp, binwidth = 0.1)
?geom_freqpoly
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt), data = temp, binwidth = 0.1) +
scale_x_continuous(limits = c(0,1))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt), binwidth = 0.1, data = filter(temp, utvalgsnummer < 10) +
scale_x_continuous(limits = c(0,1))
ggplot() +
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt), binwidth = 0.1, data = filter(temp, utvalgsnummer < 10)) +
scale_x_continuous(limits = c(0,1))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt), binwidth = 0.1, data = filter(temp, utvalgsnummer < 20)) +
scale_x_continuous(limits = c(0,1))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt), binwidth = 0.1, data = filter(temp, utvalgsnummer < 50)) +
scale_x_continuous(limits = c(0,1))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt), binwidth = 0.1, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt), binwidth = 0.1, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt), binwidth = 0.1, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt), binwidth = 0.1, colour = "black", data = temp) +
scale_x_continuous(limits = c(0,1))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.1, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.1, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.1, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.1, colour = "black", data = temp) +
scale_x_continuous(limits = c(0,1))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "black", data = temp) +
scale_x_continuous(limits = c(0,1))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.01, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.01, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.01, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.01, colour = "black", data = temp) +
scale_x_continuous(limits = c(0,1))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.04, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.04, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.04, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.04, colour = "black", data = temp) +
scale_x_continuous(limits = c(0,1))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "black", data = temp) +
scale_x_continuous(limits = c(0,1))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "black", data = temp) +
scale_x_continuous(limits = c(0,1)) +
scale_colour_discrete()
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 0, to = 1, by = 0.05), limits = c(0,1)) +
scale_colour_discrete()
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 0, to = 1, by = 0.1), minor_breaks = NULL, limits = c(0,1)) +
scale_colour_discrete()
blogdown:::serve_site()
#holdning_2
temp = select(utvalg, ID, holdning_2, utvalgsnummer) %>%
group_by(utvalgsnummer) %>%
summarise(gjennomsnitt = mean(holdning_2))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 0, to = 20000, by = 1000), minor_breaks = NULL, limits = c(0,20000))
#holdning_3
temp = select(utvalg, ID, holdning_3, utvalgsnummer) %>%
group_by(utvalgsnummer) %>%
summarise(gjennomsnitt = mean(holdning_3))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 0, to = 6, by = 1), minor_breaks = NULL, limits = c(0,6))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 0, to = 6, by = 0.05), minor_breaks = NULL, limits = c(0,6))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 1, to = 5, by = 0.5), minor_breaks = NULL, limits = c(0,6))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 2.5, to = 3.5, by = 0.5), minor_breaks = NULL, limits = c(0,6))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.1, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.1, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.1, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.1, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 2.5, to = 3.5, by = 0.5), minor_breaks = NULL, limits = c(0,6))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.1, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.1, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.1, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.1, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 2.5, to = 3.5, by = 0.5), minor_breaks = NULL, limits = c(2,4))
temp = select(utvalg, ID, holdning_2, utvalgsnummer) %>%
group_by(utvalgsnummer) %>%
summarise(gjennomsnitt = mean(holdning_2))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 0, to = 20000, by = 1000), minor_breaks = NULL, limits = c(0,20000))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 10000, to = 16000, by = 1000), minor_breaks = NULL, limits = c(8000,16000))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 10000, to = 16000, by = 1000), minor_breaks = NULL, limits = c(8000, 16000))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 10000, to = 16000, by = 1000), minor_breaks = NULL, limits = c(10000, 16000))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 10000, to = 16000, by = 1000), minor_breaks = NULL)
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 10000, to = 16000, by = 1000), minor_breaks = NULL, limits = c(10000, 16000))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 100, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 100, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 100, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 100, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 10000, to = 16000, by = 1000), minor_breaks = NULL, limits = c(10000, 16000))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 500, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 500, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 500, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 500, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 10000, to = 16000, by = 1000), minor_breaks = NULL, limits = c(10000, 16000))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 250, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 250, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 250, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 250, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 10000, to = 16000, by = 1000), minor_breaks = NULL, limits = c(10000, 16000))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 250, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 250, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 250, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 250, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 10000, to = 16000, by = 1000), minor_breaks = NULL, limits = c(11000, 14000))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 250, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 250, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 250, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 250, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 11000, to = 14000, by = 500), minor_breaks = NULL, limits = c(11000, 14000))
