ggplot() +
geom_freqpoly(aes(x = gjennomsnitt), data = temp, binwidth = 0.1)
?geom_freqpoly
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt), data = temp, binwidth = 0.1) +
scale_x_continuous(limits = c(0,1))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt), binwidth = 0.1, data = filter(temp, utvalgsnummer < 10) +
scale_x_continuous(limits = c(0,1))
ggplot() +
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt), binwidth = 0.1, data = filter(temp, utvalgsnummer < 10)) +
scale_x_continuous(limits = c(0,1))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt), binwidth = 0.1, data = filter(temp, utvalgsnummer < 20)) +
scale_x_continuous(limits = c(0,1))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt), binwidth = 0.1, data = filter(temp, utvalgsnummer < 50)) +
scale_x_continuous(limits = c(0,1))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt), binwidth = 0.1, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt), binwidth = 0.1, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt), binwidth = 0.1, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt), binwidth = 0.1, colour = "black", data = temp) +
scale_x_continuous(limits = c(0,1))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.1, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.1, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.1, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.1, colour = "black", data = temp) +
scale_x_continuous(limits = c(0,1))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "black", data = temp) +
scale_x_continuous(limits = c(0,1))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.01, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.01, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.01, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.01, colour = "black", data = temp) +
scale_x_continuous(limits = c(0,1))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.04, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.04, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.04, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.04, colour = "black", data = temp) +
scale_x_continuous(limits = c(0,1))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "black", data = temp) +
scale_x_continuous(limits = c(0,1))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "black", data = temp) +
scale_x_continuous(limits = c(0,1)) +
scale_colour_discrete()
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 0, to = 1, by = 0.05), limits = c(0,1)) +
scale_colour_discrete()
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 0, to = 1, by = 0.1), minor_breaks = NULL, limits = c(0,1)) +
scale_colour_discrete()
blogdown:::serve_site()
#holdning_2
temp = select(utvalg, ID, holdning_2, utvalgsnummer) %>%
group_by(utvalgsnummer) %>%
summarise(gjennomsnitt = mean(holdning_2))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 0, to = 20000, by = 1000), minor_breaks = NULL, limits = c(0,20000))
#holdning_3
temp = select(utvalg, ID, holdning_3, utvalgsnummer) %>%
group_by(utvalgsnummer) %>%
summarise(gjennomsnitt = mean(holdning_3))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 0, to = 6, by = 1), minor_breaks = NULL, limits = c(0,6))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 0, to = 6, by = 0.05), minor_breaks = NULL, limits = c(0,6))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 1, to = 5, by = 0.5), minor_breaks = NULL, limits = c(0,6))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 2.5, to = 3.5, by = 0.5), minor_breaks = NULL, limits = c(0,6))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.1, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.1, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.1, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.1, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 2.5, to = 3.5, by = 0.5), minor_breaks = NULL, limits = c(0,6))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.1, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.1, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.1, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.1, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 2.5, to = 3.5, by = 0.5), minor_breaks = NULL, limits = c(2,4))
temp = select(utvalg, ID, holdning_2, utvalgsnummer) %>%
group_by(utvalgsnummer) %>%
summarise(gjennomsnitt = mean(holdning_2))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 0, to = 20000, by = 1000), minor_breaks = NULL, limits = c(0,20000))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 10000, to = 16000, by = 1000), minor_breaks = NULL, limits = c(8000,16000))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 10000, to = 16000, by = 1000), minor_breaks = NULL, limits = c(8000, 16000))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 10000, to = 16000, by = 1000), minor_breaks = NULL, limits = c(10000, 16000))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 10000, to = 16000, by = 1000), minor_breaks = NULL)
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 10000, to = 16000, by = 1000), minor_breaks = NULL, limits = c(10000, 16000))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 100, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 100, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 100, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 100, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 10000, to = 16000, by = 1000), minor_breaks = NULL, limits = c(10000, 16000))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 500, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 500, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 500, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 500, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 10000, to = 16000, by = 1000), minor_breaks = NULL, limits = c(10000, 16000))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 250, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 250, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 250, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 250, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 10000, to = 16000, by = 1000), minor_breaks = NULL, limits = c(10000, 16000))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 250, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 250, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 250, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 250, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 10000, to = 16000, by = 1000), minor_breaks = NULL, limits = c(11000, 14000))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 250, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 250, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 250, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 250, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 11000, to = 14000, by = 500), minor_breaks = NULL, limits = c(11000, 14000))
blogdown:::serve_site()
warning()
blogdown:::serve_site()
blogdown:::new_post_addin()
#biblioteker
library(here)
library(knitr)
suppressPackageStartupMessages(library(tidyverse))
#data
df = read.csv2(here("content/data/tippeliga_2019.csv"),stringsAsFactors = FALSE, na.strings = "", nrows = 16) %>%
select(., -UniBet, - NordicBet)
numeric_vars = names(df)[2:6]
df = mutate(df, gjennomsnitt = rowMeans(select(df,numeric_vars),na.rm=TRUE)) %>%
arrange(gjennomsnitt)
kable(df)
#data
df = read.csv2(here("content/data/tippeliga_2019.csv"),stringsAsFactors = FALSE, na.strings = "", nrows = 16) %>%
select(., -UniBet, - NordicBet)
numeric_vars
df = mutate(df, gjennomsnitt = rowMeans(select(df,numeric_vars),na.rm=TRUE)) %>%
arrange(gjennomsnitt)
kable(df)
kable(df)
kable(select(df, Lag, Prognose = gjennomsnitt, Resultat))
kable(select(df, Lag, Prognose = gjennomsnitt, Resultat))
blogdown:::serve_site()
#biblioteker
library(here)
library(knitr)
suppressPackageStartupMessages(library(tidyverse))
#data
df = read.csv2(here("content/data/tippeliga_2019.csv"),stringsAsFactors = FALSE, na.strings = "", nrows = 16) %>%
select(., -UniBet, - NordicBet)
numeric_vars = names(df)[2:6]
df = mutate(df, gjennomsnitt = rowMeans(select(df,numeric_vars),na.rm=TRUE)) %>%
arrange(gjennomsnitt)
kable(select(df, Lag, Prognose = gjennomsnitt, Resultat))
df = mutate(df, Prognose = rowMeans(select(df,numeric_vars),na.rm=TRUE)) %>%
arrange(Prognose)
df = read.csv2(here("content/data/tippeliga_2019.csv"),stringsAsFactors = FALSE, na.strings = "", nrows = 16) %>%
select(., -UniBet, - NordicBet)
numeric_vars = names(df)[2:6]
df = mutate(df, Prognose = rowMeans(select(df,numeric_vars),na.rm=TRUE)) %>%
arrange(Prognose)
temp = gather(df, ID, prognose, Nettavsien:Prognose) %>%
mutate(type = ifelse(person == "Resultat", "Resultat", "Prognose"))
temp = gather(df, ID, prognose, Nettavisen:Prognose) %>%
mutate(type = ifelse(person == "Resultat", "Resultat", "Prognose"))
temp = gather(df, ID, prognose, Nettavisen:Prognose)
temp = gather(df, ID, prognose, Nettavisen:Prognose) %>%
mutate(type = ifelse(ID == "Resultat", "Resultat", "Prognose"))
ggplot() +
geom_point(data = filter(temp, type == "Resultat"), aes(x = prognose, y = fct_reorder(Lag, prognose)), colour = "black") +
ggplot() +
geom_point(data = filter(temp, type == "Resultat"), aes(x = prognose, y = fct_reorder(Lag, prognose)), colour = "black")
library(here)
library(knitr)
suppressPackageStartupMessages(library(tidyverse))
ggplot() +
geom_point(data = filter(temp, type == "Resultat"), aes(x = prognose, y = fct_reorder(Lag, prognose)), colour = "black")
#settings
theme_set(theme_minimal())
set.seed(1106)
kable(select(df, Lag, Prognose, Resultat))
temp = gather(df, ID, prognose, Nettavisen:Prognose) %>%
mutate(type = ifelse(ID == "Resultat", "Resultat", "Prognose"))
ggplot() +
geom_point(data = filter(temp, type == "Resultat"), aes(x = prognose, y = fct_reorder(Lag, prognose)), colour = "black") +
geom_point(data = filter(temp, type == "Prognose"), aes(x = prognose, y = fct_reorder(Lag, prognose)), colour = "grey")
ggplot() +
geom_point(data = filter(temp, type == "Resultat"), aes(x = prognose, y = fct_reorder(Lag, prognose)), colour = "black") +
geom_point(data = filter(temp, type == "Prognose"), aes(x = prognose, y = Lag, prognose), colour = "grey")
ggplot() +
geom_point(data = filter(temp, type == "Resultat"), aes(x = prognose, y = fct_reorder(Lag, prognose)), colour = "black") +
geom_point(data = filter(temp, type == "Prognose"), aes(x = prognose, y = Lag), colour = "grey")
ggplot() +
geom_point(data = filter(temp, type == "Prognose"), aes(x = prognose, y = Lag), colour = "grey") +
geom_point(data = filter(temp, type == "Resultat"), aes(x = prognose, y = fct_reorder(Lag, prognose)), colour = "black")
ggplot() +
geom_point(data = filter(temp, type == "Prognose"), aes(x = prognose, y = Lag), colour = "grey") +
geom_point(data = filter(temp, type == "Resultat"), aes(x = prognose, y = fct_reorder(Lag, prognose)), colour = "black") +
geom_point(data = filter(temp, ID == "Prognose"), aes(x = prognose, y = Lag), colour = "red")
ggplot() +
geom_point(data = filter(temp, type == "Prognose"), aes(x = prognose, y = Lag), colour = "grey") +
geom_point(data = filter(temp, type == "Resultat"), aes(x = prognose, y = fct_reorder(Lag, prognose)), colour = "black") +
geom_point(data = filter(temp, ID == "Prognose"), aes(x = prognose, y = Lag), colour = "red")
labs(x = "Plassering", y = "Lag", colour = "Prognose eller resultat?")
ggplot() +
geom_point(data = filter(temp, type == "Prognose"), aes(x = prognose, y = Lag), colour = "grey") +
geom_point(data = filter(temp, type == "Resultat"), aes(x = prognose, y = Lag), colour = "black") +
geom_point(data = filter(temp, ID == "Prognose"), aes(x = prognose, y = Lag), colour = "red")
labs(x = "Plassering", y = "Lag", colour = "Prognose eller resultat?")
rmse <- function(feil){
sqrt(mean(feil^2))
}
temp = data.frame(ID = as.character(), rmse = as.numeric(), stringsAsFactors = FALSE)
feil = df$Resultat - df$Nettavisen
temp = bind_rows(temp, data.frame(ID = "Nettavisen", rmse = rmse(feil), stringsAsFactors = FALSE))
temp = data.frame(ID = as.character(), rmse = as.numeric(), stringsAsFactors = FALSE)
feil = df$Resultat - df$Nettavisen
temp = bind_rows(temp, data.frame(ID = "Nettavisen", rmse = rmse(feil), stringsAsFactors = FALSE))
feil = df$Resultat - df$Oddschecker
temp = bind_rows(temp, data.frame(ID = "Oddschecker", rmse = rmse(feil), stringsAsFactors = FALSE))
feil = df$Resultat - df$Dagsavisen
temp = bind_rows(temp, data.frame(ID = "Dagsavisen", rmse = rmse(feil), stringsAsFactors = FALSE))
feil = df$Resultat - df$Dagbladet
temp = bind_rows(temp, data.frame(ID = "Dagbladet", rmse = rmse(feil), stringsAsFactors = FALSE))
feil = df$Resultat - df$Aftenposten
temp = bind_rows(temp, data.frame(ID = "Aftenposten", rmse = rmse(feil), stringsAsFactors = FALSE))
feil = df$Resultat - df$Prognose
temp = bind_rows(temp, data.frame(ID = "MinPrognose", rmse = rmse(feil), stringsAsFactors = FALSE))
View(temp)
kable(temp)
kable(arrange(temp, rmse))
temp = gather(df, ID, prognose, Nettavisen:Prognose) %>%
mutate(type = ifelse(ID == "Resultat", "Resultat", "Prognose"))
ggplot() +
geom_count(data = filter(temp, type == "Prognose"), aes(x = prognose, y = Lag), colour = "grey") +
geom_point(data = filter(temp, type == "Resultat"), aes(x = prognose, y = Lag), colour = "black") +
geom_point(data = filter(temp, ID == "Prognose"), aes(x = prognose, y = Lag), colour = "red")
labs(x = "Plassering", y = "Lag", colour = "Prognose eller resultat?")
ggplot() +
geom_count(data = filter(temp, type == "Prognose"), aes(x = prognose, y = Lag), colour = "grey") +
geom_point(data = filter(temp, type == "Resultat"), aes(x = prognose, y = Lag), colour = "black") +
geom_point(data = filter(temp, ID == "Prognose"), aes(x = prognose, y = Lag), colour = "red") +
labs(x = "Plassering", y = "Lag", colour = "Prognose eller resultat?")
ggplot(aes(x = prognose, y = fct_reorder(Lag, prognose))) +
geom_count(data = filter(temp, type == "Prognose"), colour = "grey") +
geom_point(data = filter(temp, type == "Resultat"), colour = "black") +
geom_point(data = filter(temp, ID == "Prognose"), colour = "red") +
labs(x = "Plassering", y = "Lag", colour = "Prognose eller resultat?")
ggplot() +
geom_count(data = filter(temp, type == "Prognose"), aes(x = prognose, y = Lag), colour = "grey") +
geom_point(data = filter(temp, type == "Resultat"), aes(x = prognose, y = Lag), colour = "black") +
geom_point(data = filter(temp, ID == "Prognose"), aes(x = prognose, y = Lag), colour = "red") +
labs(x = "Plassering", y = "Lag", colour = "Prognose eller resultat?")
kable(arrange(select(df, Lag, Prognose, Resultat), Resultat))
blogdown:::new_post_addin()
library(tidyverse)
#settings
theme_set(theme_minimal())
set.seed(1106)
options(scipen = 100)
df <- read.csv2(here::here("content/data/runs_04012020.csv"), stringsAsFactors=FALSE)
ggplot(data = df, aes(x = as.factor(year), y = distance)) +
geom_boxplot() +
geom_jitter(colour = "steelblue", alpha = 0.2) +
labs(x = "År", y = "Hvor langt jeg løp", title = "Jevn stigning i medianturen fram til 2018")
df = filter(df, year != 2020)
ggplot(data = df, aes(x = as.factor(year), y = distance)) +
geom_boxplot() +
geom_jitter(colour = "steelblue", alpha = 0.2) +
labs(x = "År", y = "Hvor langt jeg løp", title = "Jevn stigning i medianturen fram til 2018")
ggplot(data = df) +
geom_bar(aes(x = as.factor(year), y = distance))
?geom_bar
ggplot(data = df) +
geom_bar(aes(x = as.factor(year)))
ggplot(data = df) +
geom_bar(aes(x = as.factor(year), weight = distance))
ggplot(data = df) +
geom_bar(aes(x = as.factor(year), weight = distance)) +
labs(x = "År", y = "Hvor langt jeg løp", title = "I 2019 løp jeg ca. 700 kilometer", subtitle = "100 kilometer mindre enn 2018, men langt mer enn tidligere år")
ggplot(data = df, aes(x = as.factor(year), y = distance)) +
geom_boxplot() +
geom_jitter(colour = "steelblue", alpha = 0.2) +
labs(x = "År", y = "Hvor langt jeg løp", title = "2019 ")
ggplot(data = df) +
geom_bar(aes(x = as.factor(year)))
temp = group_by(df, year, week) %>%
summarise(antall_minutter = sum(duration_min, na.rm = TRUE)) %>%
ungroup()
temp = left_join(expand(temp, year, week = 1:52), temp) %>%
mutate(yearweek = ifelse(nchar(week) == 1, paste0(0, week), week),
yearweek = paste0(year, yearweek),
id = seq_along(yearweek),
treningsdose = as.factor(ifelse(antall_minutter <= 75, "Over 75 min", "Under 75 min"))
)
qplot(data = df, x = duration_min, binwidth = 5) +
labs(x = "Varighet i minutter", y = "Antall", title = "50 % av turene ligger mellom 40 og 60 minutter")
ggplot(data = temp, aes(x = id, y = antall_minutter)) +
geom_point(aes(colour = treningsdose)) +
geom_smooth() +
geom_hline(aes(yintercept = 75)) +
labs(x = "Tid", y = "Trening per uke (minutter)")
View(temp)
ggplot(data = temp, aes(x = id, y = antall_minutter)) +
geom_point(aes(colour = treningsdose)) +
geom_smooth() +
geom_hline(aes(yintercept = 75)) +
geom_vline(aes(xintercept = c(52, 104))) +
labs(x = "Tid", y = "Trening per uke (minutter)")
ggplot(data = temp, aes(x = id, y = antall_minutter)) +
geom_point(aes(colour = treningsdose)) +
geom_smooth() +
geom_hline(aes(yintercept = 75)) +
geom_vline(aes(xintercept = 52)) +
geom_vline(aes(xintercept = 104)) +
geom_vline(aes(xintercept = 156)) +
geom_vline(aes(xintercept = 208)) +
geom_vline(aes(xintercept = 260)) +
labs(x = "Tid", y = "Trening per uke (minutter)")
?annotate
ggplot(data = temp, aes(x = id, y = antall_minutter)) +
geom_point(aes(colour = treningsdose)) +
geom_smooth() +
geom_hline(aes(yintercept = 75)) +
geom_vline(aes(xintercept = 52)) +
geom_vline(aes(xintercept = 104)) +
geom_vline(aes(xintercept = 156)) +
geom_vline(aes(xintercept = 208)) +
geom_vline(aes(xintercept = 260)) +
annotate("2019", x = 234, y = 350) +
labs(x = "Tid", y = "Trening per uke (minutter)", title = )
ggplot(data = temp, aes(x = id, y = antall_minutter)) +
geom_point(aes(colour = treningsdose)) +
geom_smooth() +
geom_hline(aes(yintercept = 75)) +
geom_vline(aes(xintercept = 52)) +
geom_vline(aes(xintercept = 104)) +
geom_vline(aes(xintercept = 156)) +
geom_vline(aes(xintercept = 208)) +
geom_vline(aes(xintercept = 260)) +
annotate("text", label = "2019", x = 234, y = 350) +
labs(x = "Tid", y = "Trening per uke (minutter)", title = )
ggplot(data = temp) +
geom_bar(aes(x = treningsdose)) +
labs(x = "Trening i over eller under 75 minutter i uka?", y = "Antall", title = "To av tre uker med trening er over Helsedirektoratets anbefaling", subtitle = "Men de fleste mangler data")
View(df)
temp$treningsdose[is.na(temp$treningsdose)]
temp$treningsdose[is.na(temp$treningsdose)] = "Under 75 min"
str(temp$treningsdose)
ggplot(data = temp) +
geom_bar(aes(x = treningsdose)) +
labs(x = "Trening i over eller under 75 minutter i uka?", y = "Antall", title = "To av tre uker med trening er over Helsedirektoratets anbefaling")
ggplot(data = temp) +
geom_bar(aes(x = treningsdose)) +
facet_wrap(~year) +
labs(x = "Trening i over eller under 75 minutter i uka?", y = "Antall", title = "To av tre uker med trening er over Helsedirektoratets anbefaling")
temp = group_by(df, year, week) %>%
summarise(antall_minutter = sum(duration_min, na.rm = TRUE)) %>%
ungroup()
View(temp)
sum(temp$antall_minutter)
sum(df$duration_min)
temp = left_join(expand(temp, year, week = 1:52), temp) %>%
mutate(yearweek = ifelse(nchar(week) == 1, paste0(0, week), week),
yearweek = paste0(year, yearweek),
id = seq_along(yearweek),
treningsdose = as.factor(ifelse(antall_minutter <= 75, "Over 75 min", "Under 75 min"))
)
sum(temp$antall_minutter)
sum(temp$antall_minutter, na.rm = TRUE)
temp = group_by(df, year, week) %>%
summarise(antall_minutter = sum(duration_min, na.rm = TRUE)) %>%
ungroup()
temp = left_join(expand(temp, year, week = 1:52), temp) %>%
mutate(yearweek = ifelse(nchar(week) == 1, paste0(0, week), week),
yearweek = paste0(year, yearweek),
id = seq_along(yearweek),
treningsdose = ifelse(antall_minutter <= 75, "Over 75 min", "Under 75 min")
)
temp = group_by(df, year, week) %>%
summarise(antall_minutter = sum(duration_min, na.rm = TRUE)) %>%
ungroup()
temp = left_join(expand(temp, year, week = 1:52), temp) %>%
mutate(yearweek = ifelse(nchar(week) == 1, paste0(0, week), week),
yearweek = paste0(year, yearweek),
id = seq_along(yearweek),
treningsdose = ifelse(antall_minutter >= 75, "Over 75 min", "Under 75 min")
)
temp$treningsdose[is.na(temp$treningsdose)] = "Under 75 min"
ggplot(data = temp) +
geom_bar(aes(x = treningsdose)) +
facet_wrap(~year) +
labs(x = "Trening i over eller under 75 minutter i uka?", y = "Antall", title = "To av tre uker med trening er over Helsedirektoratets anbefaling")
ggplot(data = temp, aes(x = id, y = antall_minutter)) +
geom_point(aes(colour = treningsdose)) +
geom_smooth() +
geom_hline(aes(yintercept = 75)) +
geom_vline(aes(xintercept = 52)) +
geom_vline(aes(xintercept = 104)) +
geom_vline(aes(xintercept = 156)) +
geom_vline(aes(xintercept = 208)) +
geom_vline(aes(xintercept = 260)) +
annotate("text", label = "2015", x = 26, y = 350) +
annotate("text", label = "2019", x = 234, y = 350) +
labs(x = "Tid", y = "Trening per uke (minutter)", title = "Mange uker når anbefalt treningsdose i 2019", subtitle ="Men nedadgående trend mot slutten av året")
temp = group_by(df, year, week) %>%
summarise(antall_minutter = sum(duration_min, na.rm = TRUE)) %>%
ungroup()
temp = left_join(expand(temp, year, week = 1:52), temp) %>%
mutate(yearweek = ifelse(nchar(week) == 1, paste0(0, week), week),
yearweek = paste0(year, yearweek),
id = seq_along(yearweek),
treningsdose = ifelse(antall_minutter >= 75, "Over 75 min", "Under 75 min")
)
temp$treningsdose[is.na(temp$treningsdose)] = "Under 75 min"
ggplot(data = temp) +
geom_bar(aes(x = treningsdose)) +
facet_wrap(~year) +
labs(x = "Trening i over eller under 75 minutter i uka?", y = "Antall", title = "Tre av fem uker  er over Helsedirektoratets anbefaling")
ggplot(data = temp, aes(x = id, y = antall_minutter)) +
geom_point(aes(colour = treningsdose)) +
geom_smooth() +
geom_hline(aes(yintercept = 75)) +
geom_vline(aes(xintercept = 52)) +
geom_vline(aes(xintercept = 104)) +
geom_vline(aes(xintercept = 156)) +
geom_vline(aes(xintercept = 208)) +
geom_vline(aes(xintercept = 260)) +
annotate("text", label = "2015", x = 26, y = 350) +
annotate("text", label = "2017", x = 130, y = 350) +
annotate("text", label = "2019", x = 234, y = 350) +
labs(x = "Tid", y = "Trening per uke (minutter)", title = "Mange uker når anbefalt treningsdose i 2019", subtitle ="Men nedadgående trend mot slutten av året")
blogdown:::serve_site()
