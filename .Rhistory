ggplot(data = df) +
geom_histogram(aes(x = holdning_3)) +
labs(x = "Holdning fra 1 til 5", y = "Antall", title = "Populasjonens faktiske holdning til X", subtitle = "Fra 1 til 5")
ggplot(data = df) +
geom_histogram(aes(x = holdning_1))
ggplot(data = df) +
geom_bar(aes(x = holdning_1))
ggplot(data = df) +
geom_histogram(aes(x = holdning_2))
ggplot(data = df) +
geom_histogram(aes(x = holdning_2), binwidth = 1000)
ggplot(data = df) +
geom_bar(aes(x = holdning_1)) +
labs(x = "Ja eller nei", y = "Antall", title = "Populasjonens faktiske holdning til #1", subtitle = "1 eller 0")
ggplot(data = df) +
geom_histogram(aes(x = holdning_2), binwidth = 1000) +
labs(x = "Verdianslag på hest", y = "Antall", title = "Populasjonens holdning til #2", subtitle = "Verdi normalfordelt rundt 12 500")
ggplot(data = df) +
geom_histogram(aes(x = holdning_3)) +
labs(x = "Holdning fra 1 til 5", y = "Antall", title = "Populasjonens faktiske holdning til #3", subtitle = "Fra 1 til 5")
ggplot(data = df) +
geom_bar(aes(x = holdning_3)) +
labs(x = "Holdning fra 1 til 5", y = "Antall", title = "Populasjonens faktiske holdning til #3", subtitle = "Fra 1 til 5")
ggplot(data = df) +
geom_bar(aes(x = holdning_1)) +
labs(x = "Ja eller nei", y = "Antall", title = "Populasjonens faktiske holdning til #1", subtitle = "1 eller 0")
ggplot(data = df) +
geom_histogram(aes(x = holdning_2), binwidth = 1000) +
labs(x = "Verdianslag på hest", y = "Antall", title = "Populasjonens holdning til #2", subtitle = "Verdi normalfordelt rundt 12 500")
ggplot(data = df) +
geom_bar(aes(x = holdning_3)) +
labs(x = "Holdning fra 1 til 5", y = "Antall", title = "Populasjonens faktiske holdning til #3", subtitle = "Fra 1 til 5")
summary(df$holdning_1)
summary(df$holdning_2)
utvalg = sample_n(df, 100, replace = FALSE)
temp_1 = group_by(df, holdning_1) %>%
summarise(., antall = n()) %>%
mutate(andel = antall/sum(antall))
temp_2 = group_by(utvalg, holdning_1) %>%
summarise(., antall = n()) %>%
mutate(andel = antall/sum(antall))
temp = bind_rows(populasjon = temp_1, utvalg = temp_2, .id = "data")
ggplot(data = temp) +
geom_col(aes(x = holdning_1, y = andel, fill = data), position = "dodge")
temp_1 = group_by(df, holdning_2) %>%
summarise(., antall = n()) %>%
mutate(andel = antall/sum(antall))
temp_2 = group_by(utvalg, holdning_2) %>%
summarise(., antall = n()) %>%
mutate(andel = antall/sum(antall))
temp = bind_rows(populasjon = temp_1, utvalg = temp_2, .id = "data")
ggplot(data = temp) +
geom_col(aes(x = holdning_1, y = andel, fill = data), position = "dodge")
temp_1 = group_by(df, holdning_2) %>%
summarise(., antall = n()) %>%
mutate(andel = antall/sum(antall))
temp_2 = group_by(utvalg, holdning_2) %>%
summarise(., antall = n()) %>%
mutate(andel = antall/sum(antall))
temp = bind_rows(populasjon = temp_1, utvalg = temp_2, .id = "data")
ggplot(data = temp) +
geom_col(aes(x = holdning_2, y = andel, fill = data), position = "dodge")
temp_1 = group_by(df, holdning_2) %>%
summarise(., antall = n()) %>%
mutate(andel = antall/sum(antall))
temp_2 = group_by(utvalg, holdning_2) %>%
summarise(., antall = n()) %>%
mutate(andel = antall/sum(antall))
temp = bind_rows(populasjon = temp_1, utvalg = temp_2, .id = "data")
ggplot(data = temp) +
geom_col(aes(x = holdning_2, y = andel, fill = data), position = "dodge")
View(temp)
ggplot() +
geom_freqpoly(aes(x = holdning_2), data = df) +
geom_freqpoly(aes(x = holdning_2), data = utvalg)
?geom_freqpoly
ggplot() +
geom_freqpoly(aes(x = holdning_2, y = stat(density)), data = df) +
geom_freqpoly(aes(x = holdning_2, y = stat(density)), data = utvalg)
ggplot() +
geom_freqpoly(aes(x = holdning_2, y = stat(density)), colour = "red", data = df) +
geom_freqpoly(aes(x = holdning_2, y = stat(density)), colour = "blue", data = utvalg)
ggplot() +
geom_freqpoly(aes(x = holdning_2, y = stat(density)), colour = "red", data = df, binwidth = 1000) +
geom_freqpoly(aes(x = holdning_2, y = stat(density)), colour = "blue", data = utvalg, binwidth = 1000)
temp_1 = group_by(df, holdning_3) %>%
summarise(., antall = n()) %>%
mutate(andel = antall/sum(antall))
temp_2 = group_by(utvalg, holdning_3) %>%
summarise(., antall = n()) %>%
mutate(andel = antall/sum(antall))
temp = bind_rows(populasjon = temp_1, utvalg = temp_2, .id = "data")
#holdning_1
ggplot(data = temp) +
geom_col(aes(x = holdning_3, y = andel, fill = data), position = "dodge")
temp_1 = group_by(df, holdning_1) %>%
summarise(., antall = n()) %>%
mutate(andel = antall/sum(antall))
temp_2 = group_by(utvalg, holdning_1) %>%
summarise(., antall = n()) %>%
mutate(andel = antall/sum(antall))
temp = bind_rows(populasjon = temp_1, utvalg = temp_2, .id = "data")
#holdning_1
ggplot(data = temp) +
geom_col(aes(x = holdning_1, y = andel, fill = data), position = "dodge")
#holdning_2
ggplot() +
geom_freqpoly(aes(x = holdning_2, y = stat(density)), colour = "red", data = df, binwidth = 1000) +
geom_freqpoly(aes(x = holdning_2, y = stat(density)), colour = "blue", data = utvalg, binwidth = 1000)
#holdning_3
temp_1 = group_by(df, holdning_3) %>%
summarise(., antall = n()) %>%
mutate(andel = antall/sum(antall))
temp_2 = group_by(utvalg, holdning_3) %>%
summarise(., antall = n()) %>%
mutate(andel = antall/sum(antall))
temp = bind_rows(populasjon = temp_1, utvalg = temp_2, .id = "data")
#holdning_1
ggplot(data = temp) +
geom_col(aes(x = holdning_3, y = andel, fill = data), position = "dodge")
temp_1 = group_by(df, holdning_1) %>%
summarise(., antall = n()) %>%
mutate(andel = antall/sum(antall))
temp_2 = group_by(utvalg, holdning_1) %>%
summarise(., antall = n()) %>%
mutate(andel = antall/sum(antall))
temp = bind_rows(populasjon = temp_1, utvalg = temp_2, .id = "data")
#holdning_1
ggplot(data = temp) +
geom_col(aes(x = holdning_1, y = andel, fill = data), position = "dodge") +
labs(title = "Sammenlikning av utvalg og populasjon på binomisk fordelt variabel")
#holdning_2
ggplot() +
geom_freqpoly(aes(x = holdning_2, y = stat(density)), colour = "red", data = df, binwidth = 1000) +
geom_freqpoly(aes(x = holdning_2, y = stat(density)), colour = "blue", data = utvalg, binwidth = 1000) +
labs(title = "Sammenlikning av utvalg og populasjon på normalfordelt variabel")
#holdning_3
temp_1 = group_by(df, holdning_3) %>%
summarise(., antall = n()) %>%
mutate(andel = antall/sum(antall))
temp_2 = group_by(utvalg, holdning_3) %>%
summarise(., antall = n()) %>%
mutate(andel = antall/sum(antall))
temp = bind_rows(populasjon = temp_1, utvalg = temp_2, .id = "data")
#holdning_1
ggplot(data = temp) +
geom_col(aes(x = holdning_3, y = andel, fill = data), position = "dodge") +
labs(title = "Sammenlikning av utvalg og populasjon på diskret variabel")
?bind_rows
utvalg = sample_n(df, 100, replace = FALSE)
for(i in 2:100){
temp = sample_n(df, 100, replace = TRUE)
bind_rows(utvalg, temp, .id = TRUE)
}
utvalg = sample_n(df, 100, replace = FALSE)
for(i in 2:100){
temp = sample_n(df, 100, replace = TRUE)
bind_rows(utvalg, temp, .id = "utvalgsnummer")
}
utvalg = sample_n(df, 100, replace = FALSE)
for(i in 2:100){
temp = sample_n(df, 100, replace = TRUE)
utvalg = bind_rows(utvalg, temp, .id = "utvalgsnummer")
}
View(utvalg)
utvalg = sample_n(df, 100, replace = FALSE)
utvalg$utvalgsnummer = 1
for(i in 2:100){
temp = sample_n(df, 100, replace = TRUE)
temp$utvalgsnummer = i
utvalg = bind_rows(utvalg, temp)
}
temp = select(utvalg, ID, holdning_1, utvalgsnummer) %>%
group_by(utvalgsnummer) %>%
summarise(gjennomsnitt = mean(holdning_1))
View(temp)
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt), data = temp)
geom_freqpoly(aes(x = gjennomsnitt), data = temp, binwidth = 0.1)
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt), data = temp, binwidth = 0.1)
?geom_freqpoly
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt), data = temp, binwidth = 0.1) +
scale_x_continuous(limits = c(0,1))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt), binwidth = 0.1, data = filter(temp, utvalgsnummer < 10) +
scale_x_continuous(limits = c(0,1))
ggplot() +
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt), binwidth = 0.1, data = filter(temp, utvalgsnummer < 10)) +
scale_x_continuous(limits = c(0,1))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt), binwidth = 0.1, data = filter(temp, utvalgsnummer < 20)) +
scale_x_continuous(limits = c(0,1))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt), binwidth = 0.1, data = filter(temp, utvalgsnummer < 50)) +
scale_x_continuous(limits = c(0,1))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt), binwidth = 0.1, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt), binwidth = 0.1, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt), binwidth = 0.1, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt), binwidth = 0.1, colour = "black", data = temp) +
scale_x_continuous(limits = c(0,1))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.1, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.1, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.1, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.1, colour = "black", data = temp) +
scale_x_continuous(limits = c(0,1))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "black", data = temp) +
scale_x_continuous(limits = c(0,1))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.01, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.01, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.01, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.01, colour = "black", data = temp) +
scale_x_continuous(limits = c(0,1))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.04, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.04, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.04, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.04, colour = "black", data = temp) +
scale_x_continuous(limits = c(0,1))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "black", data = temp) +
scale_x_continuous(limits = c(0,1))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "black", data = temp) +
scale_x_continuous(limits = c(0,1)) +
scale_colour_discrete()
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 0, to = 1, by = 0.05), limits = c(0,1)) +
scale_colour_discrete()
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 0, to = 1, by = 0.1), minor_breaks = NULL, limits = c(0,1)) +
scale_colour_discrete()
blogdown:::serve_site()
#holdning_2
temp = select(utvalg, ID, holdning_2, utvalgsnummer) %>%
group_by(utvalgsnummer) %>%
summarise(gjennomsnitt = mean(holdning_2))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 0, to = 20000, by = 1000), minor_breaks = NULL, limits = c(0,20000))
#holdning_3
temp = select(utvalg, ID, holdning_3, utvalgsnummer) %>%
group_by(utvalgsnummer) %>%
summarise(gjennomsnitt = mean(holdning_3))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 0, to = 6, by = 1), minor_breaks = NULL, limits = c(0,6))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 0, to = 6, by = 0.05), minor_breaks = NULL, limits = c(0,6))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 1, to = 5, by = 0.5), minor_breaks = NULL, limits = c(0,6))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.05, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 2.5, to = 3.5, by = 0.5), minor_breaks = NULL, limits = c(0,6))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.1, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.1, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.1, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.1, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 2.5, to = 3.5, by = 0.5), minor_breaks = NULL, limits = c(0,6))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.1, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.1, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.1, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 0.1, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 2.5, to = 3.5, by = 0.5), minor_breaks = NULL, limits = c(2,4))
temp = select(utvalg, ID, holdning_2, utvalgsnummer) %>%
group_by(utvalgsnummer) %>%
summarise(gjennomsnitt = mean(holdning_2))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 0, to = 20000, by = 1000), minor_breaks = NULL, limits = c(0,20000))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 10000, to = 16000, by = 1000), minor_breaks = NULL, limits = c(8000,16000))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 10000, to = 16000, by = 1000), minor_breaks = NULL, limits = c(8000, 16000))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 10000, to = 16000, by = 1000), minor_breaks = NULL, limits = c(10000, 16000))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 10000, to = 16000, by = 1000), minor_breaks = NULL)
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 1000, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 10000, to = 16000, by = 1000), minor_breaks = NULL, limits = c(10000, 16000))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 100, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 100, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 100, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 100, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 10000, to = 16000, by = 1000), minor_breaks = NULL, limits = c(10000, 16000))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 500, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 500, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 500, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 500, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 10000, to = 16000, by = 1000), minor_breaks = NULL, limits = c(10000, 16000))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 250, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 250, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 250, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 250, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 10000, to = 16000, by = 1000), minor_breaks = NULL, limits = c(10000, 16000))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 250, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 250, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 250, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 250, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 10000, to = 16000, by = 1000), minor_breaks = NULL, limits = c(11000, 14000))
ggplot() +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 250, colour = "red", data = filter(temp, utvalgsnummer < 10)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 250, colour = "blue", data = filter(temp, utvalgsnummer < 20)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 250, colour = "green", data = filter(temp, utvalgsnummer < 50)) +
geom_freqpoly(aes(x = gjennomsnitt, y = stat(density)), binwidth = 250, colour = "black", data = temp) +
scale_x_continuous(breaks = seq(from = 11000, to = 14000, by = 500), minor_breaks = NULL, limits = c(11000, 14000))
blogdown:::serve_site()
warning()
blogdown:::serve_site()
blogdown:::new_post_addin()
#biblioteker
library(here)
library(knitr)
suppressPackageStartupMessages(library(tidyverse))
#data
df = read.csv2(here("content/data/tippeliga_2019.csv"),stringsAsFactors = FALSE, na.strings = "", nrows = 16) %>%
select(., -UniBet, - NordicBet)
numeric_vars = names(df)[2:6]
df = mutate(df, gjennomsnitt = rowMeans(select(df,numeric_vars),na.rm=TRUE)) %>%
arrange(gjennomsnitt)
kable(df)
#data
df = read.csv2(here("content/data/tippeliga_2019.csv"),stringsAsFactors = FALSE, na.strings = "", nrows = 16) %>%
select(., -UniBet, - NordicBet)
numeric_vars
df = mutate(df, gjennomsnitt = rowMeans(select(df,numeric_vars),na.rm=TRUE)) %>%
arrange(gjennomsnitt)
kable(df)
kable(df)
kable(select(df, Lag, Prognose = gjennomsnitt, Resultat))
kable(select(df, Lag, Prognose = gjennomsnitt, Resultat))
blogdown:::serve_site()
#biblioteker
library(here)
library(knitr)
suppressPackageStartupMessages(library(tidyverse))
#data
df = read.csv2(here("content/data/tippeliga_2019.csv"),stringsAsFactors = FALSE, na.strings = "", nrows = 16) %>%
select(., -UniBet, - NordicBet)
numeric_vars = names(df)[2:6]
df = mutate(df, gjennomsnitt = rowMeans(select(df,numeric_vars),na.rm=TRUE)) %>%
arrange(gjennomsnitt)
kable(select(df, Lag, Prognose = gjennomsnitt, Resultat))
df = mutate(df, Prognose = rowMeans(select(df,numeric_vars),na.rm=TRUE)) %>%
arrange(Prognose)
df = read.csv2(here("content/data/tippeliga_2019.csv"),stringsAsFactors = FALSE, na.strings = "", nrows = 16) %>%
select(., -UniBet, - NordicBet)
numeric_vars = names(df)[2:6]
df = mutate(df, Prognose = rowMeans(select(df,numeric_vars),na.rm=TRUE)) %>%
arrange(Prognose)
temp = gather(df, ID, prognose, Nettavsien:Prognose) %>%
mutate(type = ifelse(person == "Resultat", "Resultat", "Prognose"))
temp = gather(df, ID, prognose, Nettavisen:Prognose) %>%
mutate(type = ifelse(person == "Resultat", "Resultat", "Prognose"))
temp = gather(df, ID, prognose, Nettavisen:Prognose)
temp = gather(df, ID, prognose, Nettavisen:Prognose) %>%
mutate(type = ifelse(ID == "Resultat", "Resultat", "Prognose"))
ggplot() +
geom_point(data = filter(temp, type == "Resultat"), aes(x = prognose, y = fct_reorder(Lag, prognose)), colour = "black") +
ggplot() +
geom_point(data = filter(temp, type == "Resultat"), aes(x = prognose, y = fct_reorder(Lag, prognose)), colour = "black")
library(here)
library(knitr)
suppressPackageStartupMessages(library(tidyverse))
ggplot() +
geom_point(data = filter(temp, type == "Resultat"), aes(x = prognose, y = fct_reorder(Lag, prognose)), colour = "black")
#settings
theme_set(theme_minimal())
set.seed(1106)
kable(select(df, Lag, Prognose, Resultat))
temp = gather(df, ID, prognose, Nettavisen:Prognose) %>%
mutate(type = ifelse(ID == "Resultat", "Resultat", "Prognose"))
ggplot() +
geom_point(data = filter(temp, type == "Resultat"), aes(x = prognose, y = fct_reorder(Lag, prognose)), colour = "black") +
geom_point(data = filter(temp, type == "Prognose"), aes(x = prognose, y = fct_reorder(Lag, prognose)), colour = "grey")
ggplot() +
geom_point(data = filter(temp, type == "Resultat"), aes(x = prognose, y = fct_reorder(Lag, prognose)), colour = "black") +
geom_point(data = filter(temp, type == "Prognose"), aes(x = prognose, y = Lag, prognose), colour = "grey")
ggplot() +
geom_point(data = filter(temp, type == "Resultat"), aes(x = prognose, y = fct_reorder(Lag, prognose)), colour = "black") +
geom_point(data = filter(temp, type == "Prognose"), aes(x = prognose, y = Lag), colour = "grey")
ggplot() +
geom_point(data = filter(temp, type == "Prognose"), aes(x = prognose, y = Lag), colour = "grey") +
geom_point(data = filter(temp, type == "Resultat"), aes(x = prognose, y = fct_reorder(Lag, prognose)), colour = "black")
ggplot() +
geom_point(data = filter(temp, type == "Prognose"), aes(x = prognose, y = Lag), colour = "grey") +
geom_point(data = filter(temp, type == "Resultat"), aes(x = prognose, y = fct_reorder(Lag, prognose)), colour = "black") +
geom_point(data = filter(temp, ID == "Prognose"), aes(x = prognose, y = Lag), colour = "red")
ggplot() +
geom_point(data = filter(temp, type == "Prognose"), aes(x = prognose, y = Lag), colour = "grey") +
geom_point(data = filter(temp, type == "Resultat"), aes(x = prognose, y = fct_reorder(Lag, prognose)), colour = "black") +
geom_point(data = filter(temp, ID == "Prognose"), aes(x = prognose, y = Lag), colour = "red")
labs(x = "Plassering", y = "Lag", colour = "Prognose eller resultat?")
ggplot() +
geom_point(data = filter(temp, type == "Prognose"), aes(x = prognose, y = Lag), colour = "grey") +
geom_point(data = filter(temp, type == "Resultat"), aes(x = prognose, y = Lag), colour = "black") +
geom_point(data = filter(temp, ID == "Prognose"), aes(x = prognose, y = Lag), colour = "red")
labs(x = "Plassering", y = "Lag", colour = "Prognose eller resultat?")
rmse <- function(feil){
sqrt(mean(feil^2))
}
temp = data.frame(ID = as.character(), rmse = as.numeric(), stringsAsFactors = FALSE)
feil = df$Resultat - df$Nettavisen
temp = bind_rows(temp, data.frame(ID = "Nettavisen", rmse = rmse(feil), stringsAsFactors = FALSE))
temp = data.frame(ID = as.character(), rmse = as.numeric(), stringsAsFactors = FALSE)
feil = df$Resultat - df$Nettavisen
temp = bind_rows(temp, data.frame(ID = "Nettavisen", rmse = rmse(feil), stringsAsFactors = FALSE))
feil = df$Resultat - df$Oddschecker
temp = bind_rows(temp, data.frame(ID = "Oddschecker", rmse = rmse(feil), stringsAsFactors = FALSE))
feil = df$Resultat - df$Dagsavisen
temp = bind_rows(temp, data.frame(ID = "Dagsavisen", rmse = rmse(feil), stringsAsFactors = FALSE))
feil = df$Resultat - df$Dagbladet
temp = bind_rows(temp, data.frame(ID = "Dagbladet", rmse = rmse(feil), stringsAsFactors = FALSE))
feil = df$Resultat - df$Aftenposten
temp = bind_rows(temp, data.frame(ID = "Aftenposten", rmse = rmse(feil), stringsAsFactors = FALSE))
feil = df$Resultat - df$Prognose
temp = bind_rows(temp, data.frame(ID = "MinPrognose", rmse = rmse(feil), stringsAsFactors = FALSE))
View(temp)
kable(temp)
kable(arrange(temp, rmse))
temp = gather(df, ID, prognose, Nettavisen:Prognose) %>%
mutate(type = ifelse(ID == "Resultat", "Resultat", "Prognose"))
ggplot() +
geom_count(data = filter(temp, type == "Prognose"), aes(x = prognose, y = Lag), colour = "grey") +
geom_point(data = filter(temp, type == "Resultat"), aes(x = prognose, y = Lag), colour = "black") +
geom_point(data = filter(temp, ID == "Prognose"), aes(x = prognose, y = Lag), colour = "red")
labs(x = "Plassering", y = "Lag", colour = "Prognose eller resultat?")
ggplot() +
geom_count(data = filter(temp, type == "Prognose"), aes(x = prognose, y = Lag), colour = "grey") +
geom_point(data = filter(temp, type == "Resultat"), aes(x = prognose, y = Lag), colour = "black") +
geom_point(data = filter(temp, ID == "Prognose"), aes(x = prognose, y = Lag), colour = "red") +
labs(x = "Plassering", y = "Lag", colour = "Prognose eller resultat?")
ggplot(aes(x = prognose, y = fct_reorder(Lag, prognose))) +
geom_count(data = filter(temp, type == "Prognose"), colour = "grey") +
geom_point(data = filter(temp, type == "Resultat"), colour = "black") +
geom_point(data = filter(temp, ID == "Prognose"), colour = "red") +
labs(x = "Plassering", y = "Lag", colour = "Prognose eller resultat?")
ggplot() +
geom_count(data = filter(temp, type == "Prognose"), aes(x = prognose, y = Lag), colour = "grey") +
geom_point(data = filter(temp, type == "Resultat"), aes(x = prognose, y = Lag), colour = "black") +
geom_point(data = filter(temp, ID == "Prognose"), aes(x = prognose, y = Lag), colour = "red") +
labs(x = "Plassering", y = "Lag", colour = "Prognose eller resultat?")
kable(arrange(select(df, Lag, Prognose, Resultat), Resultat))
