geom_col(show.legend = FALSE) +
facet_wrap(~parti, scales = "free") +
coord_flip()
ggplot(data = temp, aes(x = term, y = antall, fill = parti)) +
geom_col(show.legend = FALSE) +
facet_wrap(~parti, scales = "free") +
coord_flip()
ggplot(data = temp, aes(x = fct_reorder(term, antall), y = antall, fill = parti)) +
geom_col(show.legend = FALSE) +
facet_wrap(~parti, scales = "free") +
coord_flip()
?reorder_within
ggplot(data = temp, aes(x = reorder_within(term, antall, parti), y = antall, fill = parti)) +
geom_col(show.legend = FALSE) +
facet_wrap(~parti, scales = "free") +
coord_flip()
ggplot(data = temp, aes(x = reorder_within(term, antall, parti), y = antall, fill = parti)) +
geom_col(show.legend = FALSE) +
facet_wrap(~parti, scales = "free") +
scale_x_reordered() +
coord_flip()
?bind_tf_idf
program_ord = bind_tf_idf(df, term, parti, antall)
View(program_ord)
?top_n
temp = group_by(df, parti) %>%
top_n(10, wt = antall) %>%
arrange(., antall)
ggplot(data = temp, aes(x = reorder_within(term, antall, parti), y = antall, fill = parti)) +
geom_col(show.legend = FALSE) +
facet_wrap(~parti, scales = "free") +
scale_x_reordered() +
coord_flip() +
labs(title = "Oslo og eget parti langt det mest vanlige å omtale", subtitle = "Ti mest brukte ord i  valgprogrammet for 2019-2023", x = "Parti", y = "Antall ganger ordet er nevnt")
temp = group_by(program_ord, parti) %>%
top_n(10, wt = tf_idf)
ggplot(data = temp, aes(x = reorder_within(term, tf_idf, parti), y = tf_idf, fill = parti)) +
geom_col(show.legend = FALSE) +
facet_wrap(~parti, scales = "free") +
scale_x_reordered() +
coord_flip() +
labs(title = "Oslo og eget parti langt det mest vanlige å omtale", subtitle = "Ti mest brukte ord i  valgprogrammet for 2019-2023", x = "Parti", y = "Antall ganger ordet er nevnt")
program_ord = bind_tf_idf(df, term, parti, antall)
temp = group_by(program_ord, parti) %>%
top_n(10, wt = tf_idf)
ggplot(data = temp, aes(x = reorder_within(term, tf_idf, parti), y = tf_idf, fill = parti)) +
geom_col(show.legend = FALSE) +
facet_wrap(~parti, scales = "free") +
scale_x_reordered() +
coord_flip()
temp = summarise(df, antall_termer = n())
temp = summarise(df, antall_termer = n(term))
temp = group_by(df, term) %>%
summarise(., antall = n())
temp = group_by(df, term) %>%
summarise(., antall = n()) %>%
top_n(., 10, antall)
View(temp)
temp = group_by(df, term) %>%
summarise(., antall = sum()) %>%
top_n(., 10, antall)
View(temp)
emp = group_by(df, term) %>%
summarise(., antall = sum())
temp = group_by(df, term) %>%
summarise(., antall = count()) %>%
top_n(., 10, antall)
temp = group_by(df, term) %>%
summarise(., antall = sum(antall))
temp = group_by(df, term) %>%
summarise(., antall = sum(antall)) %>%
top_n(., 10, antall)
ggplot(data = temp, aes(x = fct_reorder(term, antall), y = antall)) +
geom_col() +
coord_flip() +
labs(title = "Rødt har flest unike termer i partiprogrammet", subtitle = "Partienes valgprogram for Oslo, 2019-2023", y = "Antall termer",x = "Parti")
ggplot(data = temp, aes(x = fct_reorder(term, antall), y = antall)) +
geom_col() +
coord_flip() +
labs(title = "Oslo det mest brukte ordet i Oslo-valgkampen", y = "Antall ganger brukt",x = "Ord")
temp = group_by(df, parti) %>%
top_n(10, wt = antall) %>%
arrange(., antall)
ggplot(data = temp, aes(x = reorder_within(term, antall, parti), y = antall, fill = parti)) +
geom_col(show.legend = FALSE) +
facet_wrap(~parti, scales = "free", ncol = 2) +
scale_x_reordered() +
coord_flip() +
labs(title = "Oslo og eget parti langt det mest vanlige å omtale", subtitle = "Ti mest brukte ord i  valgprogrammet for 2019-2023", x = "Parti", y = "Antall ganger ordet er nevnt")
program_ord = bind_tf_idf(df, term, parti, antall)
temp = group_by(program_ord, parti) %>%
top_n(10, wt = tf_idf)
ggplot(data = temp, aes(x = reorder_within(term, tf_idf, parti), y = tf_idf, fill = parti)) +
geom_col(show.legend = FALSE) +
facet_wrap(~parti, scales = "free", ncol = 2) +
scale_x_reordered() +
coord_flip() +
labs(title = )
#litt enkel grafing
temp = group_by(df, parti) %>%
summarise(., antall_termer = n())
ggplot(data = temp, aes(x = fct_reorder(parti, antall_termer), y = antall_termer)) +
geom_col() +
coord_flip() +
labs(title = "Rødt har flest unike termer i partiprogrammet", subtitle = "Partienes valgprogram for Oslo, 2019-2023", y = "Antall termer",x = "Parti")
temp = group_by(df, term) %>%
summarise(., antall = sum(antall)) %>%
top_n(., 10, antall)
ggplot(data = temp, aes(x = fct_reorder(term, antall), y = antall)) +
geom_col() +
coord_flip() +
labs(title = "Oslo det mest brukte ordet i Oslo-valgkampen", y = "Antall ganger brukt",x = "Ord")
blogdown:::serve_site()
blogdown:::new_post_addin()
library(topicmodels)
install.packages("topicmodels")
library(topicmodels)
suppressPackageStartupMessages(library(tidyverse))
library(tidytext)
library(here)
library(tm)
library(topicmodels)
#settings
theme_set(theme_minimal())
#med TM
mappe <- here("content/data/valgprogram")
# lag et korpus fra pdf-filene
converted <- VCorpus(DirSource(mappe), readerControl = list(reader = readPDF, language = "nb")) %>%
DocumentTermMatrix(., control = list(language = "nb",
removePunctuation = TRUE,
removeNumbers = TRUE
))
#opprydding
#fjerner .pdf-suffixet
df = tidy(converted) %>%
mutate(., document = gsub(".pdf", "", document, fixed = TRUE))
#setter bedre navn på variablene
names(df) = c("parti", "term", "antall")
#fjerner stoppord - ganske lite sofistikert
stoppord = data.frame(term = stopwords("no"), stringsAsFactors = FALSE)
df = anti_join(df, stoppord)
#med TM
mappe <- here("content/data/valgprogram")
# lag et korpus fra pdf-filene
converted <- VCorpus(DirSource(mappe), readerControl = list(reader = readPDF, language = "nb")) %>%
DocumentTermMatrix(., control = list(language = "nb",
removePunctuation = TRUE,
removeNumbers = TRUE
))
#opprydding
#fjerner .pdf-suffixet
df = tidy(converted) %>%
mutate(., document = gsub(".pdf", "", document, fixed = TRUE))
#setter bedre navn på variablene
names(df) = c("parti", "term", "antall")
#fjerner stoppord - ganske lite sofistikert
stoppord = data.frame(term = stopwords("no"), stringsAsFactors = FALSE)
df = anti_join(df, stoppord)
set.seed(1106)
model_1 = LDA(converted, k = 2)
tema = tidy(model_1, matrix = "beta")
tema
tema_topp = group_by(tema, topic) %>%
top_n(10, beta) %>%
ungroup() %>%
arrange(topic, -beta)
View(tema_topp)
tema_topp = group_by(tema, topic) %>%
top_n(10, beta) %>%
ungroup() %>%
arrange(topic, -beta) %>%
mutate(term = reorder_within(term, beta, topic))
tema_topp = group_by(tema, topic) %>%
top_n(10, beta) %>%
ungroup() %>%
arrange(topic, -beta)
ggplot(data = tema_topp, aes(reorder_within(term, beta, topic) , beta, fill(factor(topic)))) +
geom_col(show.legend = FALSE) +
coord_flip() +
scale_x_reordered()
ggplot(data = tema_topp, aes(reorder_within(term, beta, topic) , beta, fill(factor(topic)))) +
geom_col(show.legend = FALSE) +
coord_flip() +
facet_wrap(~topic) +
scale_x_reordered()
ggplot(data = tema_topp, aes(reorder_within(term, beta, topic) , beta, fill(factor(topic)))) +
geom_col(show.legend = FALSE) +
facet_wrap(~topic, scales = "free") +
coord_flip() +
scale_x_reordered()
ggplot(data = tema_topp, aes(reorder_within(term, beta, topic) , beta, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~topic, scales = "free") +
coord_flip() +
scale_x_reordered()
?DocumentTermMatrix
stoppord = data.frame(term = stopwords("no"), stringsAsFactors = FALSE)
stoppord[1]
stopwords("no")
stoppord = stopwords("no")
converted <- VCorpus(DirSource(mappe), readerControl = list(reader = readPDF, language = "nb")) %>%
DocumentTermMatrix(., control = list(language = "nb",
removePunctuation = TRUE,
removeNumbers = TRUE,
stopwords = stopwords("no") #fjerner stoppord
))
model_1 = LDA(converted, k = 2)
tema = tidy(model_1, matrix = "beta")
tema
tema_topp = group_by(tema, topic) %>%
top_n(10, beta) %>%
ungroup() %>%
arrange(topic, -beta)
ggplot(data = tema_topp, aes(reorder_within(term, beta, topic) , beta, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~topic, scales = "free") +
coord_flip() +
scale_x_reordered()
model_1 = LDA(converted, k = 5)
tema = tidy(model_1, matrix = "beta")
tema
tema_topp = group_by(tema, topic) %>%
top_n(10, beta) %>%
ungroup() %>%
arrange(topic, -beta)
ggplot(data = tema_topp, aes(reorder_within(term, beta, topic) , beta, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~topic, scales = "free") +
coord_flip() +
scale_x_reordered()
model_1 = LDA(converted, k = 7)
tema = tidy(model_1, matrix = "beta")
tema
tema_topp = group_by(tema, topic) %>%
top_n(10, beta) %>%
ungroup() %>%
arrange(topic, -beta)
ggplot(data = tema_topp, aes(reorder_within(term, beta, topic) , beta, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~topic, scales = "free") +
coord_flip() +
scale_x_reordered()
model_1 = LDA(converted, k = 9)
tema = tidy(model_1, matrix = "beta")
tema_topp = group_by(tema, topic) %>%
top_n(10, beta) %>%
ungroup() %>%
arrange(topic, -beta)
ggplot(data = tema_topp, aes(reorder_within(term, beta, topic) , beta, fill = factor(topic))) +
geom_col(show.legend = FALSE) +
facet_wrap(~topic, scales = "free") +
coord_flip() +
scale_x_reordered()
tema_dokument = tidy(model_1, matrix = "gamma")
ggplot(data = tema_dokument, aes(factor(topic), gamma)) +
geom_boxplot() +
facet_wrap(~ reorder(title, gamma * topic))
ggplot(data = tema_dokument, aes(factor(topic), gamma)) +
geom_boxplot()
ggplot(data = tema_dokument, aes(factor(topic), gamma)) +
geom_boxplot() +
facet_wrap(~reorder(title, gamma * topic)
ggplot(data = tema_dokument, aes(factor(topic), gamma)) +
ggplot(data = tema_dokument, aes(factor(topic), gamma)) +
geom_boxplot() +
facet_wrap(~title)
ggplot(data = tema_dokument, aes(factor(topic), gamma)) +
geom_boxplot() +
facet_wrap(~document)
blogdown:::serve_site()
?readline
?read.table
suppressPackageStartupMessages(library(tidyverse))
library(tidytext)
library(here)
library(tm)
#settings
theme_set(theme_minimal())
set.seed(1106)
sentiment = read.table(https://raw.githubusercontent.com/olavski/afinn/master/afinn/data/AFINN-no-165.txt)
sentiment = read.table(´https://raw.githubusercontent.com/olavski/afinn/master/afinn/data/AFINN-no-165.txt´)
sentiment = read.table(`https://raw.githubusercontent.com/olavski/afinn/master/afinn/data/AFINN-no-165.txt`)
sentiment = read.table("https://raw.githubusercontent.com/olavski/afinn/master/afinn/data/AFINN-no-165.txt")
here("content/data/")
here("content/data/AFINN-no-165.txt")
sentiment = read.table(here("content/data/AFINN-no-165.txt"))
sentiment = read.table(here("content/data/AFINN-no-165.txt"), header = FALSE, sep = "|")
View(sentiment)
sentiment = read.table(here("content/data/AFINN-no-165.txt"), header = FALSE, sep = "|")
View(sentiment)
sentiment = read.table(here("content/data/AFINN-no-165.txt"), header = FALSE, sep = "|", colClasses = "character")
sentiment = read.table(here("content/data/AFINN-no-165.txt"), header = FALSE, sep = "|", colClasses = "character", fileEncoding = "UTF-8")
sentiment = read.table(here("content/data/AFINN-no-165.txt"), header = FALSE, sep = "|", colClasses = "character", fileEncoding = "Latin-1")
library(readr)
sentiment <- read_csv("content/data/AFINN-no-165.txt",
col_names = FALSE)
View(sentiment)
library(readr)
sentiment <- read_table2("content/data/AFINN-no-165.txt",
col_names = FALSE)
View(sentiment)
library(readr)
sentiment <- read_delim("content/data/AFINN-no-165.txt",
"|", escape_double = FALSE, col_names = FALSE,
trim_ws = TRUE)
View(sentiment)
sentiment <- read_delim(here("content/data/AFINN-no-165.txt"), "|", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
sentiment <- read_delim(here("content/data/AFINN-no-165.txt"), "|", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE) %>%
str_split(., pattern = "\\-*\\d+\\.*\\d*")
View(sentiment)
sentiment <- read_delim(here("content/data/AFINN-no-165.txt"), "|", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
View(sentiment)
df = str_split(sentiment, pattern = "\\-*\\d+\\.*\\d*")
df = str_split(sentiment, pattern = "\\-*\\d+\\d*")
df
?str_split_fixed
df = str_split_fixed(sentiment, pattern = "\\-*\\d+\\d*", 2)
View(df)
df = str_split_fixed(sentiment$X1, pattern = "\\-*\\d+\\d*", 2)
View(df)
df = str_split(sentiment$X1, pattern = "\\-*\\d+\\d*")
View(df)
?parse_number
df = parse_number(sentiment$X1)
sentiment$verdi = parse_number(sentiment$X1)
df = str_split(sentiment$X1, pattern = "\\-*\\d+\\d*")
?gsub
sentiment$tekst = gsub(pattern = "[:digit:]", replacement = "", x = sentiment$X1)
sentiment$tekst = gsub(pattern = "[012345]", replacement = "", x = sentiment$X1)
sentiment$tekst = gsub(pattern = "[-][012345]", replacement = "", x = sentiment$X1)
sentiment$tekst = gsub(pattern = "[-][012345]|[012345]", replacement = "", x = sentiment$X1)
#med TM
mappe <- here("content/data/valgprogram")
# lag et korpus fra pdf-filene
converted <- VCorpus(DirSource(mappe), readerControl = list(reader = readPDF, language = "nb")) %>%
DocumentTermMatrix(., control = list(language = "nb",
removePunctuation = TRUE,
removeNumbers = TRUE,
stopwords = stopwords("no") #fjerner stoppord
))
#opprydding
#fjerner .pdf-suffixet
df = tidy(converted) %>%
mutate(., document = gsub(".pdf", "", document, fixed = TRUE))
#setter bedre navn på variablene
names(df) = c("parti", "term", "antall")
#sentiment-data
sentiment <- read_delim(here("content/data/AFINN-no-165.txt"), "|", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
sentiment$verdi = parse_number(sentiment$X1)
sentiment$tekst = gsub(pattern = "[-][012345]|[012345]", replacement = "", x = sentiment$X1)
temp = inner_join(sentiment, df, by = c("tekst" = "term"))
View(sentiment)
sentiment$tekst
sentiment$tekst = gsub(pattern = "[-][012345][\t]|[012345][\t]", replacement = "", x = sentiment$X1)
sentiment$tekst
sentiment$tekst = gsub(pattern = "\t", replacement = "", x = sentiment$Xtekst)
sentiment$tekst_2 = gsub(pattern = "\t", replacement = "", x = sentiment$tekst)
sentiment$tekst = gsub(pattern = "[-][012345]|[012345]", replacement = "", x = sentiment$X1)
sentiment$tekst_2 = gsub(pattern = "\t", replacement = "", x = sentiment$tekst)
sentiment$tekst_2
sentiment$tekst = gsub(pattern = "[-][012345]|[012345]", replacement = "", x = sentiment$X1)
sentiment$tekst = gsub(pattern = "\t", replacement = "", x = sentiment$tekst)
temp = inner_join(sentiment, df, by = c("tekst" = "term"))
View(temp)
sentiment = select(sentiment, -X1)
temp = inner_join(sentiment, df, by = c("tekst" = "term"))
#med TM
mappe <- here("content/data/valgprogram")
# lag et korpus fra pdf-filene
converted <- VCorpus(DirSource(mappe), readerControl = list(reader = readPDF, language = "nb")) %>%
DocumentTermMatrix(., control = list(language = "nb",
removePunctuation = TRUE,
removeNumbers = TRUE,
stopwords = stopwords("no") #fjerner stoppord
))
#opprydding
#fjerner .pdf-suffixet
df_programmer = tidy(converted) %>%
mutate(., document = gsub(".pdf", "", document, fixed = TRUE))
#setter bedre navn på variablene
names(df_programmer) = c("parti", "term", "antall")
#sentiment-data
sentiment <- read_delim(here("content/data/AFINN-no-165.txt"), "|", escape_double = FALSE, col_names = FALSE, trim_ws = TRUE)
sentiment$verdi = parse_number(sentiment$X1)
sentiment$tekst = gsub(pattern = "[-][012345]|[012345]", replacement = "", x = sentiment$X1)
sentiment$tekst = gsub(pattern = "\t", replacement = "", x = sentiment$tekst)
sentiment = select(sentiment, -X1)
df = inner_join(sentiment, df_programmer, by = c("tekst" = "term"))
temp = count(tekst, sort = TRUE)
temp = count(df, tekst, sort = TRUE)
temp
View(df)
?count
temp = count(df, tekst, sort = TRUE, wt = antall)
temp
View(df)
temp = mutate(df, antall_verdi = antall * verdi)
View(temp)
temp = mutate(df, antall_verdi = antall * verdi) %>%
group_by(parti) %>%
summarise(mean = mean(antall_verdi), median = median(antall_verdi))
ggplot(data = temp) +
geom_col(aes(x = parti, y = mean))
ggplot(data = temp) +
geom_col(aes(x = parti, y = mean)) +
coord_flip()
ggplot(data = temp) +
geom_col(aes(x = fct_reorder(parti, mean), y = mean)) +
coord_flip()
?summarise
?mean
temp =  group_by(df, parti) %>%
summarise(mean = weighted.mean(verdi, antall))
ggplot(data = temp) +
geom_col(aes(x = fct_reorder(parti, mean), y = mean)) +
coord_flip()
ggplot(data = temp) +
geom_col(aes(x = fct_reorder(parti, mean), y = mean)) +
coord_flip() +
labs(title = "Høyre og KrF er de mest positive", subtitle = "Rødt og SV de mest negative", x = "Parti", y = "Gjennomsnittlig stemning")
?rep
temp = df[rep(row.names(df), df$antall)]
?uncount
temp = uncount(df, antall)
View(temp)
df_utvida = uncount(df, antall)
temp = count(df, tekst, sort = TRUE, wt = antall)
temp
temp = count(df_utvida, tekst, sort = TRUE)
temp
temp =  group_by(df_utvida, parti) %>%
summarise(mean = mean(verdi))
ggplot(data = temp) +
geom_col(aes(x = fct_reorder(parti, mean), y = mean)) +
coord_flip() +
labs(title = "Høyre og KrF er de mest positive", subtitle = "Rødt og SV de mest negative", x = "Parti", y = "Gjennomsnittlig stemning")
ggplot(data = df_utvida, aes(x = parti, y = verdi)) +
geom_jitter(colour = "steelblue", alpha = 0.3) +
geom_boxplot(alpha = 0)
ggplot(data = df_utvida, aes(x = parti, y = verdi)) +
geom_jitter(colour = "steelblue", alpha = 0.3) +
geom_boxplot(alpha = 0) +
coord_flip()
ggplot(data = df_utvida, aes(x = parti, y = verdi)) +
geom_jitter(colour = "steelblue", alpha = 0.1) +
geom_boxplot(alpha = 0.5) +
coord_flip()
ggplot(data = df_utvida, aes(x = fct_reorder(parti, verdi), y = verdi)) +
geom_jitter(colour = "steelblue", alpha = 0.1) +
geom_boxplot(alpha = 0.5) +
coord_flip()
?fct_reorder
ggplot(data = df_utvida, aes(x = fct_reorder(parti, verdi, .fun = median), y = verdi)) +
geom_jitter(colour = "steelblue", alpha = 0.1) +
geom_boxplot(alpha = 0.5) +
coord_flip()
ggplot(data = df_utvida, aes(x = fct_reorder(parti, verdi, .fun = mean), y = verdi)) +
geom_jitter(colour = "steelblue", alpha = 0.1) +
geom_boxplot(alpha = 0.5) +
coord_flip()
library(ggridges)
ggplot(data = df_utvida, aes(x = parti, y = verdi)) +
geom_density_ridges(alpha = 0.7) +
scale_x_continuous(limits = c(0, 100), expand = c(0,0)) +
theme(axis.ticks.y = element_blank())
ggplot(data = df_utvida, aes(x = parti, y = verdi)) +
geom_density_ridges(alpha = 0.7) +
theme(axis.ticks.y = element_blank())
ggplot(data = df_utvida, aes(x = parti, y = verdi)) +
geom_density_ridges(alpha = 0.
ggplot(data = df_utvida, aes(x = parti, y = verdi)) +
geom_density_ridges(alpha = 0.7)
ggplot(data = df_utvida, aes(y = parti, x = verdi)) +
geom_density_ridges(alpha = 0.7) +
theme(axis.ticks.y = element_blank())
ggplot(data = df_utvida, aes(y = parti, x = verdi)) +
geom_density_ridges(alpha = 0.7) +
scale_x_continuous(limits = c(-10, 10), expand = c(0,0)) +
theme(axis.ticks.y = element_blank())
ggplot(data = df_utvida, aes(y = parti, x = verdi)) +
geom_density_ridges(alpha = 0.7) +
scale_x_continuous(limits = c(-5, 5), expand = c(0,0)) +
theme(axis.ticks.y = element_blank())
ggplot(data = df_utvida, aes(y = fct_reorder(parti, verdi, .fun = mean), x = verdi)) +
geom_density_ridges(alpha = 0.7) +
scale_x_continuous(limits = c(-5, 5), expand = c(0,0)) +
theme(axis.ticks.y = element_blank())
?scale_x_continuous
?rep
seq_along()
?seq_along
ggplot(data = df_utvida, aes(y = fct_reorder(parti, verdi, .fun = mean), x = verdi)) +
geom_density_ridges(alpha = 0.7) +
scale_x_continuous(limits = c(-5, 5), breaks = seq(from = -5, to = 5, by = 1), expand = c(0,0)) +
theme(axis.ticks.y = element_blank())
temp = group_by(df_utvida, parti, verdi) %>%
summarise(., antall = count(verdi))
?summarise
temp = group_by(df_utvida, parti, verdi) %>%
summarise(., antall = n(verdi))
temp = group_by(df_utvida, parti, verdi) %>%
summarise(., antall = n())
View(temp)
temp = group_by(df_utvida, parti, verdi) %>%
summarise(., antall = n(), andel = n() / sum(antall))
temp = group_by(df_utvida, parti, verdi) %>%
summarise(., antall = n()) %>%
mutate(., andel = antall / sum(antall))
ggplot(data = temp) +
geom_col(aes(x = verdi, y = andel)) +
facet_wrap(~parti)
blogdown:::serve_site()
