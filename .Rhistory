#data
df <- read_delim(here("content/data/navnestatistikk/PersonerProsent.csv"), ";", escape_double = FALSE,
locale = locale(decimal_mark = ",", grouping_mark = "|", encoding = "ISO-8859-1"),
trim_ws = TRUE, skip = 1, na = c(".", "..")) %>%
select(fornavn, år, andel = `Andel av fødte (prosent)`) %>%
mutate(., andel = parse_number(andel))
library(tidyverse)
library(here)
library(prophet)
#settings
gammel = theme_set(theme_minimal())
set.seed(1106)
options(scipen = 100)
#data
df <- read_delim(here("content/data/navnestatistikk/PersonerProsent.csv"), ";", escape_double = FALSE,
locale = locale(decimal_mark = ",", grouping_mark = "|", encoding = "ISO-8859-1"),
trim_ws = TRUE, skip = 1, na = c(".", "..")) %>%
select(fornavn, år, andel = `Andel av fødte (prosent)`) %>%
mutate(., andel = parse_number(andel))
antall_navn = distinct(df, fornavn)
antall_navn = nrow(distinct(df, fornavn))
2019-1880
1880+139
antall_aar = nrow(distinct(df, år))
140*990
sum_andel = sum(filter(df, år = 2019)$andel)
sum_andel = sum(filter(df, år == 2019)$andel)
sum_andel = sum(filter(df, år == 2019)$andel, na.rm = TRUE)
temp = group_by(df, år) %>%
summarise(sum_andel = sum(andel, na.rm = TRUE))
View(temp)
temp = group_by(df, år) %>%
summarise(sum_andel = sum(andel, na.rm = TRUE)) %>%
qplot(data = ., x = år, y = sym_andel)
temp
temp = group_by(df, år) %>%
summarise(sum_andel = sum(andel, na.rm = TRUE)) %>%
qplot(data = ., x = år, y = sum_andel)
temp
utvalg_av_navn = slice_sample(df, fornavn, n = 10)
temp = filter(df, fornavn %in% utvalg_av_navn$fornavn)
ggplot(data = temp, aes(x = år, y = andel)) +
geom_line() +
facet_wrap(vars(fornavn))
ggplot(data = filter(df, fornavn == "Aurora"|fornavn == "Vilde")) +
geom_line(aes(x = år, y = andel, colour = fornavn))
blogdown:::serve_site()
#påkrevd dataformat
df_prophet = filter(df, fornavn == "Vilde") %>%
select(ds = år, y = andel) %>%
mutate(
ds = as.character(ds),
ds = as.Date(ds, format = "%Y"))
#modell
modell = prophet(df_prophet)
framtida = make_future_dataframe(modell, periods = 80, freq = "year")
df_prediksjon = predict(modell, framtida)
#graf
plot(modell, df_prediksjon)
blogdown:::serve_site()
list.files(, '[.]html$')
?file.mtime
?list.files
list.files()
list.files("public", )
list.files("public", recursive = TRUE)
list.files("public", pattern = '[.]html$', recursive = TRUE)
sitemap = list.files("public", pattern = '[.]html$', recursive = TRUE)
write.table(sitemap, "public/sitemap.txt", row.names = FALSE)
?write.table
write.table(sitemap, "public/sitemap.txt", row.names = FALSE, quote = FALSE)
